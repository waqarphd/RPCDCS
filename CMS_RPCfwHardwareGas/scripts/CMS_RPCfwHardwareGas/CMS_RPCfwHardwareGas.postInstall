/**********************************************
  Postinstall file v2.0
  last update: 20.4.2013
  New version
  
  
***********************************************/  
#uses "fwDIP/fwDIP.ctl"
#uses "fwInstallationUtils.ctl"

const string setupname = "RPCConfig";
const string configurationName = "RPCGasSystem_AllIn_V1.0";  
const string RPCDIP_CONFIG_DP = "DIPConfig_RPC"; 
main()
{

 dyn_string exceptionInfo;

 RPCDIP_createConfigDp(); 
 fwInstallationUtils_loadConfigurationDbHardware(configurationName, exceptionInfo,setupname);  

 fsmAdd();
 RPCDIP_addManager();
 
}
fsmAdd()
{
 
  if(fwFsmTree_isNode("RPC_GAS_TOP")) // if top node exist, detete it
                                     fwFsmTree_removeNode("FSM", "RPC_GAS_TOP", 1);
  fwFsmTree_addNode("FSM", "RPC_GAS_TOP", "RPC_TOPGAS", 1);
   fwFsmTree_setNodeLabel("RPC_GAS_TOP","RPC Gas System");
  dyn_string children = makeDynString("Barrel", "Endcap", "Infrastructure");
  for(int i=1; i<=dynlen(children); i++){
   fwFsmTree_addNode("RPC_GAS_TOP",RPCGasGetSysName()+children[i],"RPCGasStatusNode",0); 
    }
  linkGGM();
  fwFsmTree_generateAll();                                     
  fwFsmTree_refreshTree();  
}
void linkGGM(){
    
   dyn_string sysnum,exInfo;
   fwInstallation_getApplicationSystem("CMS_RPCfwGGM",sysnum);
   if(dynlen(sysnum)>0)
   { 
   dyn_string chldren;
   fwTree_getChildren(sysnum[1]+"FSM",chldren,exInfo);
   
    if(dynlen(chldren)==1)
    {
      fwFsmTree_importType("RPC_GGMDevice",strrtrim(sysnum[1],":"));
      fwFsmTree_addNode("RPC_GAS_TOP",sysnum[1]+chldren[1],"RPC_GGMDevice",1);
    }     
  }else
    Debug("Gas Link not found");
}
void RPCDIP_createConfigDp() {
    string configDp=  RPCDIP_CONFIG_DP;
    if (! dpExists(configDp) ) {
      DebugN("RPCDIP: creating " + configDp);      
      dpCreate(configDp, "_FwDipConfig");
    }
    	DebugN("RPCDIP: Setting DIP manager configuration");

 	dpSet(configDp + ".publishName",getHostname()+"_"+rand());
	dpSet(configDp + ".queryTimeout",15);
    
}

int RPCDIP_addManager() {  	
	int result = fwInstallation_appendManager(TRUE, "External Applications DIP Manager", "PVSS00dip", "always",
                                              30, 2, 2, "-num 12 -dns cms-cent-dcs-17,cms-cent-dcs-18 -dip_dp_config "+RPCDIP_CONFIG_DP);

 string resultText;
	switch(result)
	{
		case 1:
			resultText = "OK";
			break;
		case 2:
			resultText = "Already exists";
			break;
		default:
			resultText = "Failed";
			break;
	}

	DebugN("RPCDIP: Adding DIP manager 12 - " + resultText);
  return result;
}
