# ascii dump of database

# DpType (CMS_RPCfwSupervisorInfo.dpl)
TypeName
CMS_RPCInfo.CMS_RPCInfo	1#1
	ConfDB	1#2
		On	25#3
		Stb	25#4
		General	25#5
		HardHierarchy	25#6
		LogHierarchy	25#7
	CompType	1#8
		BarrelHV	25#9
		BarrelLV	25#10
		EndcapHV	25#11
		EndcapLV	25#12
		BarrelT	25#13
	Status	1#14
		library	25#15
		panels	25#18


# Datapoint/DpId (CMS_RPCfwHardwareBarrelConfDBsetup.dpl)
DpName	TypeName	ID
ConfigurationSetups/default	_FwConfigurationDB_setup	181865
ConfigurationSetups/RPCConfig	_FwConfigurationDB_setup	181866
DBConnections/omds_config	_FwDBConnection	207591
DBConnections/devdb	_FwDBConnection	243045
DBConnections/conf_db	_FwDBConnection	250516


# Datapoint/DpId (CMS_RPCfwHardwareBarrelUSC_FSMTypes.dpl)
DpName	TypeName	ID
fwOT_FwCaenCrateSY1527Basic	_FwFsmObjectType	52819
fwOT_FwCaenBoardEasy	_FwFsmObjectType	139097
fwOT_RPC_HV	_FwFsmObjectType	139100
fwOT_RPC_Device	_FwFsmObjectType	139104
fwOT_RPC_SY1527	_FwFsmObjectType	139105
fwOT_RPC_Boards	_FwFsmObjectType	139106
fwOT_RPC_BC	_FwFsmObjectType	139107
fwOT_FwCaenBoardSY1527A1676	_FwFsmObjectType	144212
fwOT_FwCaenChannelMAO	_FwFsmObjectType	269046
fwOT_FwCaenChannelHV	_FwFsmObjectType	269070
fwOT_FwCaenChannelHVCache	_FwFsmObjectType	269194
fwOT_FwCaenChannelHVnoChache	_FwFsmObjectType	269197
fwOT_RPC_MAO	_FwFsmObjectType	269299


# Datapoint/DpId (CMS_RPCfwHardwareBarrelUSC_Plot.dpl)
DpName	TypeName	ID
_FwTrendingQuickPlotDefaults	FwTrendingPlot	26874
vMon_iMonTrend	FwTrendingPlot	57660
HVvMon	FwTrendingPlot	84937
HVvMon1	FwTrendingPlot	84959
LVvMoniMon	FwTrendingPlot	84963
TempTrend2	FwTrendingPlot	105158
TempTrend4	FwTrendingPlot	105159
TempTrend6	FwTrendingPlot	105160
TempTrend3	FwTrendingPlot	105179
TempTrend5	FwTrendingPlot	105180
dpeOverTime	FwTrendingPlot	146434


# Datapoint/DpId (CMS_RPCfwSupervisorInfo.dpl)
DpName	TypeName	ID
CMS_RPCfwSupervisor	CMS_RPCInfo	142621


# DpValue (CMS_RPCfwHardwareBarrelConfDBsetup.dpl)
ElementName	TypeName	_original.._value	_original.._status	_original.._stime
ConfigurationSetups/default.version	_FwConfigurationDB_setup	3	0x101	11.02.2008 15:55:48.372
ConfigurationSetups/default.DBConnection	_FwConfigurationDB_setup	"(none)"	0x101	20.03.2007 13:36:14.631
ConfigurationSetups/default.default	_FwConfigurationDB_setup	0	0x101	20.03.2007 13:36:17.944
ConfigurationSetups/RPCConfig.version	_FwConfigurationDB_setup	3	0x101	11.02.2008 15:55:48.357
ConfigurationSetups/RPCConfig.DBConnection	_FwConfigurationDB_setup	"conf_db"	0x101	04.03.2008 14:26:06.135
ConfigurationSetups/RPCConfig.default	_FwConfigurationDB_setup	1	0x101	20.03.2007 13:36:17.944
DBConnections/omds_config.version	_FwDBConnection	3	0x101	11.02.2008 16:07:49.447
DBConnections/omds_config.description	_FwDBConnection	"omds_config"	0x101	11.02.2008 16:07:49.447
DBConnections/omds_config.dbType	_FwDBConnection	"ORACLE"	0x101	11.02.2008 16:07:49.447
DBConnections/omds_config.dbName	_FwDBConnection	"omds"	0x101	11.02.2008 16:07:49.447
DBConnections/omds_config.dbUser	_FwDBConnection	"CMS_RPC_PVSS_CONFIGURATION"	0x101	11.02.2008 16:07:49.447
DBConnections/omds_config.dbPassword	_FwDBConnection	"BNmuY0RTeN/me8uE"	0x101	11.02.2008 16:07:49.447
DBConnections/omds_config.connectString	_FwDBConnection	"driver=<DRIVER>;uid=<USER>;enc_pwd=<PASSWORD>;database=<DBNAME>;"	0x101	11.02.2008 16:07:49.447
DBConnections/devdb.version	_FwDBConnection	3	0x101	11.02.2008 16:10:25.843
DBConnections/devdb.description	_FwDBConnection	"devdb"	0x101	11.02.2008 16:10:25.843
DBConnections/devdb.dbType	_FwDBConnection	"ORACLE"	0x101	11.02.2008 16:10:25.843
DBConnections/devdb.dbName	_FwDBConnection	"devdb10"	0x101	11.02.2008 16:10:25.843
DBConnections/devdb.dbUser	_FwDBConnection	"cms_rpc_dcs"	0x101	11.02.2008 16:10:25.843
DBConnections/devdb.dbPassword	_FwDBConnection	"11KZpxd6CEb85P/9"	0x101	11.02.2008 16:10:25.843
DBConnections/devdb.connectString	_FwDBConnection	"driver=<DRIVER>;uid=<USER>;enc_pwd=<PASSWORD>;database=<DBNAME>;"	0x101	11.02.2008 16:10:25.843
DBConnections/conf_db.version	_FwDBConnection	3	0x101	04.03.2008 14:25:52.416
DBConnections/conf_db.description	_FwDBConnection	"conf_db"	0x101	04.03.2008 14:25:52.416
DBConnections/conf_db.dbType	_FwDBConnection	"ORACLE"	0x101	04.03.2008 14:25:52.416
DBConnections/conf_db.dbName	_FwDBConnection	"cms_pvss_confdb"	0x101	04.03.2008 14:25:52.416
DBConnections/conf_db.dbUser	_FwDBConnection	"cms_rpc_pvss_conf"	0x101	04.03.2008 14:25:52.416
DBConnections/conf_db.dbPassword	_FwDBConnection	"BNmuY0RTeN/me8uE"	0x101	04.03.2008 14:25:52.416
DBConnections/conf_db.connectString	_FwDBConnection	"driver=<DRIVER>;uid=<USER>;enc_pwd=<PASSWORD>;database=<DBNAME>;"	0x101	04.03.2008 14:25:52.416

# DpValue (CMS_RPCfwHardwareBarrelUSC_FSMTypes.dpl)
ElementName	TypeName	_original.._value	_original.._status64	_original.._stime
fwOT_FwCaenCrateSY1527Basic.panel	_FwFsmObjectType	"FwCaenCrateSY1527|CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCFwCaenCrateSY1527Basic.pnl"	0x200101	26.04.2010 12:57:11.900
fwOT_FwCaenCrateSY1527Basic.components	_FwFsmObjectType	"bool FrontPanOutP.FanFailure
string PWstatus.HvPwSM
string Information.ModelName
bool _CAENOPCServer.Connected
int FrontPanInP.FrontPanIn
", "", "FwCaenCrateSY1527Basic_initialize(string domain, string device)
{
}





", "FwCaenCrateSY1527Basic_valueChanged( string domain, string device,
      bool FrontPanOutP_dot_FanFailure,
      string PWstatus_dot_HvPwSM,
      string Information_dot_ModelName,
      bool _CAENOPCServer_dot_Connected,
      int FrontPanInP_dot_FrontPanIn, 
      string &fwState )
{
        bool kill = getBit(FrontPanInP_dot_FrontPanIn,2);      
        bool ink = getBit(FrontPanInP_dot_FrontPanIn,3);        
	if (FrontPanOutP_dot_FanFailure == 1)
	{
		
         fwState = \"FANFAILURE\";
	}
        else if ((kill)||(ink))
	{
		fwState = \"KILL_RECEIVED\";
	}
	else if (strpos(PWstatus_dot_HvPwSM,\"-\") >= 0)
	{
		fwState = \"POWERSUPPLY_FAILURE\";
	}
	else if (_CAENOPCServer_dot_Connected == 0)
	{
		fwState = \"DISCONNECT\";
	}
        else if (Information_dot_ModelName == \"Ko\")
	{
		fwState = \"DISCONNECT\";
	}
	else 
	{
		fwState = \"OK\";
	}
        
        dpSet(device+\".userDefined\",\"1\");
}







", ""	0x101	26.04.2010 12:58:57.229
fwOT_FwCaenCrateSY1527Basic.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "FANFAILURE", "FwStateAttention1", "", "", "", "KILL_RECEIVED", "FwStateAttention2", "", "", "", "POWERSUPPLY_FAILURE", "FwStateAttention2", "", "", "", "DISCONNECT", "FwStateAttention3", "", "", ""	0x101	26.04.2010 12:58:57.229
fwOT_FwCaenCrateSY1527Basic.actions	_FwFsmObjectType	"OK/KILL", "", "1", "", "0", "OK/CLEAR_ALARMS", "", "1", "", "0", "FANFAILURE/KILL", "", "1", "", "0", "FANFAILURE/CLEAR_ALARMS", "", "1", "", "0", "POWERSUPPLY_FAILURE/KILL", "", "1", "", "0", "POWERSUPPLY_FAILURE/CLEAR_ALARMS", "", "1", "", "0"	0x101	26.04.2010 12:58:57.229
fwOT_FwCaenCrateSY1527Basic.parameters	_FwFsmObjectType		0x101	14.07.2009 15:59:34.565
fwOT_FwCaenBoardEasy.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCFwCaenBoardEasy.pnl"	0x200101	26.04.2010 12:56:33.369
fwOT_FwCaenBoardEasy.components	_FwFsmObjectType	"bool Actual.12VPwS
float Temp.Temp1
bool Actual.Sync
string Information.FmwRelease
", "", "FwCaenBoardEasy_initialize(string domain, string device)
{
}

", "FwCaenBoardEasy_valueChanged ( string domain, string device,
                              bool Actual_dot_12VPwS,
                              float Temp_dot_Temp1,
                              bool Actual_dot_Sync,
                              string Information_dot_FmwRelease,
                              string &fwState )
{
	//DebugN(\"OoO\",device,Actual_dot_12VPwS,Actual_dot_Sync,Information_dot_FmwRelease);
  
  bool flag = true;
  string model;
  dyn_string channels,exInfo;
        
  if ((Actual_dot_12VPwS == true))
	{
		fwState = \"POWER_FAILURE\";
	}
 	else if (Actual_dot_Sync == true)
 	{
     fwState = \"UNPLUGGED\";
     dpGet(device + \".model\",model);
     if(model== \"A3801A\")
     {
        fwDevice_getChildren(device,fwDevice_HARDWARE,channels,exInfo); 
       for(int i = 1 ; i<=dynlen(channels); i++)
       {
         dpSet(channels[i]+\".actual.temperature:_original.._value\",-44.9);
               
         }
     } 
 	}
  else if ((Information_dot_FmwRelease == \"\")||(Information_dot_FmwRelease == \"0\"))
 	{
        fwState = \"UNPLUGGED\";
  }
  else if (Temp_dot_Temp1 > 36)
 	{
 		fwState = \"HIGH_TEMP\";
                
    if (Temp_dot_Temp1 > 42)
    {
    dyn_string devices;
    fwDevice_getChildren(device,fwDevice_HARDWARE,devices,exInfo); 
     for(int i = 1 ; i<=dynlen(devices); i++)
     {
     dpSet(devices[i]+\".settings.onOff:_original.._value\",0);
               
      }
     }
 	}
	else 
	{
   fwState = \"OK\";
   //DebugN(\"OoO\",device,Actual_dot_12VPwS,Actual_dot_Sync,Information_dot_FmwRelease);
	}
}

", "FwCaenBoardEasy_doCommand(string domain, string device, string command)
{
}

"	0x101	26.04.2010 12:58:54.838
fwOT_FwCaenBoardEasy.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "HIGH_TEMP", "FwStateAttention1", "", "", "", "UNPLUGGED", "FwStateAttention3", "", "", "", "POWER_FAILURE", "FwStateAttention3", "", "", "", "OUT_OF_SYNC", "FwStateAttention2", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	26.04.2010 12:58:54.838
fwOT_FwCaenBoardEasy.actions	_FwFsmObjectType		0x101	26.04.2010 12:58:54.838
fwOT_FwCaenBoardEasy.parameters	_FwFsmObjectType		0x141	14.07.2009 15:59:34.581
fwOT_RPC_HV.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCRPC_HV.pnl"	0x200101	26.04.2010 12:58:21.260
fwOT_RPC_HV.components	_FwFsmObjectType		0x141	14.07.2009 15:59:34.581
fwOT_RPC_HV.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR
|when ( $ANY$FwCHILDREN in_state RAMPING_UP )  move_to RAMPING_UP
|when ( $ANY$FwCHILDREN in_state RAMPING_DOWN )  move_to RAMPING_DOWN
|when ( $ALL$FwCHILDREN in_state STANDBY )  move_to STANDBY
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR
|when ( $ANY$FwCHILDREN in_state RAMPING_UP )  move_to RAMPING_UP
|when ( $ANY$FwCHILDREN in_state RAMPING_DOWN )  move_to RAMPING_DOWN
|when ( $ANY$FwCHILDREN in_state OFF )  move_to OFF
|when ( $ANY$FwCHILDREN in_state STANDBY )  move_to STANDBY
|", "", "", "STANDBY", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR
|when ( $ANY$FwCHILDREN in_state RAMPING_UP )  move_to RAMPING_UP
|when ( $ANY$FwCHILDREN in_state RAMPING_DOWN )  move_to RAMPING_DOWN
|when ( $ANY$FwCHILDREN in_state OFF )  move_to OFF
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|", "", "", "RAMPING_UP", "FwStateAttention1", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_UP ) and
( $ANY$FwCHILDREN in_state RAMPING_DOWN ) )  move_to RAMPING_DOWN
|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_UP ) and
( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF
|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_UP ) and
( $ANY$FwCHILDREN in_state STANDBY ) )  move_to STANDBY
|", "", "", "RAMPING_DOWN", "FwStateAttention1", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR
|when ( $ANY$FwCHILDREN in_state RAMPING_UP )  move_to RAMPING_UP
|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_DOWN ) and
( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_DOWN ) and
( $ANY$FwCHILDREN in_state STANDBY ) )  move_to STANDBY
|", "", "", "TRIPPED", "FwStateAttention3", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state RAMPING_UP ) )  move_to RAMPING_UP
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state RAMPING_DOWN ) )  move_to RAMPING_DOWN
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ANY$FwCHILDREN in_state STANDBY ) )  move_to STANDBY
|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED
|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
( $ANY$FwCHILDREN in_state RAMPING_UP ) )  move_to RAMPING_UP
|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
( $ANY$FwCHILDREN in_state RAMPING_DOWN ) )  move_to RAMPING_DOWN
|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
( $ALL$FwCHILDREN in_state OFF ) )  move_to OFF
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
( $ALL$FwCHILDREN in_state STANDBY ) )  move_to STANDBY
|", "", ""	0x101	26.04.2010 12:59:00.822
fwOT_RPC_HV.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "OFF/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "OFF/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "ON/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "ON/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "STANDBY/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "STANDBY/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "STANDBY/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "RAMPING_UP/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "RAMPING_UP/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "RAMPING_UP/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "RAMPING_DOWN/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "RAMPING_DOWN/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "RAMPING_DOWN/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "TRIPPED/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "TRIPPED/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "TRIPPED/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "ERROR/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "ERROR/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0"	0x101	26.04.2010 12:59:00.822
fwOT_RPC_HV.parameters	_FwFsmObjectType		0x101	14.07.2009 16:05:29.767
fwOT_RPC_Device.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCRPC_Device.pnl"	0x200101	26.04.2010 12:58:07.713
fwOT_RPC_Device.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ANY$FwCHILDREN in_state {ON,STANDBY} )  move_to PARTIALLY_ON
|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|when ( $ANY$FwCHILDREN in_state {OFF,STANDBY} )  move_to PARTIALLY_ON
|", "", "", "TRIPPED", "FwStateAttention3", "when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "PARTIALLY_ON", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", ""	0x101	26.04.2010 12:59:00.385
fwOT_RPC_Device.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "OFF/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "OFF/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "ON/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "ON/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "TRIPPED/ON", "", "1", "", "0", "TRIPPED/STANDBY", "", "1", "", "0", "TRIPPED/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "PARTIALLY_ON/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "PARTIALLY_ON/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "PARTIALLY_ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0"	0x101	26.04.2010 12:59:00.369
fwOT_RPC_Device.parameters	_FwFsmObjectType		0x101	14.07.2009 16:05:01.875
fwOT_RPC_SY1527.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCRPC_SY1527.pnl"	0x200101	26.04.2010 12:58:41.666
fwOT_RPC_SY1527.states	_FwFsmObjectType	"NOT_READY", "FwStateOKNotPhysics", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCaenCrateSY1527Basic in_state FANFAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state POWERSUPPLY_FAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state KILL_RECEIVED ) or
( $ANY$FwCaenCrateSY1527Basic in_state DISCONNECT ) )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state OK )  move_to OK
|", "", "", "OK", "FwStateOKPhysics", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCaenCrateSY1527Basic in_state FANFAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state POWERSUPPLY_FAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state KILL_RECEIVED ) or
( $ANY$FwCaenCrateSY1527Basic in_state DISCONNECT ) )  move_to ERROR
|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCaenCrateSY1527Basic not_in_state FANFAILURE ) and
( $ALL$FwCaenCrateSY1527Basic not_in_state POWERSUPPLY_FAILURE ) and
( $ANY$FwCaenCrateSY1527Basic not_in_state KILL_RECEIVED ) and
( $ALL$FwCaenCrateSY1527Basic not_in_state DISCONNECT ) move_to NOT_READY
|", "", ""	0x101	26.04.2010 12:59:01.354
fwOT_RPC_SY1527.actions	_FwFsmObjectType		0x101	26.04.2010 12:59:01.338
fwOT_RPC_SY1527.parameters	_FwFsmObjectType		0x101	14.07.2009 16:05:50.439
fwOT_RPC_Boards.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCRPC_Boards.pnl"	0x200101	26.04.2010 12:57:34.494
fwOT_RPC_Boards.components	_FwFsmObjectType		0x141	14.07.2009 15:59:34.612
fwOT_RPC_Boards.states	_FwFsmObjectType	"NOT_OK", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state {ERROR,UNPLUGGED} ) move_to ERROR|when ( $ALL$FwCHILDREN in_state OK ) move_to OK|", "", "", "OK", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state {ERROR,UNPLUGGED} ) move_to ERROR|when ( $ALL$FwCHILDREN not_in_state OK )  move_to NOT_OK|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN not_in_state {ERROR,UNPLUGGED} ) move_to NOT_OK|", "", ""	0x101	26.04.2010 12:59:00.041
fwOT_RPC_Boards.actions	_FwFsmObjectType		0x101	26.04.2010 12:59:00.041
fwOT_RPC_Boards.parameters	_FwFsmObjectType		0x101	14.07.2009 15:59:34.612
fwOT_RPC_BC.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCRPC_BC.pnl"	0x200101	26.04.2010 12:57:26.979
fwOT_RPC_BC.components	_FwFsmObjectType		0x141	14.07.2009 15:59:34.628
fwOT_RPC_BC.states	_FwFsmObjectType	"NOT_OK", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR|when ( $ALL$FwCHILDREN in_state OK ) move_to OK|", "", "", "OK", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR|when ( $ALL$FwCHILDREN not_in_state OK )  move_to NOT_OK|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN not_in_state ERROR ) move_to NOT_OK|", "", ""	0x101	26.04.2010 12:58:59.807
fwOT_RPC_BC.actions	_FwFsmObjectType		0x101	26.04.2010 12:58:59.807
fwOT_RPC_BC.parameters	_FwFsmObjectType		0x141	14.07.2009 15:59:34.628
fwOT_FwCaenBoardSY1527A1676.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCFwCaenBoardSY1527A1676.pnl"	0x200101	26.04.2010 12:56:42.572
fwOT_FwCaenBoardSY1527A1676.components	_FwFsmObjectType	"int Information.SerNum
", "", "FwCaenBoardSY1527A1676_initialize(string domain, string device)
{
}
", "FwCaenBoardSY1527A1676_valueChanged( string domain, string device,
      int Information_dot_SerNum, string &fwState )
{
	if (Information_dot_SerNum != 0)
	{
		fwState = \"OK\";
	}
	else 
	{
		fwState = \"ERROR\";
	}
}

", ""	0x101	26.04.2010 12:58:55.088
fwOT_FwCaenBoardSY1527A1676.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	26.04.2010 12:58:55.072
fwOT_FwCaenBoardSY1527A1676.actions	_FwFsmObjectType		0x101	26.04.2010 12:58:55.072
fwOT_FwCaenChannelMAO.panel	_FwFsmObjectType	"FwCaenChannel|CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCFwCaenChannelMAO.pnl"	0x200101	26.04.2010 12:57:02.182
fwOT_FwCaenChannelMAO.components	_FwFsmObjectType	"int actual.status
float actual.temp
bool actual.remIlk
bool actual.intFail
", "", "FwCaenChannelMAO_initialize(string domain, string device)
{
}



", "FwCaenChannelMAO_valueChanged( string domain, string device,
      int actual_dot_status,float actual_dot_temp,bool actual_dot_remIlk,
      bool actual_dot_intFail,string &fwState )
{ 
	string channelLogName;   
      //float vMon;  
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject; 
  
  
      if(actual_dot_status==0)   
	{   
		fwState = \"OFF\";    
	}   
	else if((getBit(actual_dot_status, 14)) ||      
	(getBit(actual_dot_status, 9)))   
	{     
		fwState = \"TRIPPED\";     
	}     
	    
	else if (    
	(getBit(actual_dot_status, 3)) ||    
	(getBit(actual_dot_status, 4)) ||     
        (getBit(actual_dot_status, 5)) ||  
        (getBit(actual_dot_status, 7)) ||     
        (getBit(actual_dot_status, 12)))    
	{    
		fwState = \"WARNING\";    
	}      
      else if (getBit(actual_dot_status, 0))      
	{      
	       
            fwState = \"ON\";   
         
                 
	}
      else if ((actual_dot_remIlk)||(actual_dot_intFail))
      {
        
        fwState = \"ERROR\";
        
        }
      else if(actual_dot_temp > 35)
      {
        fwState = \"WARNING\";
        
        if(actual_dot_temp > 40)
        {
          dpSet(device + \".settings.onOff\",0);
          }
        
        }
	else    
	{    
	  fwState = \"ERROR\";    
	} 
}




", "FwCaenChannelMAO_doCommand(string domain, string device, string command)
{
      //int i0set,v0set,pos;    
      string channelLogName;   
      //float vMon;  
       int value; 
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject;  
      if (command == \"OFF\")  
	{  
	channelLogName = fwDU_getLogicalName(device);
        
        
        dpSet(device+\".settings.onOff:_original.._value\",0);
         
                }  
	   
      if (command == \"ON\")    
	{    
	 channelLogName = fwDU_getLogicalName(device);     
        
         dpSet(device+\".settings.onOff:_original.._value\",1);     
 
	}
      
          
       
       if (command == \"CLEAR_ALARM\")
        {
        string status;
        fwDU_getState(domain,device,status);
        dyn_string exc;                  
        dyn_dyn_string hierarchy;                   
        fwDevice_getHierarchy(device,hierarchy,exc);                   
        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
        //string dpe = substr(device,0,strpos(device,\"/bra\"));
        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
        fwDU_setState(domain,device,status);
        }
}




"	0x101	26.04.2010 12:58:56.932
fwOT_FwCaenChannelMAO.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	26.04.2010 12:58:56.916
fwOT_FwCaenChannelMAO.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "ON/ON", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/OFF", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "WARNING/ON", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "ERROR/ON", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0"	0x101	26.04.2010 12:58:56.916
fwOT_FwCaenChannelMAO.parameters	_FwFsmObjectType		0x101	14.07.2009 15:59:34.644
fwOT_FwCaenChannelHV.panel	_FwFsmObjectType	"FwCaenChannel|CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCFwCaenChannelHV.pnl"	0x200101	26.04.2010 12:56:50.588
fwOT_FwCaenChannelHV.components	_FwFsmObjectType	"int actual.status
", "", "FwCaenChannelHV_initialize(string domain, string device)
{       
  
}












", "FwCaenChannelHV_valueChanged( string domain, string device,
      int actual_dot_status,string &fwState )
{ 
  //version 2.5
  // v1s 7k, v1r 9.2k, i1s 50, i1r 10    
  
      dyn_string exceptionInfo; 
      string channelLogName;   
      dyn_dyn_mixed  recipeObject; 
  
   if(actual_dot_status==0)   
	{   
		fwState = \"OFF\";    
	}   
	else if((getBit(actual_dot_status, 8)) ||      
	(getBit(actual_dot_status, 9)))   
	{     
		fwState = \"TRIPPED\";     
	}     
	else if (    
	(getBit(actual_dot_status, 3)) ||    
	(getBit(actual_dot_status, 4)) ||     
        (getBit(actual_dot_status, 5)) ||     
        (getBit(actual_dot_status, 12)))    
	{    
		
    if(getBit(actual_dot_status, 3)){
     string state;      
     fwDU_getState(domain,device,state);
     if(state == \"RAMPING_UP\"){
       int i0;
      dpGet(device+\".settings.i1\",i0);
      dpSet(device+\".settings.i0\",i0);
     
     }    
   
    }
    fwState = \"WARNING\";
                  
	}    
	else if (getBit(actual_dot_status, 1))    
	{    
	
         int i0;
         
         dpGet(device+\".settings.i1\",i0);
         //fwDU_getParameter(domain,device,  \"i0\",i0);
         dpSet(device+\".settings.i0\",i0);
         
         
        fwState = \"RAMPING_UP\";
         
	}    
	else if (getBit(actual_dot_status, 2))    
	{
                
        fwState = \"RAMPING_DOWN\";
          
	}       
  else if (actual_dot_status==1)
        	{
        
        
         // Case on  
          
        
        int enable;
        fwDU_getParameter(domain,device,\"enabled\",enable);
        if(enable==1){ 
        fwDU_setParameter(domain,device,\"enabled\",0);
        string state;      
        fwDU_getState(domain,device,state);
        
        int v0,vmon,v0set;
        //v0 = settings_dot_v0;
        dpGet(device+\".readBackSettings.v0\",v0,device+\".settings.v0\",v0set);
         
        if(v0 < 8800)
              {  
              fwState = \"STANDBY\";
              fwDU_setState(domain,device,\"STANDBY\");
        }
        else{       
              fwState = \"ON\";
              fwDU_setState(domain,device,\"ON\");
        }
             
       //DebugN(\"device: \", fwState, settings_dot_onOff);
        
        bool flag = true;
        int cycle = 0;

        if(v0==v0set){     
        while(flag){
           //  DebugN(\"flag: \", cycle);
          
          dpGet(device+\".actual.vMon\",vmon);
            if((v0-vmon < 20)&&(v0-vmon > -20))
             {
              int imon,inew;
              dpGet(device+\".actual.iMon\",imon,device+\".readBackSettings.i1\",inew);
              if(imon < inew)
              {
              channelLogName = fwDU_getLogicalName(device);
               
              int izero;
              dpGet(device+\".readBackSettings.i0\",izero);
              
              if(izero>inew)
                {
//                  fwConfigurationDB_getRecipeFromCache(\"I0Stable\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
//                  fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo);   
//                  fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);
//                  fwAlertConfig_activate(device+\".actual.iMon\",exceptionInfo); 
//                  dynClear(recipeObject);
                 
                 dpSet(device+\".settings.i0\",inew);
                 
                  
                }
              flag = false;
              }else
                cycle++;
              
            }else if(vmon<200)
              {flag = false;  
            }else
            {
            delay(4,0);
            cycle++;
            }
           delay(2,0);
           if(cycle == 10)
            {
             flag = false;
            channelLogName = fwDU_getLogicalName(device);
           
            dpSet(device+\".userDefined\",\"1\");           
             
           }         
         }
      }

   fwDU_setParameter(domain,device,\"enabled\",1);
   }
  }    
	else    
	{    
	  fwState = \"ERROR\";    
	} 

}













", "FwCaenChannelHV_doCommand(string domain, string device, string command)
{
  // version 2.2
   // v0 6k, v1 9.2k, i0 50, i1 10  
    // v1s-v0 6k, v1r-v1 9.2k, i1s-i0 50, i1r-i1 10    

      //int i0set,v0set,pos;    
      string channelLogName;
      string iHigh = \".settings.i1\";
      string iLow= \".readBackSettings.i1\";;
      string vOn= \".readBackSettings.v1\";;
      string vStb= \".settings.v1\";;   
      
      
      //float vMon;  
       int value; 
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject;  
      if (command == \"OFF\")  
	    {
        string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        
          
	//channelLogName = fwDU_getLogicalName(device);
        int onoff;
        dpGet(device+\".actual.isOn\",onoff);
        if(onoff==1)
        dpSet(device+\".settings.onOff:_original.._value\",0,
              device+\".settings.v0:_original.._value\",100); 
      }  
	   
      if (command == \"ON\")    
	    {    
      
        
        string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        
        int i,v,v0,inew;

         dpGet(device+iHigh,i,device+vOn,v,
               device+\".readBackSettings.v0\",v0,device+\".readBackSettings.i0\",inew);     
         if((v0!=v)||(i!=inew))
         {
           //fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo); 
           dpSet(device+\".settings.i0:_original.._value\",i,
                 device+\".settings.v0:_original.._value\",v);     
           delay(1,0);
 
          }
        int onoff;
        dpGet(device+\".actual.isOn\",onoff);
        if(onoff==0)
         dpSet(device+\".settings.onOff:_original.._value\",1);     
 
	}
      
       if (command == \"STANDBY\")    
	{

         string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        

         int i,v,v0,inew;

         dpGet(device+iHigh,i,device+vStb,v,
               device+\".readBackSettings.v0\",v0,device+\".readBackSettings.i0\",inew);     
         if((v0!=v)||(i!=inew))
         {
           dpSet(device+\".settings.i0:_original.._value\",i);     
           //fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo);
           
           dpSet(device+\".settings.v0:_original.._value\",v); 
           delay(1,0);
  
         }
         int onoff;
        dpGet(device+\".actual.isOn\",onoff);
        if(onoff==0)
         dpSet(device+\".settings.onOff:_original.._value\",1);       
       } 
        
       
       if (command == \"CLEAR_ALARM\")
        {
        string status;
        fwDU_getState(domain,device,status);
        dyn_string exc;                  
        dyn_dyn_string hierarchy;                   
        fwDevice_getHierarchy(device,hierarchy,exc);                   
        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
        //string dpe = substr(device,0,strpos(device,\"/bra\"));
        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
        fwDU_setState(domain,device,status);
        }
             
}













"	0x101	26.04.2010 12:58:55.650
fwOT_FwCaenChannelHV.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "STANDBY", "FwStateOKNotPhysics", "", "", "", "RAMPING_UP", "FwStateAttention1", "", "", "", "RAMPING_DOWN", "FwStateAttention1", "", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	26.04.2010 12:58:55.650
fwOT_FwCaenChannelHV.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "ON/STANDBY", "", "1", "", "0", "ON/ON", "", "1", "", "0", "ON/CLEAR_ALARM", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/STANDBY", "", "1", "", "0", "OFF/OFF", "", "1", "", "0", "OFF/CLEAR_ALARM", "", "1", "", "0", "STANDBY/OFF", "", "1", "", "0", "STANDBY/ON", "", "1", "", "0", "STANDBY/STANDBY", "", "1", "", "0", "STANDBY/CLEAR_ALARM", "", "1", "", "0", "RAMPING_UP/OFF", "", "1", "", "0", "RAMPING_UP/STANDBY", "", "1", "", "0", "RAMPING_UP/ON", "", "1", "", "0", "RAMPING_UP/CLEAR_ALARM", "", "1", "", "0", "RAMPING_DOWN/ON", "", "1", "", "0", "RAMPING_DOWN/OFF", "", "1", "", "0", "RAMPING_DOWN/STANDBY", "", "1", "", "0", "RAMPING_DOWN/CLEAR_ALARM", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "WARNING/STANDBY", "", "1", "", "0", "WARNING/ON", "", "1", "", "0", "WARNING/CLEAR_ALARM", "", "1", "", "0", "TRIPPED/STANDBY", "", "1", "", "0", "TRIPPED/OFF", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "TRIPPED/CLEAR_ALARM", "", "1", "", "0", "ERROR/STANDBY", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0", "ERROR/ON", "", "1", "", "0", "ERROR/CLEAR_ALARM", "", "1", "", "0"	0x101	26.04.2010 12:58:55.650
fwOT_FwCaenChannelHV.parameters	_FwFsmObjectType	"int enabled = 1"	0x101	12.10.2009 09:25:16.866
fwOT_FwCaenChannelHVCache.panel	_FwFsmObjectType	"FwCaenChannel|FwCaenChannelHVCache.pnl"	0x101	14.07.2009 15:59:34.675
fwOT_FwCaenChannelHVCache.components	_FwFsmObjectType	"int actual.status
", "", "FwCaenChannelHVCache_initialize(string domain, string device)
{       
  
}










", "FwCaenChannelHVCache_valueChanged( string domain, string device,
      int actual_dot_status,string &fwState )
{ 
  
  // v1s 6k, v1r 9.2k, i1s 50, i1r 10    
  
  //DebugN(actual_dot_status);
      dyn_string exceptionInfo; 
      
      string channelLogName;   
      //float vMon;  
       
      dyn_dyn_mixed  recipeObject; 
  
      if(actual_dot_status==0)   
	{   
		fwState = \"OFF\";    
	}   
	else if((getBit(actual_dot_status, 8)) ||      
	(getBit(actual_dot_status, 9)))   
	{     
		fwState = \"TRIPPED\";     
	}     
	else if (    
	(getBit(actual_dot_status, 3)) ||    
	(getBit(actual_dot_status, 4)) ||     
        (getBit(actual_dot_status, 5)) ||     
        (getBit(actual_dot_status, 12)))    
	{    
		fwState = \"WARNING\";
                   
	}    
	else if (getBit(actual_dot_status, 1))    
	{    
	
         int i0 ;
         
         channelLogName = fwDU_getLogicalName(device);  
         fwConfigurationDB_getRecipeFromCache(\"I0Ramp\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);	
         fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);
          /*
         
         dpGet(device+\".settings.i1\",i0);
         //fwDU_getParameter(domain,device,  \"i0\",i0);
         dpSet(device+\".settings.i0\",i0);
         */
         
        fwState = \"RAMPING_UP\";
         
	}    
	else if (getBit(actual_dot_status, 2))    
	{
                
        fwState = \"RAMPING_DOWN\";
          
	}       
      else if (actual_dot_status==1)
        	{
        
        
         // Case on  
          
        
        int enable;
        fwDU_getParameter(domain,device,\"enabled\",enable); 
        
        string state;      
        fwDU_getState(domain,device,state);
        
        int v0,vmon;
        //v0 = settings_dot_v0;
        dpGet(device+\".readBackSettings.v0\",v0);
         
        if(v0 < 8800)
              {  
              fwState = \"STANDBY\";
              fwDU_setState(domain,device,\"STANDBY\");
          
            }
        else{       
              fwState = \"ON\";
              fwDU_setState(domain,device,\"ON\");
        
            }
             
       //DebugN(\"device: \", fwState, settings_dot_onOff);
        
        bool flag = true;
        int cycle = 0;

             
        while(flag){
           //  DebugN(\"flag: \", cycle);
          
          dpGet(device+\".actual.vMon\",vmon);
            if((v0-vmon < 10)&&(v0-vmon > -10))
             {
              delay(2,0);
              int imon;
              dpGet(device+\".actual.iMon\",imon);
              if(imon < 10)// it should be gotten from db
              {
              channelLogName = fwDU_getLogicalName(device);
           
           
           fwConfigurationDB_getRecipeFromCache(\"I0Stable\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
           fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo);   
           fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);
           fwAlertConfig_activate(device+\".actual.iMon\",exceptionInfo); 
       //    dpGet(device+\".readBackSettings.i1\",imon);
       //    dpSet(device+\".settings.i0\",imon);
  
           dynClear(recipeObject);
                flag = false;
                }else
                  cycle++;
              
            }else if(vmon<200)
              {flag = false;  
            }else
            {
            delay(4,0);
            cycle++;
            }
  
           if(cycle == 10)
            {
             flag = false;
              channelLogName = fwDU_getLogicalName(device);
           
           
             fwConfigurationDB_getRecipeFromCache(\"I0Stable\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
             fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo);   
             fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);
             fwAlertConfig_activate(device+\".actual.iMon\",exceptionInfo);   
             dynClear(recipeObject);
             
             
           }         
         }
 
   
       }    
	else    
	{    
	  fwState = \"ERROR\";    
	} 

}











", "FwCaenChannelHVCache_doCommand(string domain, string device, string command)
{
  
   // v0 6k, v1 9.2k, i0 50, i1 10  
    // v1s-v0 6k, v1r-v1 9.2k, i1s-i0 50, i1r-i1 10    

         
      string channelLogName;   
      int value; 
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject;  
      
      
      
      
      if (command == \"OFF\")  
	{
        string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        
          
	//channelLogName = fwDU_getLogicalName(device);
        dpSet(device+\".settings.onOff:_original.._value\",0);
         
                }  
	   
      if (command == \"ON\")    
	{    
         int i,v0,v;
        
         string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
         if(status != \"ON\")
          {        
	 channelLogName = fwDU_getLogicalName(device);     
         fwConfigurationDB_getRecipeFromCache(\"cacheON\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
         fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);           
         }
        
  /*                
         dpGet(device+\".settings.i1\",i);     
         dpGet(device+\".readBackSettings.v1\",v);     
         dpGet(device+\".settings.v0\",v0);     
         if(v0!=v)
         {
           dpSet(device+\".settings.i0:_original.._value\",i);     
           fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo); 
         }
         dpSet(device+\".settings.v0:_original.._value\",v);     
        
 */
          delay(1,0);
         
         dpSet(device+\".settings.onOff:_original.._value\",1);     
 
	}
      
       if (command == \"STANDBY\")    
	{

         string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        
        if(status != \"STANDBY\")
          {        
	 channelLogName = fwDU_getLogicalName(device);     
         fwConfigurationDB_getRecipeFromCache(\"cacheSTB\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
         fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);           
         }
        
        /*
         int i,v,v0;

         dpGet(device+\".settings.i1\",i);     
         dpGet(device+\".settings.v1\",v);     
         dpGet(device+\".settings.v0\",v0);     
         if(v0!=v)
         {
           dpSet(device+\".settings.i0:_original.._value\",i);     
           fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo); 
         }
           //dpSet(device+\".settings.i0:_original.._value\",i);     
 
         dpSet(device+\".settings.v0:_original.._value\",v);     
         */
         delay(1,0);
         dpSet(device+\".settings.onOff:_original.._value\",1);       
       } 
        
       
       if (command == \"CLEAR_ALARM\")
        {
        string status;
        fwDU_getState(domain,device,status);
        dyn_string exc;                  
        dyn_dyn_string hierarchy;                   
        fwDevice_getHierarchy(device,hierarchy,exc);                   
        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
        //string dpe = substr(device,0,strpos(device,\"/bra\"));
        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
        fwDU_setState(domain,device,status);
        }
             
}











"	0x101	26.04.2010 12:58:56.135
fwOT_FwCaenChannelHVCache.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "STANDBY", "FwStateOKNotPhysics", "", "", "", "RAMPING_UP", "FwStateAttention1", "", "", "", "RAMPING_DOWN", "FwStateAttention1", "", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	26.04.2010 12:58:56.135
fwOT_FwCaenChannelHVCache.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "ON/STANDBY", "", "1", "", "0", "ON/ON", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/STANDBY", "", "1", "", "0", "OFF/OFF", "", "1", "", "0", "STANDBY/OFF", "", "1", "", "0", "STANDBY/ON", "", "1", "", "0", "STANDBY/STANDBY", "", "1", "", "0", "RAMPING_UP/OFF", "", "1", "", "0", "RAMPING_UP/STANDBY", "", "1", "", "0", "RAMPING_UP/ON", "", "1", "", "0", "RAMPING_DOWN/ON", "", "1", "", "0", "RAMPING_DOWN/OFF", "", "1", "", "0", "RAMPING_DOWN/STANDBY", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "WARNING/STANDBY", "", "1", "", "0", "WARNING/ON", "", "1", "", "0", "TRIPPED/STANDBY", "", "1", "", "0", "TRIPPED/OFF", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "ERROR/STANDBY", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0", "ERROR/ON", "", "1", "", "0"	0x101	26.04.2010 12:58:56.135
fwOT_FwCaenChannelHVCache.parameters	_FwFsmObjectType	"int enabled = 1"	0x101	14.07.2009 15:59:34.690
fwOT_FwCaenChannelHVnoChache.panel	_FwFsmObjectType	"FwCaenChannel|FwCaenChannelHVnoChache.pnl"	0x101	14.07.2009 15:59:34.690
fwOT_FwCaenChannelHVnoChache.components	_FwFsmObjectType	"int actual.status
", "", "FwCaenChannelHVnoChache_initialize(string domain, string device)
{       
  
}










", "FwCaenChannelHVnoChache_valueChanged( string domain, string device,
      int actual_dot_status,string &fwState )
{ 
  
  // v1s 6k, v1r 9.2k, i1s 50, i1r 10    
  
  //DebugN(actual_dot_status);
      dyn_string exceptionInfo; 
      
    //DebugN(actual_dot_vMon, actual_dot_status);
      string channelLogName;   
      //float vMon;  
       
      dyn_dyn_mixed  recipeObject; 
  
      if(actual_dot_status==0)   
	{   
		fwState = \"OFF\";    
	}   
	else if((getBit(actual_dot_status, 8)) ||      
	(getBit(actual_dot_status, 9)))   
	{     
		fwState = \"TRIPPED\";     
	}     
	else if (    
	(getBit(actual_dot_status, 3)) ||    
	(getBit(actual_dot_status, 4)) ||     
        (getBit(actual_dot_status, 5)) ||     
        (getBit(actual_dot_status, 12)))    
	{    
		fwState = \"WARNING\";
                   
	}    
	else if (getBit(actual_dot_status, 1))    
	{    
	
         int i0 ;
         
         dpGet(device+\".settings.i1\",i0);
         //fwDU_getParameter(domain,device,  \"i0\",i0);
         dpSet(device+\".settings.i0\",i0);
         
         
        fwState = \"RAMPING_UP\";
         
	}    
	else if (getBit(actual_dot_status, 2))    
	{
                
        fwState = \"RAMPING_DOWN\";
          
	}       
      else if (actual_dot_status==1)
        	{
        
        
         // Case on  
          
        
        int enable;
        fwDU_getParameter(domain,device,\"enabled\",enable); 
        
        string state;      
        fwDU_getState(domain,device,state);
        
        int v0,vmon;
        //v0 = settings_dot_v0;
        dpGet(device+\".readBackSettings.v0\",v0);
         
        if(v0 < 8800)
              {  
              fwState = \"STANDBY\";
              fwDU_setState(domain,device,\"STANDBY\");
          
            }
        else{       
              fwState = \"ON\";
              fwDU_setState(domain,device,\"ON\");
        
            }
             
       //DebugN(\"device: \", fwState, settings_dot_onOff);
        
        bool flag = true;
        int cycle = 0;

             
        while(flag){
           //  DebugN(\"flag: \", cycle);
          
          dpGet(device+\".actual.vMon\",vmon);
            if((v0-vmon < 10)&&(v0-vmon > -10))
             {
              delay(2,0);
              int imon;
              dpGet(device+\".actual.iMon\",imon);
              if(imon < 10)// it should be got from db
              {
              channelLogName = fwDU_getLogicalName(device);
           
           
           fwConfigurationDB_getRecipeFromCache(\"I0Stable\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
           fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo);   
           fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);
           fwAlertConfig_activate(device+\".actual.iMon\",exceptionInfo); 
           dpGet(device+\".readBackSettings.i1\",imon);
           //fwDU_getParameter(domain,device,  \"i0\",i0);
           dpSet(device+\".settings.i0\",imon);
  
           dynClear(recipeObject);
                flag = false;
                }else
                  cycle++;
              
            }else if(vmon<200)
              {flag = false;  
            }else
            {
            delay(4,0);
            cycle++;
            }
  
           if(cycle == 10)
            {
             flag = false;
              channelLogName = fwDU_getLogicalName(device);
           
           
             fwConfigurationDB_getRecipeFromCache(\"I0Stable\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
             fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo);   
             fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);
             fwAlertConfig_activate(device+\".actual.iMon\",exceptionInfo);   
             dynClear(recipeObject);
             
             
           }         
         }
 
   
       }    
	else    
	{    
	  fwState = \"ERROR\";    
	} 

}











", "FwCaenChannelHVnoChache_doCommand(string domain, string device, string command)
{
  
   // v0 6k, v1 9.2k, i0 50, i1 10  
    // v1s-v0 6k, v1r-v1 9.2k, i1s-i0 50, i1r-i1 10    

      //int i0set,v0set,pos;    
      string channelLogName;   
      //float vMon;  
       int value; 
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject;  
      if (command == \"OFF\")  
	{
        string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        
          
	//channelLogName = fwDU_getLogicalName(device);
        dpSet(device+\".settings.onOff:_original.._value\",0);
         
                }  
	   
      if (command == \"ON\")    
	{    
//	 channelLogName = fwDU_getLogicalName(device);     
//          fwConfigurationDB_getRecipeFromCache(\"cacheON\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
//          fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);           
         int i,v0,v;
//          fwDU_getParameter(domain,device,\"i0\",i);
//          fwDU_getParameter(domain,device,\"v1\",v);         
        
         string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        
          
         dpGet(device+\".settings.i1\",i);     
         dpGet(device+\".readBackSettings.v1\",v);     
         dpGet(device+\".settings.v0\",v0);     
         if(v0!=v)
         {
           dpSet(device+\".settings.i0:_original.._value\",i);     
           fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo); 
         }
         dpSet(device+\".settings.v0:_original.._value\",v);     
         delay(1,0);
         
         dpSet(device+\".settings.onOff:_original.._value\",1);     
 
	}
      
       if (command == \"STANDBY\")    
	{

         string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        

         int i,v,v0;

         dpGet(device+\".settings.i1\",i);     
         dpGet(device+\".settings.v1\",v);     
         dpGet(device+\".settings.v0\",v0);     
         if(v0!=v)
         {
           dpSet(device+\".settings.i0:_original.._value\",i);     
           fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo); 
         }
           //dpSet(device+\".settings.i0:_original.._value\",i);     
 
         dpSet(device+\".settings.v0:_original.._value\",v);     
         delay(1,0);
         dpSet(device+\".settings.onOff:_original.._value\",1);       
       } 
        
       
       if (command == \"CLEAR_ALARM\")
        {
        string status;
        fwDU_getState(domain,device,status);
        dyn_string exc;                  
        dyn_dyn_string hierarchy;                   
        fwDevice_getHierarchy(device,hierarchy,exc);                   
        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
        //string dpe = substr(device,0,strpos(device,\"/bra\"));
        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
        fwDU_setState(domain,device,status);
        }
             
}











"	0x101	26.04.2010 12:58:56.604
fwOT_FwCaenChannelHVnoChache.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "STANDBY", "FwStateOKNotPhysics", "", "", "", "RAMPING_UP", "FwStateAttention1", "", "", "", "RAMPING_DOWN", "FwStateAttention1", "", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	26.04.2010 12:58:56.604
fwOT_FwCaenChannelHVnoChache.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "ON/STANDBY", "", "1", "", "0", "ON/ON", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/STANDBY", "", "1", "", "0", "OFF/OFF", "", "1", "", "0", "STANDBY/OFF", "", "1", "", "0", "STANDBY/ON", "", "1", "", "0", "STANDBY/STANDBY", "", "1", "", "0", "RAMPING_UP/OFF", "", "1", "", "0", "RAMPING_UP/STANDBY", "", "1", "", "0", "RAMPING_UP/ON", "", "1", "", "0", "RAMPING_DOWN/ON", "", "1", "", "0", "RAMPING_DOWN/OFF", "", "1", "", "0", "RAMPING_DOWN/STANDBY", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "WARNING/STANDBY", "", "1", "", "0", "WARNING/ON", "", "1", "", "0", "TRIPPED/STANDBY", "", "1", "", "0", "TRIPPED/OFF", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "ERROR/STANDBY", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0", "ERROR/ON", "", "1", "", "0"	0x101	26.04.2010 12:58:56.604
fwOT_FwCaenChannelHVnoChache.parameters	_FwFsmObjectType	"int enabled = 1"	0x101	14.07.2009 15:59:34.690
fwOT_RPC_MAO.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCRPC_MAO.pnl"	0x200101	26.04.2010 12:58:29.338
fwOT_RPC_MAO.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ANY$FwCHILDREN in_state {ON,STANDBY} )  move_to PARTIALLY_ON
|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|when ( $ANY$FwCHILDREN in_state {OFF,STANDBY} )  move_to PARTIALLY_ON
|", "", "", "TRIPPED", "FwStateAttention3", "when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "PARTIALLY_ON", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", ""	0x101	26.04.2010 12:59:01.119
fwOT_RPC_MAO.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "TRIPPED/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "PARTIALLY_ON/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "PARTIALLY_ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0"	0x101	26.04.2010 12:59:01.104
fwOT_RPC_MAO.parameters	_FwFsmObjectType		0x101	14.07.2009 15:59:34.706

# DpValue (CMS_RPCfwHardwareBarrelUSC_Plot.dpl)
ElementName	TypeName	_original.._value	_original.._status64	_original.._stime
_FwTrendingQuickPlotDefaults.plotTitle	FwTrendingPlot	"Default_Settings_For_QuickPlot"	0x101	20.05.2009 08:20:48.218
_FwTrendingQuickPlotDefaults.dpes	FwTrendingPlot	"{dpe1}", "{dpe2}", "{dpe3}", "{dpe4}", "{dpe5}", "{dpe6}", "{dpe7}", "{dpe8}"	0x101	20.05.2009 08:20:48.218
_FwTrendingQuickPlotDefaults.legendTexts	FwTrendingPlot	"{dpe1}", "{dpe2}", "{dpe3}", "{dpe4}", "{dpe5}", "{dpe6}", "{dpe7}", "{dpe8}"	0x101	20.05.2009 08:20:48.218
_FwTrendingQuickPlotDefaults.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	20.05.2009 08:20:48.218
_FwTrendingQuickPlotDefaults.axii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.05.2009 08:20:48.218
_FwTrendingQuickPlotDefaults.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	20.05.2009 08:20:48.218
_FwTrendingQuickPlotDefaults.legend	FwTrendingPlot	0	0x101	20.05.2009 08:20:48.218
_FwTrendingQuickPlotDefaults.isTemplate	FwTrendingPlot	0	0x101	20.05.2009 08:20:48.234
_FwTrendingQuickPlotDefaults.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.05.2009 08:20:48.234
_FwTrendingQuickPlotDefaults.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.05.2009 08:20:48.234
_FwTrendingQuickPlotDefaults.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.05.2009 08:20:48.234
_FwTrendingQuickPlotDefaults.plotType	FwTrendingPlot	2	0x101	20.05.2009 08:20:48.234
_FwTrendingQuickPlotDefaults.templateName	FwTrendingPlot	""	0x101	20.05.2009 08:20:48.234
_FwTrendingQuickPlotDefaults.timeRange	FwTrendingPlot	3600	0x101	20.05.2009 08:20:48.234
_FwTrendingQuickPlotDefaults.isLogarithmic	FwTrendingPlot	0	0x101	20.05.2009 08:20:48.234
_FwTrendingQuickPlotDefaults.curveTypes	FwTrendingPlot	2, 2, 2, 2, 2, 2, 2, 2	0x101	20.05.2009 08:20:48.249
_FwTrendingQuickPlotDefaults.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	20.05.2009 08:20:48.249
_FwTrendingQuickPlotDefaults.grid	FwTrendingPlot	1	0x101	20.05.2009 08:20:48.249
_FwTrendingQuickPlotDefaults.model	FwTrendingPlot	"Value over time"	0x101	20.05.2009 08:20:48.249
_FwTrendingQuickPlotDefaults.xAxii	FwTrendingPlot		0x141	20.05.2009 08:20:48.249
_FwTrendingQuickPlotDefaults.xDpes	FwTrendingPlot		0x141	20.05.2009 08:20:48.249
_FwTrendingQuickPlotDefaults.xRangeMin	FwTrendingPlot		0x141	20.05.2009 08:20:48.249
_FwTrendingQuickPlotDefaults.xRangeMax	FwTrendingPlot		0x141	20.05.2009 08:20:48.249
_FwTrendingQuickPlotDefaults.xLegendTexts	FwTrendingPlot		0x141	20.05.2009 08:20:48.265
vMon_iMonTrend.plotTitle	FwTrendingPlot	"vMoniMonTrend"	0x101	20.02.2009 17:44:34.767
vMon_iMonTrend.dpes	FwTrendingPlot	"{device}.actual.vMon", "{device}.actual.iMon", "", "", "", "", "", ""	0x101	20.02.2009 17:44:34.767
vMon_iMonTrend.legendTexts	FwTrendingPlot	"VMON", "IMON", "", "", "", "", "", ""	0x101	20.02.2009 17:44:34.783
vMon_iMonTrend.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	20.02.2009 17:44:34.783
vMon_iMonTrend.axii	FwTrendingPlot	1, 1, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.783
vMon_iMonTrend.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	20.02.2009 17:44:34.783
vMon_iMonTrend.legend	FwTrendingPlot	0	0x101	20.02.2009 17:44:34.783
vMon_iMonTrend.isTemplate	FwTrendingPlot	0	0x101	20.02.2009 17:44:34.783
vMon_iMonTrend.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.783
vMon_iMonTrend.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.799
vMon_iMonTrend.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.799
vMon_iMonTrend.plotType	FwTrendingPlot	1	0x101	20.02.2009 17:44:34.799
vMon_iMonTrend.templateName	FwTrendingPlot	""	0x101	20.02.2009 17:44:34.799
vMon_iMonTrend.timeRange	FwTrendingPlot	600	0x101	20.02.2009 17:44:34.799
vMon_iMonTrend.isLogarithmic	FwTrendingPlot	0	0x101	20.02.2009 17:44:34.799
vMon_iMonTrend.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	20.02.2009 17:44:34.814
vMon_iMonTrend.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	20.02.2009 17:44:34.814
vMon_iMonTrend.grid	FwTrendingPlot	1	0x101	20.02.2009 17:44:34.814
vMon_iMonTrend.model	FwTrendingPlot	"Value over time"	0x101	20.02.2009 17:44:34.814
vMon_iMonTrend.xAxii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.814
vMon_iMonTrend.xDpes	FwTrendingPlot	"", "", "", "", "", "", "", ""	0x101	20.02.2009 17:44:34.814
vMon_iMonTrend.xRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.830
vMon_iMonTrend.xRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.830
vMon_iMonTrend.xLegendTexts	FwTrendingPlot	"", "", "", "", "", "", "", ""	0x101	20.02.2009 17:44:34.830
HVvMon.plotTitle	FwTrendingPlot	"HV vMon "	0x101	16.03.2007 11:43:25.605
HVvMon.dpes	FwTrendingPlot	"{channel1}.{parameter}", "{channel2}.{parameter}", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.605
HVvMon.legendTexts	FwTrendingPlot	"vMon", "vMon", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.605
HVvMon.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 11:43:25.605
HVvMon.axii	FwTrendingPlot	1, 1, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.605
HVvMon.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 11:43:25.605
HVvMon.legend	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.605
HVvMon.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.605
HVvMon.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.621
HVvMon.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.621
HVvMon.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.621
HVvMon.plotType	FwTrendingPlot	2	0x101	16.03.2007 11:43:25.621
HVvMon.templateName	FwTrendingPlot	""	0x101	16.03.2007 11:43:25.621
HVvMon.timeRange	FwTrendingPlot	7200	0x101	16.03.2007 11:43:25.621
HVvMon.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.621
HVvMon.curveTypes	FwTrendingPlot	2, 2, 2, 2, 2, 2, 2, 2	0x101	16.03.2007 11:43:25.621
HVvMon.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 11:43:25.636
HVvMon.grid	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.636
HVvMon.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 11:43:25.636
HVvMon.xAxii	FwTrendingPlot		0x141	16.03.2007 11:43:25.636
HVvMon.xDpes	FwTrendingPlot		0x141	16.03.2007 11:43:25.636
HVvMon.xRangeMin	FwTrendingPlot		0x141	16.03.2007 11:43:25.636
HVvMon.xRangeMax	FwTrendingPlot		0x141	16.03.2007 11:43:25.636
HVvMon.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 11:43:25.636
HVvMon1.plotTitle	FwTrendingPlot	"HV vMon 1"	0x101	16.03.2007 11:43:25.652
HVvMon1.dpes	FwTrendingPlot	"{channel1}.{parameter}", "{channel2}.{parameter}", "{channel3}.{parameter}", "{channel4}.{parameter}", "", "", "", ""	0x101	16.03.2007 11:43:25.652
HVvMon1.legendTexts	FwTrendingPlot	"vMon", "vMon", "vMon", "vMon", "", "", "", ""	0x101	16.03.2007 11:43:25.652
HVvMon1.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 11:43:25.652
HVvMon1.axii	FwTrendingPlot	1, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.652
HVvMon1.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 11:43:25.652
HVvMon1.legend	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.652
HVvMon1.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.652
HVvMon1.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.668
HVvMon1.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.668
HVvMon1.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.668
HVvMon1.plotType	FwTrendingPlot	2	0x101	16.03.2007 11:43:25.668
HVvMon1.templateName	FwTrendingPlot	""	0x101	16.03.2007 11:43:25.668
HVvMon1.timeRange	FwTrendingPlot	7200	0x101	16.03.2007 11:43:25.668
HVvMon1.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.668
HVvMon1.curveTypes	FwTrendingPlot	2, 2, 2, 2, 2, 2, 2, 2	0x101	16.03.2007 11:43:25.668
HVvMon1.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 11:43:25.683
HVvMon1.grid	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.683
HVvMon1.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 11:43:25.683
HVvMon1.xAxii	FwTrendingPlot		0x141	16.03.2007 11:43:25.683
HVvMon1.xDpes	FwTrendingPlot		0x141	16.03.2007 11:43:25.683
HVvMon1.xRangeMin	FwTrendingPlot		0x141	16.03.2007 11:43:25.683
HVvMon1.xRangeMax	FwTrendingPlot		0x141	16.03.2007 11:43:25.683
HVvMon1.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 11:43:25.683
LVvMoniMon.plotTitle	FwTrendingPlot	"Lv vMon iMon"	0x101	16.03.2007 11:43:25.699
LVvMoniMon.dpes	FwTrendingPlot	"{channel1}.actual.vMon", "{channel1}.actual.iMon", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.699
LVvMoniMon.legendTexts	FwTrendingPlot	"vMon", "iMon", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.699
LVvMoniMon.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 11:43:25.699
LVvMoniMon.axii	FwTrendingPlot	1, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.699
LVvMoniMon.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 11:43:25.699
LVvMoniMon.legend	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.699
LVvMoniMon.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.699
LVvMoniMon.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.715
LVvMoniMon.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.715
LVvMoniMon.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.715
LVvMoniMon.plotType	FwTrendingPlot	2	0x101	16.03.2007 11:43:25.715
LVvMoniMon.templateName	FwTrendingPlot	""	0x101	16.03.2007 11:43:25.715
LVvMoniMon.timeRange	FwTrendingPlot	7200	0x101	16.03.2007 11:43:25.715
LVvMoniMon.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.715
LVvMoniMon.curveTypes	FwTrendingPlot	2, 2, 2, 2, 2, 2, 2, 2	0x101	16.03.2007 11:43:25.715
LVvMoniMon.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 11:43:25.730
LVvMoniMon.grid	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.730
LVvMoniMon.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 11:43:25.730
LVvMoniMon.xAxii	FwTrendingPlot		0x141	16.03.2007 11:43:25.730
LVvMoniMon.xDpes	FwTrendingPlot		0x141	16.03.2007 11:43:25.730
LVvMoniMon.xRangeMin	FwTrendingPlot		0x141	16.03.2007 11:43:25.730
LVvMoniMon.xRangeMax	FwTrendingPlot		0x141	16.03.2007 11:43:25.730
LVvMoniMon.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 11:43:25.730
TempTrend2.plotTitle	FwTrendingPlot	"Boards temperature"	0x101	16.03.2007 11:43:25.746
TempTrend2.dpes	FwTrendingPlot	"{board1}.Temp.Temp1", "{board2}.Temp.Temp1", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.746
TempTrend2.legendTexts	FwTrendingPlot	"", "", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.746
TempTrend2.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 11:43:25.746
TempTrend2.axii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.746
TempTrend2.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 11:43:25.746
TempTrend2.legend	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.746
TempTrend2.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.746
TempTrend2.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.761
TempTrend2.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.761
TempTrend2.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.761
TempTrend2.plotType	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.761
TempTrend2.templateName	FwTrendingPlot	""	0x101	16.03.2007 11:43:25.761
TempTrend2.timeRange	FwTrendingPlot	3600	0x101	16.03.2007 11:43:25.761
TempTrend2.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.761
TempTrend2.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	16.03.2007 11:43:25.761
TempTrend2.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 11:43:25.777
TempTrend2.grid	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.777
TempTrend2.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 11:43:25.777
TempTrend2.xAxii	FwTrendingPlot		0x141	16.03.2007 11:43:25.777
TempTrend2.xDpes	FwTrendingPlot		0x141	16.03.2007 11:43:25.777
TempTrend2.xRangeMin	FwTrendingPlot		0x141	16.03.2007 11:43:25.777
TempTrend2.xRangeMax	FwTrendingPlot		0x141	16.03.2007 11:43:25.777
TempTrend2.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 11:43:25.777
TempTrend4.plotTitle	FwTrendingPlot	"Boards Temperature"	0x101	16.03.2007 11:43:25.793
TempTrend4.dpes	FwTrendingPlot	"{board1}.Temp.Temp1", "{board2}.Temp.Temp1", "{board3}.Temp.Temp1", "{board4}.Temp.Temp1", "", "", "", ""	0x101	16.03.2007 11:43:25.793
TempTrend4.legendTexts	FwTrendingPlot	"", "", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.793
TempTrend4.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 11:43:25.793
TempTrend4.axii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.793
TempTrend4.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 11:43:25.793
TempTrend4.legend	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.793
TempTrend4.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.793
TempTrend4.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.808
TempTrend4.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.808
TempTrend4.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.808
TempTrend4.plotType	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.808
TempTrend4.templateName	FwTrendingPlot	""	0x101	16.03.2007 11:43:25.808
TempTrend4.timeRange	FwTrendingPlot	3600	0x101	16.03.2007 11:43:25.808
TempTrend4.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.808
TempTrend4.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	16.03.2007 11:43:25.808
TempTrend4.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 11:43:25.824
TempTrend4.grid	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.824
TempTrend4.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 11:43:25.824
TempTrend4.xAxii	FwTrendingPlot		0x141	16.03.2007 11:43:25.824
TempTrend4.xDpes	FwTrendingPlot		0x141	16.03.2007 11:43:25.824
TempTrend4.xRangeMin	FwTrendingPlot		0x141	16.03.2007 11:43:25.824
TempTrend4.xRangeMax	FwTrendingPlot		0x141	16.03.2007 11:43:25.824
TempTrend4.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 11:43:25.824
TempTrend6.plotTitle	FwTrendingPlot	"Boards temperature"	0x101	16.03.2007 11:43:25.840
TempTrend6.dpes	FwTrendingPlot	"{board1}.Temp.Temp1", "{board2}.Temp.Temp1", "{board3}.Temp.Temp1", "{board4}.Temp.Temp1", "{board5}.Temp.Temp1", "{board6}.Temp.Temp1", "", ""	0x101	16.03.2007 11:43:25.840
TempTrend6.legendTexts	FwTrendingPlot	"", "", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.840
TempTrend6.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 11:43:25.840
TempTrend6.axii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.840
TempTrend6.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 11:43:25.840
TempTrend6.legend	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.840
TempTrend6.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.840
TempTrend6.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.855
TempTrend6.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.855
TempTrend6.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.855
TempTrend6.plotType	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.855
TempTrend6.templateName	FwTrendingPlot	""	0x101	16.03.2007 11:43:25.855
TempTrend6.timeRange	FwTrendingPlot	3600	0x101	16.03.2007 11:43:25.855
TempTrend6.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.855
TempTrend6.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	16.03.2007 11:43:25.855
TempTrend6.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 11:43:25.871
TempTrend6.grid	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.871
TempTrend6.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 11:43:25.871
TempTrend6.xAxii	FwTrendingPlot		0x141	16.03.2007 11:43:25.871
TempTrend6.xDpes	FwTrendingPlot		0x141	16.03.2007 11:43:25.871
TempTrend6.xRangeMin	FwTrendingPlot		0x141	16.03.2007 11:43:25.871
TempTrend6.xRangeMax	FwTrendingPlot		0x141	16.03.2007 11:43:25.871
TempTrend6.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 11:43:25.871
TempTrend3.plotTitle	FwTrendingPlot	"Boards temperature"	0x101	16.03.2007 11:43:25.886
TempTrend3.dpes	FwTrendingPlot	"{board1}.Temp.Temp1", "{board2}.Temp.Temp1", "{board3}.Temp.Temp1", "", "", "", "", ""	0x101	16.03.2007 11:43:25.886
TempTrend3.legendTexts	FwTrendingPlot	"", "", "", "", "", "", "", ""	0x101	16.03.2007 11:43:25.886
TempTrend3.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 11:43:25.886
TempTrend3.axii	FwTrendingPlot	1, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.886
TempTrend3.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 11:43:25.886
TempTrend3.legend	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.886
TempTrend3.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.886
TempTrend3.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.902
TempTrend3.yRangeMin	FwTrendingPlot	10, 10, 10, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.902
TempTrend3.yRangeMax	FwTrendingPlot	70, 70, 70, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.902
TempTrend3.plotType	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.902
TempTrend3.templateName	FwTrendingPlot	""	0x101	16.03.2007 11:43:25.902
TempTrend3.timeRange	FwTrendingPlot	3600	0x101	16.03.2007 11:43:25.902
TempTrend3.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.902
TempTrend3.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	16.03.2007 11:43:25.902
TempTrend3.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 11:43:25.918
TempTrend3.grid	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.918
TempTrend3.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 11:43:25.918
TempTrend3.xAxii	FwTrendingPlot		0x141	16.03.2007 11:43:25.918
TempTrend3.xDpes	FwTrendingPlot		0x141	16.03.2007 11:43:25.918
TempTrend3.xRangeMin	FwTrendingPlot		0x141	16.03.2007 11:43:25.918
TempTrend3.xRangeMax	FwTrendingPlot		0x141	16.03.2007 11:43:25.918
TempTrend3.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 11:43:25.933
TempTrend5.plotTitle	FwTrendingPlot	"Board temperature"	0x101	16.03.2007 11:43:25.933
TempTrend5.dpes	FwTrendingPlot	"{board1}.Temp.Temp1", "{board2}.Temp.Temp1", "{board3}.Temp.Temp1", "{board4}.Temp.Temp1", "{board5}.Temp.Temp1", "", "", ""	0x101	16.03.2007 11:43:25.933
TempTrend5.legendTexts	FwTrendingPlot	"Board temperature", "Board temperature", "Board temperature", "Board temperature", "Board temperature", "", "", ""	0x101	16.03.2007 11:43:25.933
TempTrend5.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 11:43:25.933
TempTrend5.axii	FwTrendingPlot	1, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.933
TempTrend5.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 11:43:25.933
TempTrend5.legend	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.933
TempTrend5.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.949
TempTrend5.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 11:43:25.949
TempTrend5.yRangeMin	FwTrendingPlot	10, 10, 10, 10, 10, 0, 0, 0	0x101	16.03.2007 11:43:25.949
TempTrend5.yRangeMax	FwTrendingPlot	70, 70, 70, 70, 70, 0, 0, 0	0x101	16.03.2007 11:43:25.949
TempTrend5.plotType	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.949
TempTrend5.templateName	FwTrendingPlot	""	0x101	16.03.2007 11:43:25.949
TempTrend5.timeRange	FwTrendingPlot	3600	0x101	16.03.2007 11:43:25.949
TempTrend5.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 11:43:25.949
TempTrend5.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	16.03.2007 11:43:25.965
TempTrend5.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 11:43:25.965
TempTrend5.grid	FwTrendingPlot	1	0x101	16.03.2007 11:43:25.965
TempTrend5.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 11:43:25.965
TempTrend5.xAxii	FwTrendingPlot		0x141	16.03.2007 11:43:25.965
TempTrend5.xDpes	FwTrendingPlot		0x141	16.03.2007 11:43:25.965
TempTrend5.xRangeMin	FwTrendingPlot		0x141	16.03.2007 11:43:25.965
TempTrend5.xRangeMax	FwTrendingPlot		0x141	16.03.2007 11:43:25.965
TempTrend5.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 11:43:25.980
dpeOverTime.plotTitle	FwTrendingPlot	"dpeOverTime"	0x101	20.02.2009 17:44:34.830
dpeOverTime.dpes	FwTrendingPlot	"{device}.{param}", "", "", "", "", "", "", ""	0x101	20.02.2009 17:44:34.830
dpeOverTime.legendTexts	FwTrendingPlot	"{legend}", "", "", "", "", "", "", ""	0x101	20.02.2009 17:44:34.830
dpeOverTime.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	20.02.2009 17:44:34.846
dpeOverTime.axii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.846
dpeOverTime.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	20.02.2009 17:44:34.846
dpeOverTime.legend	FwTrendingPlot	0	0x101	20.02.2009 17:44:34.846
dpeOverTime.isTemplate	FwTrendingPlot	0	0x101	20.02.2009 17:44:34.846
dpeOverTime.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.846
dpeOverTime.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.846
dpeOverTime.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	20.02.2009 17:44:34.861
dpeOverTime.plotType	FwTrendingPlot	1	0x101	20.02.2009 17:44:34.861
dpeOverTime.templateName	FwTrendingPlot	""	0x101	20.02.2009 17:44:34.861
dpeOverTime.timeRange	FwTrendingPlot	3600	0x101	20.02.2009 17:44:34.861
dpeOverTime.isLogarithmic	FwTrendingPlot	0	0x101	20.02.2009 17:44:34.861
dpeOverTime.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	20.02.2009 17:44:34.861
dpeOverTime.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	20.02.2009 17:44:34.877
dpeOverTime.grid	FwTrendingPlot	1	0x101	20.02.2009 17:44:34.877
dpeOverTime.model	FwTrendingPlot	"Value over time"	0x101	20.02.2009 17:44:34.877
dpeOverTime.xAxii	FwTrendingPlot		0x141	20.02.2009 17:44:34.877
dpeOverTime.xDpes	FwTrendingPlot		0x141	20.02.2009 17:44:34.877
dpeOverTime.xRangeMin	FwTrendingPlot		0x141	20.02.2009 17:44:34.877
dpeOverTime.xRangeMax	FwTrendingPlot		0x141	20.02.2009 17:44:34.892
dpeOverTime.xLegendTexts	FwTrendingPlot		0x141	20.02.2009 17:44:34.892

# DpValue (CMS_RPCfwSupervisorInfo.dpl)
ElementName	TypeName	_original.._value	_original.._status	_original.._stime
CMS_RPCfwSupervisor.ConfDB.On	CMS_RPCInfo	""	0x101	22.07.2008 09:39:56.051
CMS_RPCfwSupervisor.ConfDB.Stb	CMS_RPCInfo	""	0x101	22.07.2008 09:39:56.066
CMS_RPCfwSupervisor.ConfDB.General	CMS_RPCInfo	"RPCUSCGeneral"	0x101	22.07.2008 09:39:56.066
CMS_RPCfwSupervisor.ConfDB.HardHierarchy	CMS_RPCInfo	"RPCHWUSC_v1.1"	0x101	22.07.2008 09:39:56.066
CMS_RPCfwSupervisor.ConfDB.LogHierarchy	CMS_RPCInfo	"RPCHWUSC_v1.1"	0x101	22.07.2008 09:39:56.066
CMS_RPCfwSupervisor.CompType.BarrelHV	CMS_RPCInfo	"CMS_RPCfwHardwareBarrel
"	0x101	22.07.2008 09:40:22.770
CMS_RPCfwSupervisor.CompType.BarrelLV	CMS_RPCInfo	"CMS_RPCfwHardwareBarrel
"	0x101	22.07.2008 09:40:22.770
CMS_RPCfwSupervisor.CompType.EndcapHV	CMS_RPCInfo	"CMS_RPCfwHardwareBarrel"	0x101	22.07.2008 09:40:22.770
CMS_RPCfwSupervisor.CompType.EndcapLV	CMS_RPCInfo	"CMS_RPCfwHardwareBarrel"	0x101	22.07.2008 09:40:22.786
CMS_RPCfwSupervisor.CompType.BarrelT	CMS_RPCInfo	"CMS_RPCfwHardwareBarrel"	0x101	22.07.2008 09:40:22.786
CMS_RPCfwSupervisor.Status.library	CMS_RPCInfo	"ok"	0x101	22.07.2008 09:40:22.786
CMS_RPCfwSupervisor.Status.panels	CMS_RPCInfo	"ok"	0x101	22.07.2008 09:40:22.786
