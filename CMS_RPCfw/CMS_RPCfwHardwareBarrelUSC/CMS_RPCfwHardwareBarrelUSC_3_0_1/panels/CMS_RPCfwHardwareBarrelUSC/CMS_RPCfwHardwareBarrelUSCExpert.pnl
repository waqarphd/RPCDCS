V 10
1
LANG:1 0 
PANEL,-1 -1 215 441 N "_3DFace" 1
"$2"
E E E E E 1 -1 -1 0  16 12
""0  1
E E 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
14 0
"TEXT_FIELD1"
""
1 16 12 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
0 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 14 10 144 42
3 "0S" 0 0 0 0 0 -1  E E E
13 1
"Go"
""
1 152 12 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 150 10 198 44

T 
1
LANG:1 3 GO!
"main()
{
  if(TEXT_FIELD1.text==\"qaz\")
    EnableAll();
  else
    PanelOff();
    
}
EnableAll()
{
  //Button2.enabled=true;
  //Button4.enabled=true;
  gen.enabled=true;
  Button4.enabled= true;
  Button6.enabled=true;
  //PUSH_BUTTON1.enabled=true;
  //PUSH_BUTTON12.enabled=true;
  
  }" 0
 E E E
13 3
"gen"
""
1 16 56 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 14 54 194 86

T 
1
LANG:1 8 Generate
"main()
{
  dpSet($2+\"CMS_RPCfwSupervisor.Status.library\",\"GEN\");
    
}" 0
 E E E
13 4
"Button2"
""
1 16 100 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 14 98 194 132

T 
1
LANG:1 11 Settavalori
"main()
{

dyn_string list=makeDynString(\".i0\",\".vMaxSoftValue\",\".v0\",
               \".tripTime\",\".rUp\",\".rDwn\");

               
string logName;
float value; 
dyn_string channels = dpNames(\"*\",\"FwCaenChannel\"); 

for(int i = 1; i<=dynlen(channels);i++) 
 { 
  logName = fwDU_getLogicalName(channels[i]);
  //DebugN(logName);
  if(strpos(logName,\"HV\")>1)
  	{
  	HVChann(channels[i]);
    }
   else if((strpos(logName,\"ANA\")>1)||(strpos(logName,\"DIG\")>1))
  	{
  	LVChann(channels[i],logName);
    }
    else if(strpos(logName,\"LBB\")>1)
  	{
  	LBBChann(channels[i],logName);
    }
    //DebugN(channels[i]);  
 } 
DebugN(\"Fin\");
}
HVChann(string dpe)
{
dyn_string list=makeDynString(\".i0\",\".vMaxSoftValue\",\".v0\",
               \".tripTime\",\".rUp\",\".rDwn\");
 
dyn_string value=makeDynString(\"50\",\"9600\",\"100\",\"100\",\"25\",\"100\");         
for(int j=1;j<=dynlen(list);j++)
   		{
    	//dpGet(channels[i]+\".readBackSettings\"+list[j],value); 
      //  DebugN(channels[i],value); 
        dpSet(dpe+\".settings\"+list[j],value[j]);
         DebugN(dpe,value[j]);  
        //dpSet(dpe+\".readBackSettings\"+list[j],value[j]); 
    	}

}
LVChann(string dpe,string logName)
{
dyn_string list=makeDynString(\".i0\",\".vMaxSoftValue\",\".v0\",\".tripTime\");
                              
dyn_string value=makeDynString(\"2\",\"8\",\"7\",\"1\");
	if(strpos(logName,\"DIG\")>1)
          {
          value[3] = 7.5;      
   			value[1] = 3;
                      }
   else
   	 value[1] = 2;
// DebugN(dpe,value);         
for(int j=1;j<=dynlen(list);j++)
   		{
   	
    	//dpGet(channels[i]+\".readBackSettings\"+list[j],value); 
        DebugN(logName,\"-->\",value); 
        dpSet(dpe+\".settings\"+list[j],value[j]);
         if(j==1)
        setI0Alarm(dpe,value[j]);
        //dpSet(dpe+\".readBackSettings\"+list[j],value[j]);  
    	}
    	

}
LBBChann(string dpe,string logName)
{
dyn_string list=makeDynString(\".i0\",\".vMaxSoftValue\",\".v0\",\".tripTime\");
                              
dyn_string value=makeDynString(\"5\",\"3\",\"2.55\",\"1\");

          
for(int j=1;j<=dynlen(list);j++)
   		{
   		if(strpos(logName,\"33\")>1)
   			{
   			value[3] = 3.35;
   			value[2] = 4;
   			value[1] = 10;
                          if((strpos(logName,\"S10\")>1)&&(strpos(logName,\"_1_\")>1))
                  value[1] = 12;
   			}
              
    	//dpGet(channels[i]+\".readBackSettings\"+list[j],value); 
        DebugN(dpe,value); 
        dpSet(dpe+\".settings\"+list[j],value[j]);
         if(j==1)
        setI0Alarm(dpe,value[j]); 
       // dpSet(dpe+\".readBackSettings\"+list[j],value[j]); 
    	}
 dynClear(value);

}" 0
 E E E
13 5
"Button4"
""
1 16 154 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 14 152 194 186

T 
1
LANG:1 5 Alarm
"main()
{
//  AlarmTemp();
SetAlarmDevice();
//SetDeviceConditionDB();
}
void AlarmTemp(){
dyn_string deviceList,exceptionInfo,summary;//=dpAliases(\"*/HV/*\",\"*\");
dynAppend(deviceList,dpAliases(\"*/T/*\",\"*\"));

for (int i=1;i<=dynlen(deviceList);i++)
 {
 dyn_string alertTexts = makeDynString( \"OK\", \"Warning\",\"Error\"),
       aTexts = makeDynString(\"OK\", \"Bad\") ;
 dyn_float limits; 
 dyn_string alertClasses = makeDynString( \"\" ,\"_fwWarningAck.\", \"_fwErrorAck.\"),
       aClasses = makeDynString(\"\", \"_fwErrorAck.\");
  string alertPanel; dyn_string alertPanelParameters; string alertHelp;
 
 deviceList[i]=fwDU_getPhysicalName(deviceList[i]);
 
 
///Set  Alarm channel for Imon
string  channel= deviceList[i]+\".actual.temperature\";
 summary = channel; 
  fwAlertConfig_deactivate(channel,exceptionInfo);  
  limits = makeDynFloat( 23,24 );
  //DebugN(channel);
 fwAlertConfig_set(channel,DPCONFIG_ALERT_NONBINARYSIGNAL ,alertTexts,limits, alertClasses,summary,alertPanel,alertPanelParameters,
             alertHelp,exceptionInfo);
             if (fwConfigurationDB_handleErrors(exceptionInfo)) return;
 fwAlertConfig_activate(channel,exceptionInfo);
}
}
void SetAlarmDevice(){

float diff1,diff2,value;
dyn_string exceptionInfo,split,splitt,summary;
string channelName,channel;

//******************** HV CHANNELS**************************

dyn_string boolAlarms = makeDynString(\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\");
dyn_string deviceList=dpAliases(\"*/HV/*\",\"*\");
// dynAppend(deviceList,dpAliases(\"*/LV/*\",\"*\"));
// dynAppend(deviceList,dpAliases(\"*/LBBLV/*\",\"*\"));
for (int i=1;i<=dynlen(deviceList);i++)
 {
 dyn_string alertTexts = makeDynString( \"OK\", \"Warning\",\"Error\"),
       aTexts = makeDynString(\"OK\", \"Bad\") ;
 dyn_float limits; 
 dyn_string alertClasses = makeDynString( \"\" ,\"_fwWarningAck.\", \"_fwErrorAck.\"),
       aClasses = makeDynString(\"\", \"_fwErrorAck.\");
  string alertPanel; dyn_string alertPanelParameters; string alertHelp;
 
 deviceList[i]=fwDU_getPhysicalName(deviceList[i]);
 dpGet(deviceList[i]+\".settings.i0\", value);
 if(value != 0)
 {
 diff1=value*0.1;//primo limite al 10%
 diff2=value*0.2;//secondo limite al 20%
 
  
///Set  Alarm channel for Imon
 channel= deviceList[i]+\".actual.iMon\";
 
 dynAppend(summary,channel);
 fwAlertConfig_deactivate(channel,exceptionInfo);  
  limits = makeDynFloat( value-diff2,value-diff1 );
  DebugN(channel);
 fwAlertConfig_set(channel,DPCONFIG_ALERT_NONBINARYSIGNAL ,alertTexts,limits, alertClasses,summary,alertPanel,alertPanelParameters,
             alertHelp,exceptionInfo);
             if (fwConfigurationDB_handleErrors(exceptionInfo)) return;
 fwAlertConfig_activate(channel,exceptionInfo);
 }
 //Set Digital alarm for channel
 for(int j =1;j<=dynlen(boolAlarms);j++)
  {
  
  fwAlertConfig_deactivate(deviceList[i]+boolAlarms[j],exceptionInfo); 
  
  fwAlertConfig_set(deviceList[i]+boolAlarms[j], DPCONFIG_ALERT_BINARYSIGNAL, aTexts, 
      limits, aClasses, summary,  alertPanel, alertPanelParameters, alertHelp,  exceptionInfo);
  
  
    
    fwAlertConfig_activate(deviceList[i]+boolAlarms[j],exceptionInfo); 
    dynAppend(summary, deviceList[i]+boolAlarms[j]) ;            
    }
  
  fwAlertConfig_deactivate(deviceList[i]+\".\",exceptionInfo); 
  fwAlertConfig_set(deviceList[i]+\".\",DPCONFIG_SUM_ALERT , aTexts, 
      limits, aClasses, summary,  alertPanel, alertPanelParameters, alertHelp,  exceptionInfo); 
 //DebugN(deviceList[i],exceptionInfo,summary);
 fwAlertConfig_activate(deviceList[i]+\".\",exceptionInfo); 
 dynClear(summary);
  
              
 }

//******************** BOARD Alarm**************************






 DebugN(\"Set Alarm configuration\");
}

SetDeviceConditionDB(){
// Ricorda che dovrebbe partire anche il manager ed essere settato
dyn_string deviceList=dpAliases(\"*/HV/*\",\"*\");
dynAppend(deviceList,dpAliases(\"*/LV/*\",\"*\"));
dynAppend(deviceList,dpAliases(\"*/LBB_LV/*\",\"*\"));
bool configExists; 
string archiveClassName=\"RDB-99) EVENT\"; //Archive's name
int archiveType=DPATTR_ARCH_PROC_SIMPLESM,count=1,value,l;
int smoothProcedure=DPATTR_VALUE_REL_SMOOTH ,pos;//set old/new comparition 
float deadband=2;
float timeInterval=0; 
bool isActive; 
dyn_string exceptionInfo,channels,boards;

for(int i=1;i<=dynlen(deviceList);i++)
{

deviceList[i]=fwDU_getPhysicalName(deviceList[i]);
/*
fwArchive_setMultiple(deviceList[i]+\".actual.iMon\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".actual.vMon\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.i0\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.v0\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
					
fwArchive_setMultiple(deviceList[i]+\".actual.status\" , archiveClassName,archiveType,DPATTR_COMPARE_OLD_NEW ,
					deadband, timeInterval,exceptionInfo);*/
					
pos = strpos(deviceList[i],\"/chann\");
boards[i] = substr(deviceList[i],0,pos); 
}
dynUnique(boards);
DebugN(\"boar\", boards);


for(int i=1;i<=dynlen(boards);i++)
{

fwArchive_setMultiple(boards[i]+\".Temp.Temp1\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
}

dyn_string deviceListT=dpAliases(\"*/T/*\",\"*\");
for(int i=1;i<=dynlen(deviceListT);i++)
{
deviceListT[i]=fwDU_getPhysicalName(deviceListT[i]);
fwArchive_setMultiple(deviceListT[i]+\".actual.temp\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);

}

DebugN(\"Set archiving configuration\");
}" 0
 E E E
13 6
"PUSH_BUTTON12"
""
1 16 202 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 14 200 194 232

T 
1
LANG:1 2 DB
"main()
{
//SetAlarmDevice();
DebugN(\"Start Archiving...\");
  SetDeviceConditionDB();
DebugN(\"Archiving Complete\");
  }

SetDeviceConditionDB(){
// Ricorda che dovrebbe partire anche il manager ed essere settato
dyn_string deviceList=dpAliases(\"*/HV/*\",\"*\");

bool configExists; 
string archiveClassName=\"RDB-99) EVENT\"; //\"ValueArchive_0000\";//Archive's name
int archiveType=DPATTR_ARCH_PROC_SIMPLESM,count=1,value,l;
int smoothProcedure=DPATTR_TIME_AND_VALUE_SMOOTH ,pos;//set old/new comparition 
float deadband=0.2;
float timeInterval=3600; 
bool isActive; 
dyn_string exceptionInfo,channels,boards;

for(int i=1;i<=dynlen(deviceList);i++)
{

deviceList[i]=fwDU_getPhysicalName(deviceList[i]);

fwArchive_setMultiple(deviceList[i]+\".actual.iMon\" , archiveClassName,archiveType,smoothProcedure,
					0.3, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".actual.vMon\" , archiveClassName,archiveType,smoothProcedure,
					10, timeInterval,exceptionInfo);

// Every 3 hours
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.i0\" , archiveClassName,archiveType,DPATTR_OLD_NEW_AND_TIME_SMOOTH,
					deadband, 10000,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.v0\" , archiveClassName,archiveType,DPATTR_OLD_NEW_AND_TIME_SMOOTH,
					deadband, 10000,exceptionInfo);


// Every 6 hours
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.rDwn\" , archiveClassName,archiveType,DPATTR_OLD_NEW_AND_TIME_SMOOTH,
					deadband, 20000,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.rUp\" , archiveClassName,archiveType,DPATTR_OLD_NEW_AND_TIME_SMOOTH,
					deadband, 20000,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.tripTime\" , archiveClassName,archiveType,DPATTR_OLD_NEW_AND_TIME_SMOOTH,
					deadband, 20000,exceptionInfo);
					
// Every Hour
fwArchive_setMultiple(deviceList[i]+\".actual.status\" , archiveClassName,archiveType,DPATTR_OLD_NEW_AND_TIME_SMOOTH,
					deadband, timeInterval,exceptionInfo);
					
// pos = strpos(deviceList[i],\"/chann\");
// boards[i] = substr(deviceList[i],0,pos); 
}
dynClear(deviceList);

//dynAppend(deviceList,dpAliases(\"*/LV/*\",\"*\"));
//dynAppend(deviceList,dpAliases(\"*/LBB_LV/*\",\"*\"));
/*
for(int i=1;i<=dynlen(deviceList);i++)
{

deviceList[i]=fwDU_getPhysicalName(deviceList[i]);

fwArchive_setMultiple(deviceList[i]+\".actual.iMon\" , archiveClassName,archiveType,smoothProcedure,
					0.2, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".actual.vMon\" , archiveClassName,archiveType,smoothProcedure,
					1, timeInterval,exceptionInfo);


fwArchive_setMultiple(deviceList[i]+\".readBackSettings.i0\" , archiveClassName,archiveType,DPATTR_COMPARE_OLD_NEW,
					deadband, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.v0\" , archiveClassName,archiveType,DPATTR_COMPARE_OLD_NEW,
					deadband, timeInterval,exceptionInfo);
					
fwArchive_setMultiple(deviceList[i]+\".actual.status\" , archiveClassName,archiveType,DPATTR_COMPARE_OLD_NEW ,
					deadband, timeInterval,exceptionInfo);
					
// pos = strpos(deviceList[i],\"/chann\");
// boards[i] = substr(deviceList[i],0,pos); 
}

dynClear(deviceList);

*/
dynAppend(deviceList,dpAliases(\"*/T/*\",\"*\"));
/*
for(int i=1;i<=dynlen(deviceList);i++)
{

deviceList[i]=fwDU_getPhysicalName(deviceList[i]);

fwArchive_setMultiple(deviceList[i]+\".actual.temperature\" , archiveClassName,archiveType,DPATTR_TIME_AND_VALUE_SMOOTH,
					0.2, 7200,exceptionInfo);
}


*/
dynClear(deviceList);
dynAppend(deviceList,dpAliases(\"*/Boards/*\",\"*\"));


for(int i=1;i<=dynlen(deviceList);i++)
{
deviceList[i]=fwDU_getPhysicalName(deviceList[i]);
fwArchive_setMultiple(deviceList[i]+\".Temp.Temp1\" , archiveClassName,archiveType,DPATTR_TIME_AND_VALUE_SMOOTH,
					0.2, 7200,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".Information.SerNum\" , archiveClassName,archiveType,DPATTR_COMPARE_OLD_NEW,
					0.2, 7200,exceptionInfo);
}



DebugN(\"Set archiving configuration\");
}
" 0
 E E E
13 7
"PUSH_BUTTON1"
""
1 16 248 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 14 246 194 280

T 
1
LANG:1 13 Refresh Alias
"bool openConnection() {
	return fwRDBConfig_openConnection(\"omds\",\"cms_rpc_PVSS_condition\",\"take_data\");
}

closeConnection() {
	fwRDBConfig_closeConnection();
}
/***********************************************

Check before on devdb 

************************************************/

#uses \"fwRDBArchiving/fwRDBConfig.ctl\"
main()
{
  dyn_string deviceList = dpAliases(\"*RPC*\",\"*\");
//   DebugN(deviceList);
  dyn_string nodes,nodeList = dpNames(\"*\",\"FwNode\");
  string stri;
  for(int i =1 ; i<=dynlen(nodeList);i++)
  {
  dpGet(nodeList[i]+\".type\",stri);
    if(strpos(stri,\"LOGIC\")>-1)
      {
      
      dynAppend(nodes,dpGetAlias(nodeList[i]+\".\"));
        }   
   }
//   DebugN(nodes);
  int pos;
  for(int i =1 ; i<=dynlen(nodes);i++)
  {
    pos = dynContains(deviceList,nodes[i]);
    dynRemove(deviceList,pos);
    }
   DebugN(\"Cis iam:\", deviceList);
   
  dyn_string DPsAdded;
  if (openConnection()) {
for (int i = 1;i<=dynlen(deviceList);i++)
  {
  stri= fwDU_getPhysicalName(deviceList[i]);
  DebugN(stri);
  stri = dpSubStr(stri,DPSUB_SYS_DP);
  writeIntoAliasTableIfNecessary(stri,DPsAdded);
  }
		closeConnection();
		DebugN(\"Aliases updated.\");
	}  
  
}" 0
 E E E
13 8
"Button6"
""
1 18 294 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 16 292 194 320

T 
1
LANG:1 14 access control
"main(){
  
  bool value;
  dpGet(\"CMS_RPCfwSupervisor.Status.access\",value);
  if(value)
    value = false;
  else
    value = true;
  dpSet(\"CMS_RPCfwSupervisor.Status.access\",value); 
  
  
  }" 0
 E E E
13 9
"PUSH_BUTTON13"
""
1 16 332 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 14 330 194 362

T 
1
LANG:1 10 UnGenerate
"main()
{
  dpSet($2+\"CMS_RPCfwSupervisor.Status.library\",\"OK\");
    
}" 0
 E E E
13 10
"PUSH_BUTTON14"
""
1 18 374 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 16 372 196 406

T 
1
LANG:1 11 Clear Alarm
"main()
{
//  AlarmTemp();
clearAlarm();
//SetDeviceConditionDB();
DebugN(\"done\");
}
void clearAlarm()
{
  
  int state;
dyn_string exInfo,deviceList=dpAliases(\"*/HV/*\",\"*\");

dyn_string boolAlarms = makeDynString(\".actual.iMon\",\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\");

 
for (int i=1;i<=dynlen(deviceList);i++)
 {
 deviceList[i]=fwDU_getPhysicalName(deviceList[i]);

 for(int j = 1; j<=dynlen(boolAlarms);j++)
 {
 string  channel= deviceList[i]+boolAlarms[j];
 
dpGet(channel+\":_alert_hdl.._act_state\",state);
if(state > 0)
  {
  fwAlertConfig_acknowledge(channel,exInfo);
  DebugN(channel);
  }
  }
 
 }

}


void AlarmTemp(){
dyn_string deviceList,exceptionInfo,summary;//=dpAliases(\"*/HV/*\",\"*\");
dynAppend(deviceList,dpAliases(\"*/T/*\",\"*\"));

for (int i=1;i<=dynlen(deviceList);i++)
 {
 dyn_string alertTexts = makeDynString( \"OK\", \"Warning\",\"Error\"),
       aTexts = makeDynString(\"OK\", \"Bad\") ;
 dyn_float limits; 
 dyn_string alertClasses = makeDynString( \"\" ,\"_fwWarningAck.\", \"_fwErrorAck.\"),
       aClasses = makeDynString(\"\", \"_fwErrorAck.\");
  string alertPanel; dyn_string alertPanelParameters; string alertHelp;
 
 deviceList[i]=fwDU_getPhysicalName(deviceList[i]);
 
 
///Set  Alarm channel for Imon
string  channel= deviceList[i]+\".actual.temperature\";
 summary = channel; 
  fwAlertConfig_deactivate(channel,exceptionInfo);  
  limits = makeDynFloat( 23,24 );
  //DebugN(channel);
 fwAlertConfig_set(channel,DPCONFIG_ALERT_NONBINARYSIGNAL ,alertTexts,limits, alertClasses,summary,alertPanel,alertPanelParameters,
             alertHelp,exceptionInfo);
             if (fwConfigurationDB_handleErrors(exceptionInfo)) return;
 fwAlertConfig_activate(channel,exceptionInfo);
}
}

void SetAlarmDevice(){

float diff1,diff2,value;
dyn_string exceptionInfo,split,splitt,summary;
string channelName,channel;

//******************** HV CHANNELS**************************

dyn_string boolAlarms = makeDynString(\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\");
dyn_string deviceList=dpAliases(\"*/HV/*\",\"*\");
// dynAppend(deviceList,dpAliases(\"*/LV/*\",\"*\"));
// dynAppend(deviceList,dpAliases(\"*/LBBLV/*\",\"*\"));
for (int i=1;i<=dynlen(deviceList);i++)
 {
 dyn_string alertTexts = makeDynString( \"OK\", \"Warning\",\"Error\"),
       aTexts = makeDynString(\"OK\", \"Bad\") ;
 dyn_float limits; 
 dyn_string alertClasses = makeDynString( \"\" ,\"_fwWarningAck.\", \"_fwErrorAck.\"),
       aClasses = makeDynString(\"\", \"_fwErrorAck.\");
  string alertPanel; dyn_string alertPanelParameters; string alertHelp;
 
 deviceList[i]=fwDU_getPhysicalName(deviceList[i]);
 dpGet(deviceList[i]+\".settings.i0\", value);
 if(value != 0)
 {
 diff1=value*0.1;//primo limite al 10%
 diff2=value*0.2;//secondo limite al 20%
 
  
///Set  Alarm channel for Imon
 channel= deviceList[i]+\".actual.iMon\";
 
 dynAppend(summary,channel);
 fwAlertConfig_deactivate(channel,exceptionInfo);  
  limits = makeDynFloat( value-diff2,value-diff1 );
  DebugN(channel);
 fwAlertConfig_set(channel,DPCONFIG_ALERT_NONBINARYSIGNAL ,alertTexts,limits, alertClasses,summary,alertPanel,alertPanelParameters,
             alertHelp,exceptionInfo);
             if (fwConfigurationDB_handleErrors(exceptionInfo)) return;
 fwAlertConfig_activate(channel,exceptionInfo);
 }
 //Set Digital alarm for channel
 for(int j =1;j<=dynlen(boolAlarms);j++)
  {
  
  fwAlertConfig_deactivate(deviceList[i]+boolAlarms[j],exceptionInfo); 
  
  fwAlertConfig_set(deviceList[i]+boolAlarms[j], DPCONFIG_ALERT_BINARYSIGNAL, aTexts, 
      limits, aClasses, summary,  alertPanel, alertPanelParameters, alertHelp,  exceptionInfo);
  
  
    
    fwAlertConfig_activate(deviceList[i]+boolAlarms[j],exceptionInfo); 
    dynAppend(summary, deviceList[i]+boolAlarms[j]) ;            
    }
  
  fwAlertConfig_deactivate(deviceList[i]+\".\",exceptionInfo); 
  fwAlertConfig_set(deviceList[i]+\".\",DPCONFIG_SUM_ALERT , aTexts, 
      limits, aClasses, summary,  alertPanel, alertPanelParameters, alertHelp,  exceptionInfo); 
 //DebugN(deviceList[i],exceptionInfo,summary);
 fwAlertConfig_activate(deviceList[i]+\".\",exceptionInfo); 
 dynClear(summary);
  
              
 }

//******************** BOARD Alarm**************************






 DebugN(\"Set Alarm configuration\");
}

SetDeviceConditionDB(){
// Ricorda che dovrebbe partire anche il manager ed essere settato
dyn_string deviceList=dpAliases(\"*/HV/*\",\"*\");
dynAppend(deviceList,dpAliases(\"*/LV/*\",\"*\"));
dynAppend(deviceList,dpAliases(\"*/LBB_LV/*\",\"*\"));
bool configExists; 
string archiveClassName=\"RDB-99) EVENT\"; //Archive's name
int archiveType=DPATTR_ARCH_PROC_SIMPLESM,count=1,value,l;
int smoothProcedure=DPATTR_VALUE_REL_SMOOTH ,pos;//set old/new comparition 
float deadband=2;
float timeInterval=0; 
bool isActive; 
dyn_string exceptionInfo,channels,boards;

for(int i=1;i<=dynlen(deviceList);i++)
{

deviceList[i]=fwDU_getPhysicalName(deviceList[i]);
/*
fwArchive_setMultiple(deviceList[i]+\".actual.iMon\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".actual.vMon\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.i0\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
fwArchive_setMultiple(deviceList[i]+\".readBackSettings.v0\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
					
fwArchive_setMultiple(deviceList[i]+\".actual.status\" , archiveClassName,archiveType,DPATTR_COMPARE_OLD_NEW ,
					deadband, timeInterval,exceptionInfo);*/
					
pos = strpos(deviceList[i],\"/chann\");
boards[i] = substr(deviceList[i],0,pos); 
}
dynUnique(boards);
DebugN(\"boar\", boards);


for(int i=1;i<=dynlen(boards);i++)
{

fwArchive_setMultiple(boards[i]+\".Temp.Temp1\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);
}

dyn_string deviceListT=dpAliases(\"*/T/*\",\"*\");
for(int i=1;i<=dynlen(deviceListT);i++)
{
deviceListT[i]=fwDU_getPhysicalName(deviceListT[i]);
fwArchive_setMultiple(deviceListT[i]+\".actual.temp\" , archiveClassName,archiveType,smoothProcedure,
					deadband, timeInterval,exceptionInfo);

}

DebugN(\"Set archiving configuration\");
}" 0
 E E E
13 11
"PUSH_BUTTON15"
""
1 20 410 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
18 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-*-80-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 18 408 112 432

T 
1
LANG:1 13 PUSH_BUTTON15
"main()
{
  setOPCServerStatus(\"rb1527hv\",\"HVB\");
}
 void setOPCServerStatus(string caen,string subsys){
  
  
  dyn_string types;
  types = dpTypes(\"RPCUtils\");
  if(dynlen(types)>0) {    
   if(!dpExists(\"caen\"+subsys+\"ServerStatus\"))
    dpCreate(\"caen\"+subsys+\"ServerStatus\",\"RPCUtils\");
  }
  
  dyn_string obj = dpNames(\"*\"+caen+\"*\",\"FwCaenCrateSY1527\");
  string newDps;
  DebugN(obj);
  if(dynlen(obj)>0)
  {
  string dpe = obj+ \".Information.Sessions\";
  newDps = \"caen\"+subsys+\"ServerStatus.svalue\";
  }else
    DebugN(\"Caen Mainframe not found\");
 
  ///// Set db
string archiveClassName=\"RDB-99) EVENT\"; //\"ValueArchive_0000\";//Archive's name
float timeInterval=3600; 
dyn_string exceptionInfo;

fwArchive_set(newDps, archiveClassName,DPATTR_ARCH_PROC_SIMPLESM,DPATTR_COMPARE_OLD_NEW,
					0.3, timeInterval,exceptionInfo);

/// store interlock
string interlock = obj + \".FrontPanInP.Interlock\";
fwArchive_set(interlock, archiveClassName,DPATTR_ARCH_PROC_SIMPLESM,DPATTR_COMPARE_OLD_NEW,
					0.3, timeInterval,exceptionInfo);

DebugN(exceptionInfo);   
    
}

" 0
 E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0