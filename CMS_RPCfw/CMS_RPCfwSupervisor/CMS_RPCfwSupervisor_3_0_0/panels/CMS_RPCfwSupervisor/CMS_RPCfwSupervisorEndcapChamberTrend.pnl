V 10
1
LANG:1 4 Plot
PANEL,-1 -1 558 400 N "_3DFace" 1
"$2"
"string HV_COMPONENT,LV_COMPONENT;
dyn_string hvchannel,Tchannel;
string Hvch, Tch;
  dyn_string chs;
main()
{
   dyn_string split=strsplit($2,\"_\");
    //   DebugN(\"$2===\",$2,\"split\", split);
//   DebugN(split);
   title.text= \"CHAMBER TREND MONITORING FOR \"+$2;

   string DETECTOR = RPCfwSupervisor_detector($2);  
   HV_COMPONENT = RPCfwSupervisor_getComponent(DETECTOR +\"HV\");      
   dyn_string hvChannels,alias;
   endcapRPCfwSupervisor_getChannelsFromName(split[1]+\"_\"+split[2]+\"_\"+split[3],\"HV\",HV_COMPONENT,hvChannels);
   for(int i=1; i<=dynlen(hvChannels); i++)
   {
      alias[i] = dpGetAlias(hvChannels[i]+\".\");
      if (strpos(alias[i],split[1])>-1  &&  strpos(alias[i],split[2])>-1 &&  strpos(alias[i],split[3])>-1 &&  strpos(alias[i],split[4])>-1)
      {
       dynAppend(hvchannel,alias[i]);   //     DebugN(\"trueee\", hvchannel);
      }
   }
//   DebugN(\"hv channel:\", hvchannel);

  LV_COMPONENT = RPCfwSupervisor_getComponent(DETECTOR +\"LV\");
   dyn_string TChannels,alias;
   endcapRPCfwSupervisor_getChannelsFromName(split[1]+\"_\"+split[2],\"T\",LV_COMPONENT,TChannels);
//   DebugN(\"Tchannels===\",TChannels);
 //  DebugN(\"len of hVchs=\",dynlen(hvChannels), \"T chs len=\", dynlen (TChannels));
   for(int i=1; i<=dynlen(TChannels); i++)
   {
      alias[i] = dpGetAlias(TChannels[i]+\".\");
      if (strpos(alias[i],split[1])>-1  &&  strpos(alias[i],split[2])>-1 &&  strpos(alias[i],split[3])>-1 &&  strpos(alias[i],split[4])>-1)
      {
        dynAppend(Tchannel,alias[i]);     //   DebugN(\"trueee\", Tchannel);        
      }
   }
   
    Hvch  =  fwDU_getPhysicalName(HV_COMPONENT+hvchannel);
    Tch   =  fwDU_getPhysicalName(LV_COMPONENT+Tchannel);
//   DebugN(\"T channel length\", dynlen (Tchannel));
 //for gas 
   string tempsplit;
   if (split[2] == \"EP1\" || split[2] == \"EN1\")
   {    
     if(split[4]==\"C06\"  || split[4]==\"C07\"  || split[4]==\"C08\" || split[4]==\"C09\" || split[4]==\"C10\" || split[4]==\"C11\")       tempsplit=\"C06\";      
     else if(split[4]==\"C12\"  || split[4]==\"C13\"  || split[4]==\"C14\" || split[4]==\"C15\" || split[4]==\"C16\" || split[4]==\"C17\")  tempsplit=\"C12\";     
     else if(split[4]==\"C18\"  || split[4]==\"C19\"  || split[4]==\"C20\" || split[4]==\"C21\" || split[4]==\"C22\" || split[4]==\"C23\")  tempsplit=\"C18\";     
     else if(split[4]==\"C24\"  || split[4]==\"C25\"  || split[4]==\"C26\" || split[4]==\"C27\" || split[4]==\"C28\" || split[4]==\"C29\")  tempsplit=\"C24\";     
     else if(split[4]==\"C30\"  || split[4]==\"C31\"  || split[4]==\"C32\" || split[4]==\"C33\" || split[4]==\"C34\" || split[4]==\"C35\")  tempsplit=\"C30\";     
     else if(split[4]==\"C36\"  || split[4]==\"C01\"  || split[4]==\"C02\" || split[4]==\"C03\" || split[4]==\"C04\" || split[4]==\"C05\")  tempsplit=\"C36\";
   //  DebugN(\"chamber ==\",tempsplit);
   }   
   if (split[2] == \"EP2\" || split[2] == \"EN2\")
   {
       if(split[4]==\"C03\"  || split[4]==\"C04\"  || split[4]==\"C05\")             tempsplit = \"C03\";
       else if(split[4]==\"C06\"  || split[4]==\"C07\"  || split[4]==\"C08\")        tempsplit = \"C06\";
       else if(split[4]==\"C09\"  || split[4]==\"C10\"  || split[4]==\"C11\")        tempsplit = \"C09\";
       else if(split[4]==\"C12\"  || split[4]==\"C13\"  || split[4]==\"C14\")        tempsplit = \"C12\";
       else if(split[4]==\"C15\"  || split[4]==\"C16\"  || split[4]==\"C17\")        tempsplit = \"C15\";
       else if(split[4]==\"C18\"  || split[4]==\"C19\"  || split[4]==\"C20\")        tempsplit = \"C18\";
       else if(split[4]==\"C21\"  || split[4]==\"C22\"  || split[4]==\"C23\")        tempsplit = \"C21\";
       else if(split[4]==\"C24\"  || split[4]==\"C25\"  || split[4]==\"C26\")        tempsplit = \"C24\";
       else if(split[4]==\"C27\"  || split[4]==\"C28\"  || split[4]==\"C29\")        tempsplit = \"C27\";
       else if(split[4]==\"C30\"  || split[4]==\"C31\"  || split[4]==\"C32\")        tempsplit = \"C30\";     
       else if(split[4]==\"C33\"  || split[4]==\"C34\"  || split[4]==\"C35\")        tempsplit = \"C33\";
       else if(split[4]==\"C36\"  || split[4]==\"C01\"  || split[4]==\"C02\")        tempsplit = \"C36\";      
    }  
   if (split[2] == \"EP3\" || split[2] == \"EN3\")
   {
       if(split[4]==\"C01\"  || split[4]==\"C02\"  || split[4]==\"C03\")             tempsplit = \"C01\";
       else if(split[4]==\"C04\"  || split[4]==\"C05\"  || split[4]==\"C06\")        tempsplit = \"C04\";
       else if(split[4]==\"C07\"  || split[4]==\"C08\"  || split[4]==\"C09\")        tempsplit = \"C07\";
       else if(split[4]==\"C10\"  || split[4]==\"C11\"  || split[4]==\"C12\")        tempsplit = \"C10\";
       else if(split[4]==\"C13\"  || split[4]==\"C14\"  || split[4]==\"C15\")        tempsplit = \"C13\";
       else if(split[4]==\"C16\"  || split[4]==\"C17\"  || split[4]==\"C18\")        tempsplit = \"C16\";
       else if(split[4]==\"C19\"  || split[4]==\"C20\"  || split[4]==\"C21\")        tempsplit = \"C19\";
       else if(split[4]==\"C22\"  || split[4]==\"C23\"  || split[4]==\"C24\")        tempsplit = \"C22\";
       else if(split[4]==\"C25\"  || split[4]==\"C26\"  || split[4]==\"C27\")        tempsplit = \"C25\";     
       else if(split[4]==\"C28\"  || split[4]==\"C29\"  || split[4]==\"C30\")        tempsplit = \"C28\";
       else if(split[4]==\"C31\"  || split[4]==\"C32\"  || split[4]==\"C33\")        tempsplit = \"C31\";
       else if(split[4]==\"C34\"  || split[4]==\"C35\"  || split[4]==\"C36\")        tempsplit = \"C34\";          
     //  DebugN(\"chamber ==\",tempsplit);
   }

   string station, ring;
   strreplace(split[3],\"R\",\"R0\");
   if (split[2] == \"EN1\")          station = \"EM1\";
   else    if (split[2] == \"EN2\")  station = \"EM2\";
   else    if (split[2] == \"EN3\")  station = \"EM3\";
   else    if (split[2] == \"EP1\")  station = \"EP1\";
   else    if (split[2] == \"EP2\")  station = \"EP2\";
   else    if (split[2] == \"EP3\")  station = \"EP3\";
//   DebugN(\"ring ===\", split[3], \"station ==\", station, \"chamber=\", tempsplit);
   string sysGas = RPCfwSupervisor_getComponent(\"Services\");
   dyn_string gaschs = dpNames(sysGas+\"E\"+\"*\", \"RPCGasChannel\");
   dynClear (chs);
   for (int i=1; i<=dynlen(gaschs);i++)
      if (strpos(gaschs[i], station)>-1  && strpos(gaschs[i], split[3])>-1 && strpos(gaschs[i], tempsplit)>-1)
          {
     //        DebugN(\"gas trueeee\", gaschs[i]);
             dynAppend(chs,gaschs[i]);
          }
//  DebugN(chs);   
    
//     int t1,t2;
//     dpGet(HV_COMPONENT+Hvch+\".actual.iMon\", t1);
//     dpGet(HV_COMPONENT+Hvch+\".actual.vMon\", t2);    
//      DebugN(Hvch,Tch);        DebugN(\"dpget===\",t1,t2);    
     
     
 int f1= dpConnect(\"refresh\", TRUE, gaschs[1]+ \".flowIn\", gaschs[1]+ \".flowOut\",gaschs[2]+ \".flowIn\",gaschs[2]+ \".flowOut\");  
 if(f1==-1) { DebugN(\"failure  gaschs[1]+ .flowIn \");}
 //    int f1= dpConnect(\"refresh\", TRUE, gaschs[1]+ \".flowIn\");  if(f1==-1) { DebugN(\"failuregaschs[1]+ .flowIn \")}
 //  int f2= dpConnect(\"refresh\", TRUE, gaschs[1]+ \".flowOut\");   if(f2==-1) { DebugN(\"failuregaschs[1]+ .flowout \")}
 //  int f3= dpConnect(\"refresh\", TRUE, gaschs[2]+ \".flowIn\");    if(f3==-1) { DebugN(\"failuregaschs[2]+ .flowIn \")}
 //  int f4= dpConnect(\"refresh\", TRUE, gaschs[2]+ \".flowOut\");   if(f4==-1) { DebugN(\"failuregaschs[2]+ .flowout \")}
 
   }

refresh(string dpe, mixed value)
{
   float Din, Dout, Uin,Uout;
   float Ain, Aout, Bin , Bout;
   dyn_string tempIn, tempOut;
 //  DebugN(\"gas==\",chs);
   dynClear (tempIn)  ;             dynClear (tempOut) ;   
   dpGet(chs[1]+\".flowIn\",  Ain);   dpGet(chs[1]+\".flowOut\", Aout);
   dpGet(chs[2]+\".flowIn\",  Bin);   dpGet(chs[2]+\".flowOut\", Bout);   
   
   Din=Ain;
   Dout=Aout;
   Uin=Bin;
   Uout=Bout;
   DebugN(Din, Dout, Uin,Uout);
      
   if      (Din < Uin   )          {     dynAppend (tempIn, chs[1]);   }
   else                           {     dynAppend (tempIn, chs[2]);   }   

   
   if      (Dout < Uout )          {     dynAppend (tempOut, chs[1]);  }
   else                           {     dynAppend (tempOut, chs[2]);  }

 //  DebugN(Din, Dout, Uin,Uout);     DebugN(\"temp : \" ,tempIn, tempOut);
   if(dynlen(Tchannel)<1)
   {
   int index, pos;
   index=1; pos=1;   
   int x,y;
   float xSize,ySize;
   dyn_string exceptionInfo,parameters,values,parent=makeDynString(\"\",\"\");
   string dpTrendName,channelLogName;
   dpTrendName=\"four\";
   parameters=makeDynString(\"channel1\",\"channel2\",\"channel3\",\"channel4\",
                         \"value1\",\"value2\",\"value3\",\"value4\",
                         \"param1\",\"param2\",\"param3\",\"param4\");
   values = makeDynString(HV_COMPONENT+Hvch,HV_COMPONENT+Hvch,tempIn, tempOut,
                       \"actual.iMon\",\"actual.vMon\",\"flowIn\",\"flowOut\",
                       \"IMON\",\"VMON\",\"FlowIn\",\"FlowOut\");
getValue(\"Borde\"+pos,\"position\",x,y);
getValue(\"Borde\"+pos,\"size\",xSize,ySize);
DebugN(x,y,xSize,ySize,pos);
fwTrending_addFaceplate(myModuleName(), myPanelName(), \"Trend\"+pos,RPCfwSupervisor_getSupervisorSys()+dpTrendName,
							parameters, values,x,y, exceptionInfo);
      if(dynlen(exceptionInfo) > 0)
	{
	fwExceptionHandling_display(exceptionInfo);
	return;
	}   
   }
   else
   {     
   int index, pos;
   index=1; pos=1;   
   int x,y;
   float xSize,ySize;
   dyn_string exceptionInfo,parameters,values,parent=makeDynString(\"\",\"\");
   string dpTrendName,channelLogName;
   dpTrendName=\"five\";
   parameters=makeDynString(\"channel1\",\"channel2\",\"channel3\",\"channel4\",\"channel5\",
                         \"value1\",\"value2\",\"value3\",\"value4\",\"value5\",
                         \"param1\",\"param2\",\"param3\",\"param4\",\"param5\");
   values = makeDynString(HV_COMPONENT+Hvch,HV_COMPONENT+Hvch,tempIn, tempOut,LV_COMPONENT+Tch,
                       \"actual.iMon\",\"actual.vMon\",\"flowIn\",\"flowOut\",\"actual.temperature\",
                       \"IMON\",\"VMON\",\"FlowIn\",\"FlowOut\",\"Temp\");
getValue(\"Borde\"+pos,\"position\",x,y);
getValue(\"Borde\"+pos,\"size\",xSize,ySize);
DebugN(x,y,xSize,ySize,pos);
fwTrending_addFaceplate(myModuleName(), myPanelName(), \"Trend\"+pos,RPCfwSupervisor_getSupervisorSys()+dpTrendName,
							parameters, values,x,y, exceptionInfo);
      if(dynlen(exceptionInfo) > 0)
	{
	fwExceptionHandling_display(exceptionInfo);
	return;
	}   
   
    }

   }



" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "//plotHistory($wheel,sector,chamb,hvCh,sysGas,$LVsys,1,1);
void plotHistory(string wheel, string sec,string cham, string value,string gasSys,string lvSys, int index,int pos)
{
  int x,y;
float xSize,ySize;
dyn_string exceptionInfo,parameters,values,parent=makeDynString(\"\",\"\");
string dpTrendName,channelLogName;

dpTrendName=\"five\";
string wh = substr(wheel,strpos(wheel,\"W\"));
dyn_string gas = dpNames(gasSys+wh+\"*\"+sec+\"*\"+substr(cham,0,3)+\"*\",\"RPCGasChannel\");

 
string tchs = getTCh(lvSys,wh,sec,cham);

if(dynlen(gas)==2)
  if(strpos(cham ,\"minus\")>0)
    gas = dpNames(gasSys+wh+\"*\"+sec+\"*\"+substr(cham,0,3)+\"L*\",\"RPCGasChannel\");
  else
    gas = dpNames(gasSys+wh+\"*\"+sec+\"*\"+substr(cham,0,3)+\"R*\",\"RPCGasChannel\");
  
  
//DebugN(sec,cham,wh,gas,tchs);



parameters=makeDynString(\"channel1\",\"channel2\",\"channel3\",\"channel4\",\"channel5\",
                         \"value1\",\"value2\",\"value3\",\"value4\",\"value5\",
                         \"param1\",\"param2\",\"param3\",\"param4\",\"param5\");
values = makeDynString(value,value,gas[1],gas[1],tchs,
                       \"actual.iMon\",\"actual.vMon\",\"flowIn\",\"flowOut\",\"actual.temperature\",
                       \"IMON\",\"VMON\",\"FlowIn\",\"FlowOut\",\"Temp\");
channelLogName= fwDU_getLogicalName(value);
//setValue(\"Text\"+index1,\"text\",channelLogName+\" vMon & iMon Trend\");
	
getValue(\"Borde\"+pos,\"position\",x,y);
getValue(\"Borde\"+pos,\"size\",xSize,ySize);
DebugN(x,y,xSize,ySize,pos);
fwTrending_addFaceplate(myModuleName(), myPanelName(), \"Trend\"+pos,
											RPCfwSupervisor_getSupervisorSys()+dpTrendName,
											parameters,
											values,
											x,y, exceptionInfo);

if(dynlen(exceptionInfo) > 0)
	{
	fwExceptionHandling_display(exceptionInfo);
	return;
	}



  }
string getTCh(string sys,string wh,string sec,string ch)
{
 
  string result;
  string alias;
  dyn_string exInfo,nodes, children;
  fwNode_getNodes(sys, fwDevice_LOGICAL, nodes, exInfo);
  // DebugN(nodes);
     for(int i = 1; i <= dynlen(nodes); i++)
      {
        alias = dpGetAlias(nodes[i] + \".\");
	//DebugN(nodes[i], alias);
	nodes[i] = sys + alias;
      
      if(strpos(nodes[i],\"T\")>1)  
        fwDevice_getChildren(nodes[i], fwDevice_LOGICAL, children, exInfo);		                        
      
      }
//     DebugN(children);
     for(int i = 1; i<=dynlen(children);i++)
     {
     //  DebugN(children[i]);
     if((strpos(children[i],wh)>-1))  
            if((strpos(children[i],sec)>-1))
                   if((strpos(children[i],ch)>-1))
                   {
                   return sys + fwDU_getPhysicalName(children[i]);
                   break; 
                   }
                   else if(strpos(children[i],substr(ch,0,4))>-1)
                   {
                   return sys + fwDU_getPhysicalName(children[i]);
                   break; 
                     }
   }
     return ch;  //\"\";
  
  }

" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
6 1
"Borde1"
""
1 20 90 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1 0 1 30 -20 1 E 20 90 460 320
2 2
"title"
""
1 20.2806236080178 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.14031180400891 0 1 -2.52561247216036 0 1 E 20 10 465 50
0 2 2 "0s" 0 0 0 65 0 0  20 10 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-16-*-100-100-*-*-iso8859-1|-16,0,0,0,758,0,1,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 0 
13 3
"PUSH_BUTTON1"
""
1 230 350 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 228 348 342 382

T 
1
LANG:1 6 Close

"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
13 4
"PUSH_BUTTON2"
""
1 60 360 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 58 358 122 362

T 
1
LANG:1 12 PUSH_BUTTON2
E E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0