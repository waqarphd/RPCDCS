V 11
1
LANG:1 8 (NoName)
PANEL,-1 -1 739 712 N "_3DFace" 1
"$channel"
"main()
{
  dyn_string exceptionInfo;
//This function creates a callback to the function passed as //first parameter every time the user logged in changes
 fwAccessControl_setupPanel( \"ApplyPanelAccessControl\", exceptionInfo);

}" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "dyn_string gListOfDpElementToConnect, gListOfSettingsDpElement,exceptionInfo;
int row;
DisableAllInPanel()
{
tableParaView.enabled = FALSE;
Button1.enabled = FALSE;
Button3.enabled = FALSE;
on.enabled =FALSE;
off.enabled = FALSE;
newvalue.enabled = false;
confirm.enabled = false;
select.enabled = false;

 }
enableControl(){
//on.enabled =TRUE;
off.enabled = TRUE;
   }
enableDebug(){
tableParaView.enabled = TRUE;
Button1.enabled = TRUE;
Button3.enabled = TRUE;
on.enabled =TRUE;
off.enabled = TRUE;
newvalue.enabled = true;
confirm.enabled = true;
select.enabled = true;
 
  }
void ApplyPanelAccessControl(string s1, string s2) // s1 and s2 are not //used
{
bool hasDebug, hasControl;
dyn_string exceptionInfo;
// revoke all previous rights:
DisableAllInPanel(); //here you can call a function that disables //all buttons in the panel
// check privileges:
fwAccessControl_isGranted( \"CMS_RPC:Control\", hasControl, exceptionInfo); //this function checks if the user logged in has the //priviledge passed as first parameter
fwAccessControl_isGranted( \"CMS_RPC:Debug\", hasDebug, exceptionInfo); //this function checks if the user logged in has the //priviledge passed as first parameter
if (dynlen(exceptionInfo)) { fwExceptionHandling_display(exceptionInfo); return;}
// enable/disable panel functionality:
//hasDebug = 1;
if (hasControl) enableControl();
if (hasDebug) enableDebug();
}
" 0
 2
"CBRef" "0"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 17
"Text7"
""
1 36 55 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  dyn_string exceptionInfo;
//This function creates a callback to the function passed as //first parameter every time the user logged in changes
if(ACCESS_DCS) fwAccessControl_setupPanel( \"ApplyPanelAccessControl\", exceptionInfo);
}" 0
 E 0 1 1 0 1 E U  0 E 12 12 227 35
0 2 0 "0s" 0 0 0 192 0 0  12 12 1
1
LANG:1 26 Arial,-1,19,5,40,0,0,0,0,0
0 1
LANG:1 22 CAEN Channel Operation
2 86
"LastModifiedText"
""
1 593 494 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
85 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 373 367 488 384
0 2 2 "0s" 0 0 0 192 0 0  373 367 1
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0 1
LANG:1 19 vMon Last Modified:
30 105
"Frame1"
""
1 20 698 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
100 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E 1 0 1 0 10 0 E 20 638 210 698
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0 1
LANG:1 8 Commands
2 125
"Text1"
""
1 350 26 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
114 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 352 28 436 44
0 2 0 "0s" 0 0 0 66 0 0  352 28 1
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0 1
LANG:1 4 Ring
2 126
"Text2"
""
1 362 60 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
115 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 364 62 438 82
0 2 0 "0s" 0 0 0 66 0 0  364 62 1
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0 1
LANG:1 8 Position
25 38
"tableParaView"
""
1 5 96 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E "dyn_string gListOfDpElementToConnect, gListOfSettingsDpElement,setvalue;


main()
{	int xpos,i;
	string columnName;
	int columnNr, value;
		
	// get the shape of the table
	shape tab = getShape(\"tableParaView\");
	
	// get the coordinates of the current cell
	getValue(tab, \"currentCell\", xpos, columnNr);
	//DebugN(xpos,columnNr);
	columnName = tab.currentColumn();
	//DebugN(columnName);
	//DebugN(\"questo è $channel\",$channel);


gListOfSettingsDpElement =  makeDynString($channel + \".settings.v0\",
					$channel + \".settings.v1\",
					$channel + \".settings.i0\",
					$channel + \".settings.i1\",
					$channel + \".settings.rDwn\",
					$channel + \".settings.rUp\",
					$channel + \".settings.tripTime\",
					$channel + \".settings.vMaxSoftValue\");
					
	//DebugN(\"dist_1:CAEN/CaenSY1527/board02/channel000.readBackSettings.v0:_online.._value\");

gListOfDpElementToConnect = makeDynString($channel + \".readBackSettings.v0\",
						$channel + \".readBackSettings.v1\",
						$channel + \".readBackSettings.i0\",
						$channel + \".readBackSettings.i1\",
						$channel + \".readBackSettings.rDwn\",
						$channel + \".readBackSettings.rUp\",
						$channel + \".readBackSettings.tripTime\",
						$channel + \".readBackSettings.vMaxSoftValue\");


int lenDpe = dynlen(gListOfDpElementToConnect);
for( i=1; i<=lenDpe; i++)
	
	{
	if(((i-1) == xpos) && (columnNr == 2))
		{
		//dpGet(gListOfSettingsDpElement[i] + \":_online.._value\", setvalue[i]);
		this.cellValue(\"Ok\");
		string CName= tableParaView.columnName(1); 
		getValue(tab, \"cellValueRC\", xpos, CName , setvalue[i]);
		float value = setvalue[i] ;
		//DebugN(setvalue[i]);
		dpSet(gListOfSettingsDpElement[i] + \":_original.._value\", setvalue[i]);
		//DebugN(this.cellValue);
		}
	}

}" 0

37 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  6 94 380 342
"dyn_string gListOfDpElementToConnect, gListOfSettingsDpElement;

main()
{
	dyn_string  listOfElement,listOfUnit,
				 temp, unit, detail,setvalue,setvalueReadBack;
	int i, lenDpe, lenDp, rowNbr,lenS;
	string dpName,dpe,exceptionInfo;
	
	this.sortOnClick = FALSE;	
	
	listOfElement = makeDynString(\"v0\", \"v1\", \"i0\", \"i1\", \"Ramp down\", \"Ramp up\", \"Trip time\", \"v soft limit\");
	listOfUnit = makeDynString(\"V\", \"V\", \"A\", \"A\", \"V/s\", \"V/s\", \"s\", \"V\");
        int pos = strpos(fwDU_getLogicalName($channel),\"HV\");
        if(pos>0)
        {
         listOfUnit[3] = \"uA\"; 
         listOfUnit[4] = \"uA\"; 
         
         
         }
	gListOfSettingsDpElement = makeDynString(	$channel + \".settings.v0\",
												$channel + \".settings.v1\",
												$channel + \".settings.i0\",
												$channel + \".settings.i1\",
												$channel + \".settings.rDwn\",
												$channel + \".settings.rUp\",
												$channel + \".settings.tripTime\",
												$channel + \".settings.vMaxSoftValue\");

	lenS = dynlen(gListOfSettingsDpElement);
	for(i = 1; i <= lenS; i++ ) 
	{
		if(!dpExists(gListOfSettingsDpElement[i]))
		{
			fwException_raise(	exception,
								\"ERROR\", 
								\"The data point element\" + gListOfSettingsDpElement[i] + \" does not exist.\", 
								\"\");
			this.cellBackColRC(i - 1, \"settings\", \"DpDoesNotExist\");
		}
		else 
		{
			dpName = dpSubStr(gListOfSettingsDpElement[i], DPSUB_SYS_DP_EL);
			dpe = gListOfSettingsDpElement[i];
  			gListOfSettingsDpElement[i] = dpName;
  		//DebugN(dpe,dpName);
			if(dpConnect(\"_fwSettingsDataCB\", dpe + \":_online.._value\") == -1) 
  				{
  					fwException_raise(	exceptionInfo, 
  										\"INFO\", 
  										\"Connecting to the data point element\" + dpe + \" was unsuccessful.\", 
  										\"\");
					this.cellBackColRC(i - 1, \"settings\", \"DpDoesNotExist\");
		}
			
	}

	gListOfDpElementToConnect = makeDynString(	$channel + \".readBackSettings.v0\",
												$channel + \".readBackSettings.v1\",
												$channel + \".readBackSettings.i0\",
												$channel + \".readBackSettings.i1\",
												$channel + \".readBackSettings.rDwn\",
												$channel + \".readBackSettings.rUp\",
												$channel + \".readBackSettings.tripTime\",
												$channel + \".readBackSettings.vMaxSoftValue\");

	lenDpe = dynlen(gListOfDpElementToConnect);
	lenDp = dynlen(listOfElement);
	
	if(lenDpe > lenDp)
		rowNbr = lenDpe;
	else
		rowNbr = lenDp;
		
	for(i = 1; i <= lenDpe; i++) 
	
	{
		unit[i] = listOfUnit[i];
		detail[i] = \"Details\";
		dpGet(gListOfSettingsDpElement[i] + \":_online.._value\", setvalue[i]);
		dpGet(gListOfDpElementToConnect[i] + \":_online.._value\", setvalueReadBack[i]);
		
		if(dpConnect(\"_fwReadBackDataCB\", gListOfDpElementToConnect[i] + \":_online.._value\") == -1) 
  				{
  					fwException_raise(	exceptionInfo, 
  										\"INFO\", 
  										\"Connecting to the data point element\" + dpe + \" was unsuccessful.\", 
  										\"\");
					this.cellBackColRC(i - 1, \"settings\", \"DpDoesNotExist\");
				}
		gListOfDpElementToConnect[i] = dpSubStr(gListOfDpElementToConnect[i], DPSUB_SYS_DP_EL);
	}
	this.deleteAllLines;
	this.appendLines(rowNbr, \"element\", listOfElement,\"status\",setvalueReadBack, \"settings\", setvalue, \"unit\", unit);
	
	}
	
	fwColourTable_connectCellBackColToValueStatus(exceptionInfo);
	
}
_fwSettingsDataCB(string dpe, string value)
{
	int cellPos;
	string elementColour, dpName,temp;
	dyn_string exceptionInfo;
	
	dpName = dpSubStr(dpe, DPSUB_DP_EL);
	
	cellPos = dynContains(gListOfSettingsDpElement, dpName);
	

	if(cellPos >= 1)
	{
		this.cellValueRC(cellPos-1, \"settings\", value);
		
	}
}

_fwReadBackDataCB(string dpe,string value)
{
	int cellPos;
	string dpName;
	
	
	dpName = dpSubStr(dpe, DPSUB_DP_EL);
	
	cellPos = dynContains(gListOfDpElementToConnect, dpName);
	
	if(cellPos >= 1)
	{
		this.cellValueRC(cellPos-1, \"status\", value);
		
	}
}

" 0
"main(int xpos,string columnName,string value)
{
	int i,len, row, col,nN;
	string elementName;
	dyn_string listOfElement;
	dyn_int selectedLine;
	
	listOfElement = makeDynString(\"v0\", \"v1\", \"i0\",	\"i1\", \"rDwn\", \"rUp\", \"tripTime\", \"vMaxSoftValue\");

	elementName = listOfElement[xpos + 1];
	//DebugN(elementName,xpos,columnName);

	if(elementName == \"\" )
		return;
	if (columnName == \"settings\")
	{
		//dpSet($channel	+ \".settings.\" + elementName,	this.cellValue);
		// get the shape of the table
		shape tab = getShape(\"tableParaView\");
		tab.cellValueRC(xpos, \"Apply\", \"  Return\");
	
		//DebugN(\"questo è $channel\",$channel);
		  					
	}
		
}" 0
 1 0 1 5 1 "element" 8 1 0 "s" 1
LANG:1 9 Parameter
E
1
LANG:1 0 

100 "settings" 6 1 1 "s" 1
LANG:1 7 Setting
E
1
LANG:1 0 

75 "Apply" 4 1 0 "s" 1
LANG:1 5 Apply
E
1
LANG:1 0 

60 "status" 6 1 0 "s" 1
LANG:1 8 ReadBack
E
1
LANG:1 0 

80 "unit" 3 1 0 "s" 1
LANG:1 5 Units
E
1
LANG:1 0 

50 
26 26 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0 0 1 1 1 7
1 0
25 41
"Table1"
""
1 385 96 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
40 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  388 94 722 342
"dyn_string gListOfDpElementToConnect;

main()
{
	int i, lenDpe, lenDp, rowNbr,isActive;
	dyn_string listOfElements, exc, units, details,listOfUnit,value;
	dyn_string tipo,nn,stringa;
	
	
	this.sortOnClick = FALSE;
	
	 gListOfDpElementToConnect = makeDynString(	$channel + \".actual.vMon\", 
												$channel + \".actual.iMon\",
												$channel + \".actual.isOn\",
												$channel + \".actual.Trip\",
												$channel + \".actual.OvC\",
												$channel + \".actual.OvV\",
												$channel + \".actual.UnV\",
												$channel + \".actual.rampingDirection\");
	
	listOfElements = makeDynString(	\"v mon\", \"i mon\", \"is on\", \"Tripped\", \"Over current\",
									\"Over voltage\",	\"Under voltage\", \"Ramping direction\");
	listOfUnit = makeDynString(\"V\", \"A\", \"\", \"\", \"\", \"\", \"\", \"\");								
	
        int pos = strpos(fwDU_getLogicalName($channel),\"HV\");
        if(pos>0)
         listOfUnit[2] = \"uA\"; 
        
	lenDpe = dynlen(gListOfDpElementToConnect);
	lenDp = dynlen(listOfElements);
	
	if(lenDpe > lenDp)
		rowNbr = lenDpe;
	else
		rowNbr = lenDp;
		
	for(i = 1; i <= lenDpe; i++) 
	{
		units[i] = listOfUnit[i];
		details[i] = \"Details\";
		dpGet(gListOfDpElementToConnect[i] + \":_online.._value\",value[i]);
		
		if(dpConnect(\"fwActualDataCB\", gListOfDpElementToConnect[i] + \":_online.._value\") == -1) 
  				{
  					fwException_raise(	exceptionInfo, 
  										\"INFO\", 
  										\"Connecting to the data point element\" + dpe + \" was unsuccessful.\", 
  										\"\");
					this.cellBackColRC(i - 1, \"status\", \"DpDoesNotExist\");
				}
		gListOfDpElementToConnect[i] = dpSubStr(gListOfDpElementToConnect[i], DPSUB_SYS_DP_EL);
	
	
	}
	
	this.deleteAllLines;
	this.appendLines(rowNbr, \"parameter\", listOfElements,\"status\",value, \"units\", units, \"details\", details);
	fwColourTable_connectCellBackColToStatus(exceptionInfo);
	
	
}


fwActualDataCB(string dpe, string value)
{
	int cellPos;
	string dpName;
	
	//DebugN(value,\"s\",dpe);
	dpName = dpSubStr(dpe, DPSUB_SYS_DP_EL);
	cellPos = dynContains(gListOfDpElementToConnect, dpName);
	//DebugN(dpName,dpe);
	if(cellPos >= 1)
	{
		this.cellValueRC(cellPos-1, \"status\", value);
	}


}
" 0
"main(int xpos,string columnName,string value)
{
	bit32 status;
	int i,len, row, col, type;
	string elementName;
	dyn_string listOfElement;
	dyn_int selectedLine;

	listOfElement = makeDynString(\"vMon\", \"iMon\", \"isOn\", \"Trip\", \"OvC\", \"OvV\", \"UnV\",	\"rampingDirection\");
	elementName = listOfElement[xpos + 1];
	
	if (columnName == \"status\") 
	{
		ChildPanelOnCentralModal(	\"fwConfigs/fwAlarmOperationPopupPanel.pnl\",
									\"AlarmOp\", 
									makeDynString(\"$sDpe:\" + $channel + \".actual.\" + elementName));
	}
	else 
	{
		if(elementName == \"\" )
			return;
		dpGet($channel + \".actual.\" + elementName + \":_original.._status\", status);

		ChildPanelOnCentralModal(	\"fwGeneral/fwDetailDpElement.pnl\",
									\"Detail\", makeDynString(\"$1:\" + $channel + \".actual.\" + elementName, 
															\"$channel:\" + status));
	}
}" 0
 1 0 1 4 1 "parameter" 11 1 0 "s" 1
LANG:1 9 Parameter
E
1
LANG:1 0 

130 "status" 5 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

65 "units" 4 1 0 "s" 1
LANG:1 5 Units
E
1
LANG:1 0 

55 "details" 4 1 0 "s" 1
LANG:1 7 Details
E
1
LANG:1 0 

60 
26 26 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0 0 1 1 1 7
1 0
13 78
"on"
""
1 110 663 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
77 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  108 661 152 695

T 
1
LANG:1 2 On
"main()
{
  
  string sys = dpSubStr($channel,DPSUB_SYS);
  
  string logical = fwDU_getLogicalName($channel); 
  string ch2;
  if(strpos(logical,\"_LV\")>-1)
  {
  //DebugN($channel);  
   
  if(strpos(logical,\"ANA\")>-1)
  {
  strreplace(logical,\"ANA\",\"DIG\");
  ch2 = fwDU_getPhysicalName(sys+logical);
    //DebugTN($channel);
    dpSet($channel + \".settings.onOff:_original.._value\", TRUE);
    delay(1,0);
    dpSet(sys+ch2 + \".settings.onOff:_original.._value\", TRUE);
    //DebugTN(ch2);
    }
  else if(strpos(logical,\"DIG\")>-1)
  {
  
  strreplace(logical,\"DIG\",\"ANA\");
  ch2 = sys+fwDU_getPhysicalName(sys+logical);
  
    dpSet(ch2 + \".settings.onOff:_original.._value\", TRUE);
    delay(1,0);
    dpSet($channel + \".settings.onOff:_original.._value\", TRUE);
    
    } 
  }   
  else if(strpos(logical,\"_HV\")>-1)
    dpSet($channel + \".settings.onOff:_original.._value\", TRUE);
  if(strpos(logical,\"_LBB\")>-1)
  {
  //DebugN($channel);  
   
  if(strpos(logical,\"LBB25\")>-1)
  {
  strreplace(logical,\"LBB25\",\"LBB33\");
  ch2 = sys+fwDU_getPhysicalName(sys+logical);
    //DebugTN($channel);
  }
  else if (strpos(logical,\"LBB33\")>-1)
  {
  strreplace(logical,\"LBB25\",\"LBB33\");
  ch2 = sys+fwDU_getPhysicalName(sys+logical);
  }
 
  if(strlen($channel)==strlen(ch2)){
  dpSet($channel + \".settings.onOff:_original.._value\", TRUE);
  dpSet(ch2 + \".settings.onOff:_original.._value\", TRUE);
  }
    //DebugTN(ch2);
    }
}" 0
 E E E
13 79
"off"
""
1 270 1173 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
78 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  158 661 202 695

T 
1
LANG:1 3 Off
"main()
{
  string sys = dpSubStr($channel,DPSUB_SYS);
  string logical = fwDU_getLogicalName($channel); 
  string ch2;
  if(strpos(logical,\"_LV\")>-1)
  {
    
  if(strpos(logical,\"ANA\")>-1)
  {
  strreplace(logical,\"ANA\",\"DIG\");
  ch2 = sys+fwDU_getPhysicalName(sys+logical);
  
    dpSet($channel + \".settings.onOff:_original.._value\", FALSE);
    dpSet(ch2 + \".settings.onOff:_original.._value\", FALSE);
  
    }
  else if(strpos(logical,\"DIG\")>-1)
  {
  
  strreplace(logical,\"DIG\",\"ANA\");
  ch2 = sys+fwDU_getPhysicalName(sys+logical);
  
    dpSet(ch2 + \".settings.onOff:_original.._value\", FALSE);
    dpSet($channel + \".settings.onOff:_original.._value\", FALSE);
    
    } 
  }   
  else if(strpos(logical,\"_HV\")>-1)
    dpSet($channel + \".settings.onOff:_original.._value\", FALSE);
  if(strpos(logical,\"_LBB\")>-1)
  {
  //DebugN($channel);  
   
  if(strpos(logical,\"LBB25\")>-1)
  {
  strreplace(logical,\"LBB25\",\"LBB33\");
  ch2 = sys+fwDU_getPhysicalName(sys+logical);
    //DebugTN($channel);
  }
  else if (strpos(logical,\"LBB33\")>-1)
  {
  strreplace(logical,\"LBB25\",\"LBB33\");
  ch2 = sys+fwDU_getPhysicalName(sys+logical);
  }
 
  if(strlen($channel)==strlen(ch2)){
  dpSet($channel + \".settings.onOff:_original.._value\", FALSE);
  dpSet(ch2 + \".settings.onOff:_original.._value\", FALSE);
  }
    //DebugTN(ch2);
    }
}" 0
 E E E
14 88
"LastModifiedField"
""
1 490 362 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
87 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  488 360 682 387
2 "0s" 0 0 0 0 0 -1  E "// Show date last modified
main()
{
  if(dpConnect(\"work\", $channel + \".actual.vMon\" + \":_online.._stime\") == -1)
  {
     this.backCol = \"_dpdoesnotexist\";
     this.foreCol = \"_dpdoesnotexist\";
  }
}

work(string dp,string str)
{
   this.text = str;
}
" 0
 E
13 106
"Button1"
""
1 20 349 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
101 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  18 347 212 381

T 
1
LANG:1 27 Load settings from hardware
"main()
{
	float value;
	dyn_dyn_string settings;
	
	settings[1] = makeDynString(\".settings.v0\", \".readBackSettings.v0\");
	settings[2] = makeDynString(\".settings.v1\", \".readBackSettings.v1\");
	settings[3] = makeDynString(\".settings.i0\", \".readBackSettings.i0\");
	settings[4] = makeDynString(\".settings.i1\", \".readBackSettings.i1\");
	settings[5] = makeDynString(\".settings.rDwn\", \".readBackSettings.rDwn\");
	settings[6] = makeDynString(\".settings.rUp\", \".readBackSettings.rUp\");
	settings[7] = makeDynString(\".settings.tripTime\", \".readBackSettings.tripTime\");
	settings[8] = makeDynString(\".settings.vMaxSoftValue\", \".readBackSettings.vMaxSoftValue\");
		
	for(int i = 1; i <= dynlen(settings); i++)
	{
		dpGet($channel + settings[i][2], value);
		dpSet($channel + settings[i][1], value);
	}
}
" 0
 E E E
13 121
"Button2"
""
1 628 656 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
110 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  626 654 720 688

T 
1
LANG:1 5 Close
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
14 123
"sector"
""
1 444 24 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
112 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  442 22 562 49
3 "0s" 0 0 0 0 0 -1  E "main()
{
	string name,newname,parent,granparent;
	dyn_string par,granpa,exInfo;
	
	newname = dpSubStr($channel,DPSUB_SYS_DP);	

	name = dpGetAlias(newname+\".\");
	//DebugN(name,\"saff\");
	int pos1=strpos(name,\"_C\");
	int pos2 = strpos(name,\"_R\");
	par = substr(name,pos1+1,3);//strsplit(parent,\"_\");
	granpa = substr(name,pos2+1,2);//strsplit(granparent,\"_\");
	  //DebugN(\"PAR=\",par,\"GRANDPA=\",granpa,\"POS1=\",pos1,\"pos2=\",pos2);
	sector.text=granpa;
	position.text =par;
	
}" 0
 E
14 124
"position"
""
1 444 60 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
113 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  442 58 562 85
3 "0s" 0 0 0 0 0 -1  E E E
13 127
"Button3"
""
1 644 20 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
115 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  642 18 719 46

T 
1
LANG:1 6 Action
"// SimpleCtrlScriptStart {invalid}
main()
{
  /*ChildPanelOnCentralModal(	\"fwAction.pnl\",
  							\"Action Panel\",
  							makeDynString(\"$2:\" + $2));
  */EP_childPanelOn();
}
EP_childPanelOn()
{
   ChildPanelOnCentral(\"CMS_RPCfwSupervisor//CMS_RPCfwSupervisorAction.pnl\",
      \"Action Panel\",
      makeDynString(\"$sDpName:\" + $channel));
}

// SimpleCtrlScript {EP_childPanelOn}
// Function {ChildPanelOnCentral}
// File {fwAction.pnl}
// Panel {}
// Parent {}
// Module {}
// OffsetX {0}
// OffsetY {0}
// PanelPara1 {$2:$2}
// SimpleCtrlScriptEnd {EP_childPanelOn}
" 0
 E E E
13 128
"Button4"
""
1 644 60 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
116 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  642 58 719 86

T 
1
LANG:1 4 Info
"// SimpleCtrlScriptStart {invalid}
main()
{
  dyn_string channels;
  ChildPanelOnCentralModal(	\"CMS_RPCfwSupervisor//CMS_RPCfwSupervisorInfoPanel.pnl\",
  							\"Info Panel\",
  							makeDynString(\"$sDpName:\" + $channel));
}" 0
 E E E
14 129
"TextField1"
""
1 10 60 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
117 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  8 58 370 85
3 "0s" 0 0 0 0 0 -1  "main()
{
  int status;
  dpGet($channel + \".actual.status\",status);
    dpSet($channel + \".actual.status\",status);
}" 0
 "main()
{
this.editable=false;
this.text=fwDU_getLogicalName($channel);
}" 0
 E
6 196
"Border1"
""
1 40 280 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
119 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
//this.visible=FALSE;
this.visible=TRUE;
dyn_string exceptionInfo,parameters,tempSensor;

parameters =makeDynString(\"channel1\",\"channel2\",\"channel3\",\"value1\",\"value2\",\"value3\",\"param1\",\"param2\",\"param3\");
tempSensor =makeDynString($channel,$channel,$channel,\"actual.vMon\",\"actual.iMon\",\"actual.status\",\"VMON\",\"IMON\",\"Status\");
	
int x,y,xSize,ySize;
string dpTrendName= \"three\";

//=\"ChamTrend\"+tot;
 					
	getValue(\"Border1\",\"position\",x,y);
	getValue(\"Border1\",\"size\",xSize,ySize);
	
	
	//DebugN($2,\"sasa\",deviceList,tempSensor,dpTrendName,parameters);
	fwTrending_addFaceplate(myModuleName(), myPanelName(), \"Trend\",
				RPCfwSupervisor_getSupervisorSys()+dpTrendName,
				parameters,
				tempSensor,
				x,y-ySize, exceptionInfo);
       								

}" 0
 E 0 1 1 0 1 E 1 0 1 74 338 0 E 40 60 520 280
30 200
"FRAME3"
""
1 250 673 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
123 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  string dpLog = fwDU_getLogicalName($channel);
  
  if(strpos(dpLog,\"HV\")<1)
  {
  this.visible = false;
  newvalue.visible = false;
  confirm.visible = false; 
  select.visible = false; 
  }
}" 0
 E 0 0 1 0 1 E 1.111111111111111 0 1.035087719298246 -37.77777777777777 -47.61403508771933 0 E 250 673 431 731
1
LANG:1 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 23 Update I0 limit for fsm
14 201
"newvalue"
""
1 250 664 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
124 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0  248 662 292 696
3 "0s" 0 0 0 0 0 -1  E "main()
{
  //this.visible = false;  
  int val;
  dpGet($channel + \".readBackSettings.i1\",val);
  this.text = val;
}" 0
 E
13 202
"confirm"
""
1 360 664 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
125 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0  358 662 432 696

T 
1
LANG:1 6 Update
"main()
{
  string val = newvalue.text();
  int sel = select.number();
  string dpe;
  if(sel == 0)
    dpe = \".readBackSettings.i1\";
  else if(sel == 1)
    dpe = \".settings.i1\";
  //DebugN(val);
  dpSet($channel + dpe,val);
}" 0
 E E "main()
{
  //this.visible = false; 
}" 0

19 203
"select"
""
1 300 664 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
126 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  298 662 352 696
2
T 
1
LANG:1 6 Stable

1 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 4 Ramp

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
