V 11
1
LANG:1 0 
PANEL,-1 -1 500 400 N "_3DFace" 0
E E E E E 1 -1 -1 0  0 0
""0  1
E "dyn_string lines;
void RPCfwSupervisor_getAllChannelsByType(string type,string sysName, dyn_string & channels)
{
// To get channels starting from logical name
  //  dyn_string channels ;
  string alias;
  dyn_string exInfo,nodes, children;
  fwNode_getNodes(sysName, fwDevice_LOGICAL, nodes, exInfo);
   
     for(int i = 1; i <= dynlen(nodes); i++)
      {
        alias = dpGetAlias(nodes[i] + \".\");
	//DebugN(nodes[i], alias);
	nodes[i] = sysName + alias;
      
      if(strpos(nodes[i],type)>1)  
        fwDevice_getChildren(nodes[i], fwDevice_LOGICAL, children, exInfo);		                        
      
      }
     //DebugN(nodes,children);
     for(int i = 1; i<=dynlen(children);i++)
     {
              dynAppend(channels,sysName + fwDU_getPhysicalName(children[i]));      
     }
  
  
}


void getChannels(string sys, string type, dyn_string & channels){
  
  dyn_dyn_string obj;
  dyn_string dpt;
  switch (type){
    case \"HVE\":
      dpt = makeDynString(\"HV\");
      obj[1] = makeDynString(\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\",\".actual.iMon\");
      
    case \"HVB\":
      dpt = makeDynString(\"HV\");
      obj[1] = makeDynString(\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\",\".actual.iMon\");
      break;
    case \"LVE\":
      dpt = makeDynString(\"LV\",\"T\",\"LBB\");
      obj[1] = makeDynString(\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\",\".actual.iMon\");
      obj[2] = makeDynString(\".actual.temperature\");
      obj[3] = makeDynString(\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\",\".actual.iMon\");
      break;
    case \"LVB\":
      dpt = makeDynString(\"LV\",\"T\",\"LBB\");
      obj[1] = makeDynString(\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\",\".actual.iMon\");
      obj[2] = makeDynString(\".actual.temperature\");
      obj[3] = makeDynString(\".actual.Trip\",\".actual.OvC\",\".actual.OvV\",
                   \".actual.UnV\",\".actual.UnC\",\".actual.overHvMax\",\".actual.iMon\");
      break;
    case \"SER\":
      dynClear(channels);
      getFlowcell(sys,channels);
      break;
    }
  if(type !=\"SER\"){
  dyn_string elements;
  for(int i = 1; i<=dynlen(dpt);i++)
  {
    dynClear(elements);
    RPCfwSupervisor_getAllChannelsByType(dpt[i],sys, elements);
    for(int k = 1;k<=dynlen(elements);k++)
    {  
    for(int j = 1;j<=dynlen(obj[i]);j++)
    {
      dynAppend(channels,elements[k]+ obj[i][j]);
      }
    }
  }
}
  
    
  }
void getFlowcell(string sys,dyn_string & channels){
  
  dyn_string temp = dpNames(sys+\"*\",\"RPCGasChannel\");
  
  for(int i = 1; i<=dynlen(temp);i++){
    dynAppend(channels,temp[i]+\".flowIn\");
    dynAppend(channels,temp[i]+\".flowOut\");
    }
  
  
  
  }
" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 0
"displaytable"
""
1 20 110 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  18 108 482 332
E"main(int row, string column, string value)
{
    dyn_string exInfo;
  string select =  COMBO_BOX1.selectedText();
  string user,sup = RPCfwSupervisor_getSupervisorSys();;
  fwAccessControl_getUserName(user);
  if((strpos(select,\"mask\")>-1)&&(user==\"polese\")&&(column == \"dpe\"))
  {
    maskAlert(sup,row+1,column);
    }
  else if((column == \"dpe\")&&(strpos(select,\"mask\")<0)&&(user==\"polese\"))
  {
   string dp = this.cellValueRC(row, column);


    
  ChildPanelOnCentral(\"CMS_RPCfwSupervisor/CMS_RPCfwSupervisorAlertAction.pnl\",
      \"\",
      makeDynString(\"$sDpeName:\" + dp)); 
   
     
  }
  
}
maskAlert(string sys,int pp,string col){
dyn_string dp = dpNames(sys+\"*maskRPCDCS*\",\"RPCVector\");
  //DebugN(\"dd\",dp);
  if(dynlen(dp)==1) 
  { 
  dyn_string dpes;
  dyn_float val;
  dpGet(dp[1]+\".svalue\",dpes);
  dpGet(dp[1]+\".fvalue\",val);
  if(val[pp]==1){
    val[pp]=0;
    this.cellBackColRC(pp-1,col,\"FwAlarmMasked\");
    }
  else if (val[pp]==0)
  {
    val[pp]=1;
        this.cellBackColRC(pp-1,col,\"FwStateOKPhysics\");
    }
  //DebugN(val,dynlen(val));
    dpSet(dp[1]+\".fvalue\",val);

  }
}" 0
 1 0 1 1 0 "dpe" 49 1 0 "s" 1
LANG:1 3 dpe
E
1
LANG:1 0 

450 
14 14 10 10
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
13 1
"PUSH_BUTTON1"
""
1 380 350 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  378 348 482 382

T 
1
LANG:1 5 Close
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
22 2
"COMBO_BOX1"
""
1 20 60 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  18 58 152 92
8
1
LANG:1 8 Services

0
1
LANG:1 9 Barrel HV

0
1
LANG:1 9 Barrel LV

0
1
LANG:1 10 Supervisor

0
1
LANG:1 9 Endcap HV

0
1
LANG:1 9 Endcap LV

0
1
LANG:1 10 maskStatus

0
1
LANG:1 11 GlobalAlert

0

"#uses \"CMS_RPCfwSupervisor/CMS_RPCfwSupervisor.ctl\"

main()
{
  //this.selectedPos = 2;
  refresh.visible = true;
  this.enabled = false;
  TEXT_FIELD1.text = \"\";
  string sup,uxc,usc,exc,esc,psx;
  //delay(1,0);
  sup = RPCfwSupervisor_getSupervisorSys();
  uxc = RPCfwSupervisor_getComponent(\"BarrelLV\");
  usc = RPCfwSupervisor_getComponent(\"BarrelHV\");
  
  exc = RPCfwSupervisor_getComponent(\"EndcapLV\");
  esc = RPCfwSupervisor_getComponent(\"EndcapHV\");
  psx = RPCfwSupervisor_getComponent(\"Services\");
 // DebugN(psx);
 
  if(sup==\"\")
  {
  delay(4,0);
    sup = RPCfwSupervisor_getSupervisorSys();
  uxc = RPCfwSupervisor_getComponent(\"BarrelLV\");
  usc = RPCfwSupervisor_getComponent(\"BarrelHV\");
  
  exc = RPCfwSupervisor_getComponent(\"EndcapLV\");
  esc = RPCfwSupervisor_getComponent(\"EndcapHV\");
    
  psx = RPCfwSupervisor_getComponent(\"Services\");
    
    }
  int pos = this.selectedPos;
  string sys,type;
  
  switch (pos) {
    case 1: sys = psx;
      type = \"SER\";
      break;
    case 2: sys = usc;
      type = \"HVB\";
      break;
    case 3: sys = uxc;
      type = \"LVB\";
      break;
    case 4: sys = sup;
      type = \"SUP\";
      break;
    case 5: sys = esc;
      type = \"HVE\";
      break;
    case 6: sys = exc;
      type = \"LVE\";
      break;
    }
  //DebugN(\"stat\",sys,type);
  dyn_string dpes;
  getChannels(sys,type,dpes);
  
  dynClear(lines);
  string alias;
  bool ack;
  int toAck = 0;
  displaytable.deleteAllLines();
  for(int i = 1; i<=dynlen(dpes);i++)
  {

  dpGet(dpes[i]+\":_alert_hdl.._ack_possible\",ack);
  if(ack)
  { 
   displaytable.appendLine(\"dpe\",dpes[i]);
   toAck++;
   dynAppend(lines,dpes[i]);
   }       
  }
   TEXT_FIELD1.text= toAck;
//  DebugN(dpes);
   refresh.visible = false;
   this.enabled = true;
}


" 0

"#uses \"CMS_RPCfwSupervisor/CMS_RPCfwSupervisor.ctl\"

main()
{
  //this.selectedPos = 2;
  refresh.visible = true;
  this.enabled = false;
  TEXT_FIELD1.text = \"\";
  string sup,uxc,usc,exc,esc,psx;
  //delay(1,0);
  sup = RPCfwSupervisor_getSupervisorSys();
  uxc = RPCfwSupervisor_getComponent(\"BarrelLV\");
  usc = RPCfwSupervisor_getComponent(\"BarrelHV\");
  
  exc = RPCfwSupervisor_getComponent(\"EndcapLV\");
  esc = RPCfwSupervisor_getComponent(\"EndcapHV\");
  psx = RPCfwSupervisor_getComponent(\"Services\");
 // DebugN(psx);
 
  if(sup==\"\")
  {
  delay(4,0);
    sup = RPCfwSupervisor_getSupervisorSys();
  uxc = RPCfwSupervisor_getComponent(\"BarrelLV\");
  usc = RPCfwSupervisor_getComponent(\"BarrelHV\");
  
  exc = RPCfwSupervisor_getComponent(\"EndcapLV\");
  esc = RPCfwSupervisor_getComponent(\"EndcapHV\");
    
  psx = RPCfwSupervisor_getComponent(\"Services\");
    
    }
  int pos = this.selectedPos;
  string sys,type;
  
  switch (pos) {
    case 1: sys = psx;
      type = \"SER\";
      break;
    case 2: sys = usc;
      type = \"HVB\";
      break;
    case 3: sys = uxc;
      type = \"LVB\";
      break;
    case 4: sys = sup;
      type = \"SUP\";
      break;
    case 5: sys = esc;
      type = \"HVE\";
      break;
    case 6: sys = exc;
      type = \"LVE\";
      break;
    case 7:
      showMaskChannels(sup);
      break;
     case 8:
      showGlobalChannels(sup);
      break;
    }
  //DebugN(\"stat\",sys,type);
  dyn_string dpes;
  if(type!=\"\"){
  getChannels(sys,type,dpes);
  
  dynClear(lines);
  string alias;
  bool ack;
  int toAck = 0;
  displaytable.deleteAllLines();
  for(int i = 1; i<=dynlen(dpes);i++)
  {

  dpGet(dpes[i]+\":_alert_hdl.._ack_possible\",ack);
  if(ack)
  { 
   displaytable.appendLine(\"dpe\",dpes[i]);
   toAck++;
   dynAppend(lines,dpes[i]);
   }       
  }
   TEXT_FIELD1.text= toAck;
   refresh.visible = false;
   this.enabled = true;
   }
//  DebugN(dpes);
}

showGlobalChannels(string sys){
  displaytable.deleteAllLines();
  dyn_string dp = dpNames(sys+\"*RPC_*\",\"RPCUtils\");
  //DebugN(\"dd\",dp);

 float val;
 bool act; 
  for(int i =1;i<=dynlen(dp);i++)
  {
     dpGet(dp[i]+\".fvalue\",val,dp[i]+\".fvalue:_alert_hdl.._active\", act);
    displaytable.appendLine(\"dpe\",dp[i]+\".fvalue\");
    if(val==1)
      if(act)
        displaytable.cellBackColRC(i-1,\"dpe\",\"FwAlarmMasked\");
        else
      displaytable.cellBackColRC(i-1,\"dpe\",\"FwAlarmErrorAck\");
    else if (val==0)
      displaytable.cellBackColRC(i-1,\"dpe\",\"FwStateOKPhysics\");
   }

  refresh.visible = false;
   this.enabled = true;

}

showMaskChannels(string sys){
  displaytable.deleteAllLines();
  dyn_string dp = dpNames(sys+\"*maskRPCDCS*\",\"RPCVector\");
  //DebugN(\"dd\",dp);
  if(dynlen(dp)==1) 
  { 
  dyn_string dpes;
  dyn_float val;
  dpGet(dp+\".svalue\",dpes);
  dpGet(dp+\".fvalue\",val);
  
  for(int i =1;i<=dynlen(dpes);i++)
  {
    displaytable.appendLine(\"dpe\",dpes[i]);
    if(val[i]==1)
      displaytable.cellBackColRC(i-1,\"dpe\",\"FwStateOKPhysics\");
    else if (val[i]==0)
      displaytable.cellBackColRC(i-1,\"dpe\",\"_3DFace\");
    }
}
  refresh.visible = false;
   this.enabled = true;
  }

" 0

E
 1 0
2 3
"PRIMITIVE_TEXT1"
""
1 20 20 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 20 20 470 60
0 2 2 "0s" 0 0 0 64 0 0  20 20 1
1
LANG:1 26 Arial,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 29 RPC Expert Main Alert Summary
13 4
"PUSH_BUTTON2"
""
1 20 350 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  18 348 122 382

T 
1
LANG:1 15 Acknowledge all
"// SimpleCtrlScriptStart {invalid}
main()
{
  this.enabled = false;
//DebugN(lines);
  bool ack; 
dyn_string exInfo;
for(int i = 1;i<=dynlen(lines);i++)
{
  
  dpGet(lines[i]+\":_alert_hdl.._ack_possible\",ack);
  if(ack) fwAlertConfig_acknowledge(lines[i],exInfo);
  
} 
this.enabled = true;
}


" 0
 E E E
14 5
"TEXT_FIELD1"
""
1 410 70 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  408 68 472 91
3 "0s" 0 0 0 0 0 -1  E E E
2 6
"PRIMITIVE_TEXT2"
""
1 310 70 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 310 70 400 90
0 2 2 "0s" 0 0 0 64 0 0  310 70 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 20 Total Active Alerts:
2 8
"refresh"
""
1 160 350 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 160 350 355 380
0 2 2 "0s" 0 0 0 65 0 0  160 350 1
1
LANG:1 33 Trebuchet MS,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 14 REFRESHING....
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
