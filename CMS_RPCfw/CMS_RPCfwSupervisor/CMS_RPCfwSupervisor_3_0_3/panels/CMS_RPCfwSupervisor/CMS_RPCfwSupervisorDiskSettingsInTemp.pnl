V 11
1
LANG:1 12 WheelSummary
PANEL,-1 -1 824 470 N "_3DFace" 1
"$2"
"main()
{
  string  nam = $2 ;
 bool flag;
  dyn_string temp1= strsplit(nam,\"_\");
  //DebugN(\"nam\",nam,\"temp1\", temp1);   //\"or---\",or);
//   if (temp1[2] == \"EN1\"  ||  temp1[2]==\"EN2\"  ||    temp1[2]== \"EN3\" )
//   {
//     TABLE4.visible=false;
//     coolprobe.visible=false;
//   }
//   else
//   {
//     TABLE4.visible=true;
//     coolprobe.visible=true;
//   }
}
" 0
 E E E E 1 -1 -1 0  30 380
""0  1
E "// verion
#uses \"CMS_RPCfwSupervisor/CMS_RPCfwSupervisor.ctl\"
dyn_string nchannels,tchannels, channels,ch;
 
dyn_string channels;
dyn_string Wchs;
dyn_string Tchs;
  dyn_string chann;
  
getch()
{
if(dynlen(channels)==0)
   {
     string T_COMPONENT = RPCfwSupervisor_getComponent(\"EndcapT\");
     string chec = $2;
   // DebugN(T_COMPONENT);
      endcapRPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,channels);
    string logname = RPCfwSupervisor_getLogical(channels);
    } 
}
getChannelsName(dyn_string logicName,dyn_string &tchannels)    
{
for (int i=1;i<=dynlen(logicName);i++)
	{
	channels[i] = fwDU_getPhysicalName(logicName[i]);
	}
//DebugN(\"in scope    channels  = \",tchannels);

}



waitForPanel()
{
	int i;
}
DisableAllInPanel()
{
Button2.enabled = FALSE;

 }
enableControl(){

   }
enableDebug(){
Button2.enabled = TRUE;
 
  }
void ApplyPanelAccessControl(string s1, string s2) // s1 and s2 are not //used
{
bool hasDebug, hasControl;
dyn_string exceptionInfo;
// revoke all previous rights:
DisableAllInPanel(); //here you can call a function that disables //all buttons in the panel
// check privileges:
fwAccessControl_isGranted( \"CMS_RPC:Control\", hasControl, exceptionInfo); //this function checks if the user logged in has the //priviledge passed as first parameter
fwAccessControl_isGranted( \"CMS_RPC:Debug\", hasDebug, exceptionInfo); //this function checks if the user logged in has the //priviledge passed as first parameter
if (dynlen(exceptionInfo)) { fwExceptionHandling_display(exceptionInfo); return;}
// enable/disable panel functionality:
//hasDebug = 1;
if (hasControl) enableControl();
if (hasDebug) enableDebug();
}

" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
13 2
"Button1"
""
1 730 430 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  728 428 822 462

T 
1
LANG:1 5 Close
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
2 14
"PRIMITIVE_TEXT2"
""
1 160 20 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"//dyn_string channels,nchannels,pchannels;
/* Last Modified by Taimoor
   On 07/01/2009
*/
// dyn_string channels,TR2,TR3;
// main()
// {
//   dyn_string systemNumber;
//   string logname;
//   int pos;
// 
// if($2[5] == \"P\"){PRIMITIVE_TEXT2.text = \"RPC_E\"+$2[5]+$2[6];}
// if($2[5] == \"N\"){PRIMITIVE_TEXT2.text = \"RPC_E\"+$2[5]+$2[6];}
//   
// if(dynlen(channels)==0)
//    {
//      string T_COMPONENT = RPCfwSupervisor_getComponent(\"EndcapT\");
     //DebugN(\"T_COMPONENT  \",T_COMPONENT);
//      string chec = $2;
//      endcapRPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,channels);
     //logname = fwDU_getLogicalName(channels);
//      logname = RPCfwSupervisor_getLogical(channels);
//      } 
// for (int i=1; i<=dynlen(channels);i++)
// {
//   if(i<=6)dynAppend(TR2,channels[i]);//dynAppend(nodes,\"CMS_RPC\");
//   if(i>6)dynAppend(TR3,channels[i]);
// }
//  DebugN(\"R2\",TR2);  
//   DebugN(\"R3\",TR3);  
// DebugN(\"RPC_E\"+$2[5]+$2[6]);
// DebugN(\"logname\",logname);

//   if(dynlen(nchannels)==0 && dynlen(pchannels)==0 )
//   {
//     string T_COMPONENT = RPCfwSupervisor_getComponent(\"EndcapT\");
//     DebugN(\"T_COMPONENT  \",T_COMPONENT);
//     string chec = $2; 
//     if (chec[5] == \"P\")
//     {
//     endcapRPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,pchannels);
//     endcapRPCfwSupervisor_getChannelsFromName(\"RPC_EN\"+chec[6],\"T\",T_COMPONENT,nchannels);
//     }
//     else if (chec[5] == \"N\")
//     {
//     endcapRPCfwSupervisor_getChannelsFromName(\"RPC_EP\"+chec[6],\"T\",T_COMPONENT,pchannels);
//     endcapRPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,nchannels);
//     }
//   }
//   DebugN(\"____________+++++++_____________\",channels);
//    DebugN(\"NNNNNNNN\",nchannels);
//}
main()
{
  this.visible=false;}" 0
 E 0 1 1 2 1 E U  1 E 160 20 330 50
0 2 2 "0s" 0 0 0 64 0 0  160 20 1
1
LANG:1 33 MS Shell Dlg,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 4 EN1 
25 15
"TABLE2"
""
1 50 50 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0  48 48 312 392
"dyn_dyn_string chambers;
dyn_string TR2,TR3;
float globalTmpTemp=0;
bool firstTime = TRUE;
main()
{
  dyn_string systemNumber;
  int pos;
   if($2[5] == \"P\"){PRIMITIVE_TEXT2.text = \"RPC_E\"+$2[5]+$2[6];PRIMITIVE_TEXT1.text = \"Disk Temperatures and Humidity for E\"+$2[5]+$2[6];}
  if($2[5] == \"N\"){PRIMITIVE_TEXT2.text = \"RPC_E\"+$2[5]+$2[6];PRIMITIVE_TEXT1.text = \"Disk Temperatures and Humidity for E\"+$2[5]+$2[6];}
  
  getch();
  delay(2,0);
  float value;
  string val,times,color;
  dyn_int limit;
  dyn_float limits;
  dyn_string temp,exceptionInfo;
  int pos;
  int j=1;
   for(int i = 1; i<=dynlen(channels);i++)    
     {  
       dpGet(channels[i]+\".actual.temperature\",value);
       dyn_string split = strsplit(fwDU_getLogicalName(channels[i]),\"/\");
       if(strpos(split[3],\"_R\")>=0)   
       {
         dynAppend(chambers[1],channels[i]);   ///copying H/w channels to chambers[1]  
         dynAppend(chambers[2],split[3]);    
         dynAppend(chambers,temp);
         dynAppend(Tchs, channels[i]);
         dynClear(temp);
         val = value;      
         pos = strpos(val,\".\");
         if(pos>0)           val = substr(val,0,pos+2);
         dpConnect(\"refresh\",channels[i]+\".actual.temperature\");       
         this.appendLine(\"chamber\",chambers[2][j],\"input\",val);
   
//         string color;
//         dpGet(channels[i]+\".actual.temperature:_alert_hdl.._act_state_color\", color);
//         this.cellBackColRC(j-1,\"input\", color); 
//          DebugN(split[3],color);

        
        
       if(value <= 0)
         this.cellBackColRC(j-1,\"input\", \"FwStateOKNotPhysics\");
       else if(value < 23)
         this.cellBackColRC(j-1,\"input\",\"FwStateOKPhysics\");
       else if (value<24)
         this.cellBackColRC(j-1,\"input\",\"FwAlarmWarnAck\");
       else
         this.cellBackColRC(j-1,\"input\",\"FwAlarmErrorAck\");                 
       j++;       
       }
       
     }
  }
getvalue(string dpe,float value)
{  globalTmpTemp = value;}
 refresh(string dpe, float value)
 {   
  string column,val,strval;
  string name = dpSubStr(dpe,DPSUB_SYS_DP);
  int num = dynContains(chambers[1],name);
  strval = value;
  int pos = strpos(strval,\".\");
  if(pos>0)         strval = substr(strval,0,pos+2);
  this.cellValueRC(num-1,\"input\",strval);  
  
  string tempdpe = channels[1]+\".actual.temperature\";
  float tempMax = 0; float tempMin = 0; float maxTemp = 0; float minTemp = 100;
  for ( int i = 1 ; i<= dynlen(channels) ; i++)
  {

     dyn_string split = strsplit(fwDU_getLogicalName(channels[i]),\"/\");
     if(strpos(split[3],\"_R\")>=0)   
       {
         tempdpe = channels[i]+\".actual.temperature\";
         dpGet(tempdpe, tempMax);
         if( maxTemp < tempMax)   {     maxTemp = tempMax;   }
         dpGet(tempdpe, tempMin);
         if( minTemp > tempMin)   {     minTemp = tempMin;   }
       }
   } 
  LCD1.value=maxTemp;  LCD2.value=minTemp;     
  
//    string color;
//        dpGet(name+\".actual.temperature:_alert_hdl.._act_state_color\", color);
//        this.cellBackColRC(num-1,\"input\", color); 
     //    DebugN(split[3],color);
  
        if(value <= 0)
         this.cellBackColRC(num-1,\"input\", \"FwStateOKNotPhysics\");
       else if(value < 23)
         this.cellBackColRC(num-1,\"input\",\"FwStateOKPhysics\");
       else if (value<24)
         this.cellBackColRC(num-1,\"input\",\"FwAlarmWarnAck\");
       else
         this.cellBackColRC(num-1,\"input\",\"FwAlarmErrorAck\");  
   }
" 0
"main(int row, string column, string value)
{
// dynUnique(ch);
// string channelLogNameSubStr=this.cellValueRC(row,\"Channel\");
//DebugN(\"channel \",ch,\"row\",row,\"column\",column,\"value\",value);
// if(column==\"Details\")
// 	{
// 	int position,i=0;
// 	do
// 		{
// 		i++;
// 		position=strpos(ch[i],channelLogNameSubStr);
// 		}
// 	while(position==-1 && i<dynlen(channels));
	//ChildPanelOnCentral(\"CMS_RPCfwDevicesEndcap/CMS_RPCfwDevicesEndcapFwCaenChannelRPCStd.pnl\", channelLogNameSubStr,
									//	makeDynString(\"$2:\"+allChannelDps[i]));
//         ChildPanelOnCentral(\"CMS_RPCfwSupervisor/CMS_RPCfw_HardwareEndcapTemperature.pnl\", channelLogNameSubStr,
//                             makeDynString(\"$2:\"+\".actual.temperature\"));                                                                        
// 	}


}
" 0
 1 0 1 2 0 "chamber" 14 1 0 "s" 1
LANG:1 7 Chamber
E
1
LANG:1 0 

165 "input" 7 1 0 "s" 1
LANG:1 11 Temperature
E
1
LANG:1 0 

93 
26 26 10 10
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
13 16
"PUSH_BUTTON1"
""
1 240 410 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  238 408 342 452

T 
1
LANG:1 6 Trends
"main()
{
  EP_childPanelOn();
}

EP_childPanelOn()
{
  


   //ChildPanelOnCentral(\"CMS_RPCfwSupervisor//CMS_RPCfwSupervisorChamberTempTrend.pnl\",
  //ChildPanelOnCentral(\"CMS_RPCfwSupervisor//CMS_RPCfwSupervisorTempTrend.pnl\",
    ChildPanelOnCentral(\"CMS_RPCfwSupervisor//CMS_RPCfwSupervisorDiskTempTrend.pnl\",
  
        \"Chamber Temperature Trend\",   makeDynString(\"$cha:\" + Tchs , \"$2:\" + $2 ));
//      makeDynString(\"$2:\" + $2 ));
 //   DebugN(\"$2: + $2  == \", $2);
}
" 0
 E E E
30 18
"FRAME1"
""
1 16 41 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
24 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 0.661764705882353 0 0.886075949367088 29.4117647058824 353.670886075949 0 E 16 41 153 121
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 9 Max Value
29 20
"LCD1"
""
1 -851.86046511628 333.934426229508 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
28 0 0 0 0 0
E E E
0
1
LANG:1 0 

11
"frameShadow" "enum 32"
"backgroundOrigin" "enum 0"
"mode" "enum 1"
"decimals" "int 1"
"segmentStyle" "enum 1"
"smallDecimalPoint" "bool TRUE"
"frameShape" "enum 1"
"margin" "int 0"
"lineWidth" "int 1"
"midLineWidth" "int 0"
"numDigits" "int 4"
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  50 410 120 450
19 NUMLED.NumLEDCtrl.1
0
"main()
{
  //CMS_RPCfwHardware_getDeviceChannels($2, \"T\",channels);
  //DebugN(channels[2][1]);
  string dpe = $2+\".actual.temperature\";
 // dpConnect(\"refresh\",true,dpe);
}
// refresh(string dpe, float values)
// {
 // this.value= values;
//   }
" 0
2 21
"PRIMITIVE_TEXT1"
""
1 260 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"//dyn_string channels,nchannels,pchannels;
/* Last Modified by Taimoor
   On 07/01/2009
*/
// dyn_string channels,TR2,TR3;
// main()
// {
//   dyn_string systemNumber;
//   string logname;
//   int pos;
// 
// if($2[5] == \"P\"){PRIMITIVE_TEXT2.text = \"RPC_E\"+$2[5]+$2[6];}
// if($2[5] == \"N\"){PRIMITIVE_TEXT2.text = \"RPC_E\"+$2[5]+$2[6];}
//   
// if(dynlen(channels)==0)
//    {
//      string T_COMPONENT = RPCfwSupervisor_getComponent(\"EndcapT\");
     //DebugN(\"T_COMPONENT  \",T_COMPONENT);
//      string chec = $2;
//      endcapRPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,channels);
     //logname = fwDU_getLogicalName(channels);
//      logname = RPCfwSupervisor_getLogical(channels);
//      } 
// for (int i=1; i<=dynlen(channels);i++)
// {
//   if(i<=6)dynAppend(TR2,channels[i]);//dynAppend(nodes,\"CMS_RPC\");
//   if(i>6)dynAppend(TR3,channels[i]);
// }
//  DebugN(\"R2\",TR2);  
//   DebugN(\"R3\",TR3);  
// DebugN(\"RPC_E\"+$2[5]+$2[6]);
// DebugN(\"logname\",logname);

//   if(dynlen(nchannels)==0 && dynlen(pchannels)==0 )
//   {
//     string T_COMPONENT = RPCfwSupervisor_getComponent(\"EndcapT\");
//     DebugN(\"T_COMPONENT  \",T_COMPONENT);
//     string chec = $2; 
//     if (chec[5] == \"P\")
//     {
//     endcapRPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,pchannels);
//     endcapRPCfwSupervisor_getChannelsFromName(\"RPC_EN\"+chec[6],\"T\",T_COMPONENT,nchannels);
//     }
//     else if (chec[5] == \"N\")
//     {
//     endcapRPCfwSupervisor_getChannelsFromName(\"RPC_EP\"+chec[6],\"T\",T_COMPONENT,pchannels);
//     endcapRPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,nchannels);
//     }
//   }
//   DebugN(\"____________+++++++_____________\",channels);
//    DebugN(\"NNNNNNNN\",nchannels);
//}
main()
{}" 0
 E 0 1 1 2 1 E U  1 E 260 10 430 40
0 2 2 "0s" 0 0 0 64 0 0  260 10 1
1
LANG:1 33 MS Shell Dlg,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 16 Disk Temperature
29 22
"LCD2"
""
1 -751.86046511628 333.934426229508 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
32 0 0 0 0 0
E E E
0
1
LANG:1 0 

11
"frameShadow" "enum 32"
"backgroundOrigin" "enum 0"
"mode" "enum 1"
"decimals" "int 1"
"segmentStyle" "enum 1"
"smallDecimalPoint" "bool TRUE"
"frameShape" "enum 1"
"margin" "int 0"
"lineWidth" "int 1"
"midLineWidth" "int 0"
"numDigits" "int 4"
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  150 410 220 450
19 NUMLED.NumLEDCtrl.1
0
"main()
{
  //CMS_RPCfwHardware_getDeviceChannels($2, \"T\",channels);
  //DebugN(channels[2][1]);
  string dpe = $2+\".actual.temperature\";
 // dpConnect(\"refresh\",true,dpe);
}
// refresh(string dpe, float values)
// {
 // this.value= values;
//   }
" 0
30 23
"FRAME2"
""
1 16 41 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
34 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 0.661764705882353 0 0.886075949367088 129.411764705882 353.670886075949 0 E 16 41 153 121
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 9 Min Value
13 35
"coolprobe"
""
1 560 400 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
54 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  558 398 702 422

T 
1
LANG:1 21 Cooling Probes trends
"// SimpleCtrlScriptStart {invalid}

main()
{
  EP_childPanelOn();
}

EP_childPanelOn()
{

  ChildPanelOnCentral(\"CMS_RPCfwSupervisor/CMS_RPCfwSupervisorDiskCoolTemp.pnl\",
      \"\",
      makeDynString(\"$chs:\" + Wchs));
}

// SimpleCtrlScript {EP_childPanelOn}
// Function {ChildPanelOnCentral}
// File {CMS_RPCfwSupervisor/CMS_RPCfwSupervisorDiskCoolTemp.pnl}
// Panel {}
// Parent {}
// Module {}
// OffsetX {0}
// OffsetY {0}
// PanelPara1 {$2:$2}
// SimpleCtrlScriptEnd {EP_childPanelOn}
" 0
 E E E
25 36
"TABLE3"
""
1 500 50 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
55 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  498 48 732 202
"dyn_dyn_string chambers;
dyn_string TR2,TR3;
float globalTmpTemp=0;
bool firstTime = TRUE;
main()
{
  dynClear (chann);
  string T_COMPONENT = RPCfwSupervisor_getComponent(\"EndcapT\");
   endcapRPCfwSupervisor_getChannelsFromName($2,\"RH\",T_COMPONENT,chann);
  dyn_string systemNumber;
  int pos;
  delay(2,0);
  float value;
  string val,times,color;
  dyn_int limit;
  dyn_float limits;
  dyn_string temp,exceptionInfo;
  int pos;  int j=1;
   for(int i = 1; i<=dynlen(chann);i++)    
     {  
       dpGet(chann[i]+\".actual.averageValue\",value);
        dynAppend(chambers[1],chann[i]);   ///copying H/w chann to chambers[1]
       dyn_string split = strsplit(fwDU_getLogicalName(chann[i]),\"/\");
       dynAppend(chambers[2],split[3]);   
       dynAppend(chambers,temp);
       dynClear(temp);
       val = value;
       pos = strpos(val,\".\");
       if(pos>0)           val = substr(val,0,pos+2);
       
         dpConnect(\"refresh\",chann[i]+\".actual.averageValue\");       
         this.appendLine(\"RHsensor\",chambers[2][j],\"Humidity\",val);
         
//         
//           string color;
//         dpGet(channels[i]+\".actual.temperature:_alert_hdl.._act_state_color\", color);
//         this.cellBackColRC(j-1,\"input\", color); 
         
         if(value <= 20)
            this.cellBackColRC(j-1,\"Humidity\",\"FwAlarmWarnAck\");
          else if(value < 70)
            this.cellBackColRC(j-1,\"Humidity\",\"FwStateOKPhysics\");
          else 
            this.cellBackColRC(j-1,\"Humidity\",\"FwAlarmWarnAck\");
         
         

      j++;
    }
}


getvalue(string dpe,float value)
{
  globalTmpTemp = value;
}
 refresh(string dpe, float value)
 {
  string column,val,strval;  
  string name = dpSubStr(dpe,DPSUB_SYS_DP); 
  int num = dynContains(chambers[1],name);
   strval = value;
  int pos = strpos(strval,\".\");
       if(pos>0)
         strval = substr(strval,0,pos+2);
        
 this.cellValueRC(num-1,\"Humidity\",strval);
// DebugN(\"humidity : num=\", num,\"strval\",strval);
 //string tempdpe = chann[1]+\".actual.averageValue\";
  
 
//    string color;
//        dpGet(name+\".actual.temperature:_alert_hdl.._act_state_color\", color);
//        this.cellBackColRC(num-1,\"input\", color); 

       if(value <= 20)
          this.cellBackColRC(num-1,\"Humidity\", \"FwAlarmWarnAck\");
       else if(value < 70)
          this.cellBackColRC(num-1,\"Humidity\",\"FwStateOKPhysics\");
       else 
          this.cellBackColRC(num-1,\"Humidity\",\"FwAlarmWarnAck\"); 
   }" 0
E 1 0 1 2 0 "RHsensor" 15 1 0 "s" 1
LANG:1 8 RHsensor
E
1
LANG:1 0 

150 "Humidity" 8 1 0 "s" 1
LANG:1 8 Humidity
E
1
LANG:1 0 

80 
26 26 10 10
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
25 37
"TABLE4"
""
1 500 240 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
57 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  498 238 732 392
"dyn_dyn_string chambers;
dyn_string TR2,TR3;
float globalTmpTemp=0;
bool firstTime = TRUE;
main()
{
  dyn_string systemNumber;
  int pos;
  dynClear(chambers);  
  dynClear(Wchs); 
  //DebugN(dynlen(channels));
  delay(2,0);
  float value;
  string val,times,color;
  dyn_int limit;
  dyn_float limits;
   dyn_string temp,exceptionInfo;
  int pos;
  int j=1;
  for(int i = 1; i<=dynlen(channels);i++)    
     {  
       dpGet(channels[i]+\".actual.temperature\",value);
       dyn_string split = strsplit(fwDU_getLogicalName(channels[i]),\"/\");
       if(strpos(split[3],\"_R\")==-1)   
       {
         dynAppend(chambers[1],channels[i]);   ///copying H/w channels to chambers[1]
         dynAppend(chambers[2],split[3]);   
         dynAppend(Wchs,channels[i]);//+\".actual.temperature\");            
         dynAppend(chambers,temp);
         dynClear(temp);
         val = value;
         pos = strpos(val,\".\");
         if(pos>0)
           val = substr(val,0,pos+2);
       
         dpConnect(\"refresh\",channels[i]+\".actual.temperature\");       
         this.appendLine(\"CoolingProbes\",chambers[2][j],\"Temperature\",val);
         
//       string color;
//         dpGet(channels[i]+\".actual.temperature:_alert_hdl.._act_state_color\", color);
//         this.cellBackColRC(j-1,\"input\", color);     
//          
         if(value <= 0)
           this.cellBackColRC(j-1,\"Temperature\", \"FwStateOKNotPhysics\");
         else if(value < 23)
           this.cellBackColRC(j-1,\"Temperature\",\"FwStateOKPhysics\");
         else if (value<24)
           this.cellBackColRC(j-1,\"Temperature\",\"FwAlarmWarnAck\");
         else
           this.cellBackColRC(j-1,\"Temperature\",\"FwAlarmErrorAck\");         
       j++;
       }
      
       
     }
//dpGet(\"cms_rpc_dcs_05:CAEN/RPCLV02CMS/branchController02/easyCrate2/easyBoard19/channel000.actual.temperature:_alert_hdl.._text\"
    
}
getvalue(string dpe,float value)
{
  globalTmpTemp = value;
}



 refresh(string dpe, float value)
 {
  string column,val,strval;
  string name = dpSubStr(dpe,DPSUB_SYS_DP);
  int num = dynContains(chambers[1],name);
  strval = value;
  int pos = strpos(strval,\".\");
       if(pos>0)         strval = substr(strval,0,pos+2);
        
 this.cellValueRC(num-1,\"Temperature\",strval);  
 
//  
//    string color;
//        dpGet(name+\".actual.temperature:_alert_hdl.._act_state_color\", color);
//        this.cellBackColRC(num-1,\"input\", color); 
 
 
       if(value <= 0)
         this.cellBackColRC(num-1,\"Temperature\", \"FwStateOKNotPhysics\");
      else if(value < 23)
         this.cellBackColRC(num-1,\"Temperature\",\"FwStateOKPhysics\");
       else if (value<24)
         this.cellBackColRC(num-1,\"Temperature\",\"FwAlarmWarnAck\");
       else
         this.cellBackColRC(num-1,\"Temperature\",\"FwAlarmErrorAck\");
   }
" 0
E 1 0 1 2 0 "CoolingProbes" 15 1 0 "s" 1
LANG:1 13 CoolingProbes
E
1
LANG:1 0 

150 "Temperature" 8 1 0 "s" 1
LANG:1 11 Temperature
E
1
LANG:1 0 

80 
26 26 10 10
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
13 38
"PUSH_BUTTON3"
""
1 500 210 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
58 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  498 208 612 232

T 
1
LANG:1 16 RH Sensor Trends
"// SimpleCtrlScriptStart {invalid}

main()
{
  EP_childPanelOn();
}

EP_childPanelOn()
{
//DebugN(chann);
dyn_string chann1;
for(int i=1; i<=dynlen(chann); i++)
{
  if (strpos(fwDU_getLogicalName(chann[i]),\"_PH\")>-1)
  {
      dynAppend(chann1, chann[i]);
  }
}
//DebugN(\"chann1====\",chann1);
  ChildPanelOnCentral(\"CMS_RPCfwSupervisor/CMS_RPCfwSupervisorDiskRHTemp.pnl\",
      \"\",
      makeDynString(\"$chs:\" + chann1));
}

// SimpleCtrlScript {EP_childPanelOn}
// Function {ChildPanelOnCentral}
// File {CMS_RPCfwSupervisor/CMS_RPCfwSupervisorDiskCoolTemp.pnl}
// Panel {}
// Parent {}
// Module {}
// OffsetX {0}
// OffsetY {0}
// PanelPara1 {$2:$2}
// SimpleCtrlScriptEnd {EP_childPanelOn}
" 0
 E E E
13 39
"PUSH_BUTTON4"
""
1 620 210 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
59 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  618 208 732 232

T 
1
LANG:1 13 Gas RH Trends
"// SimpleCtrlScriptStart {invalid}

main()
{
  EP_childPanelOn();
}

EP_childPanelOn()
{
//DebugN(chann);
dyn_string chann1;
for(int i=1; i<=dynlen(chann); i++)
{
  if (strpos(fwDU_getLogicalName(chann[i]),\"_P\")<0)
  {
      dynAppend(chann1, chann[i]);
  }
}
//DebugN(\"chann1====\",chann1);
  ChildPanelOnCentral(\"CMS_RPCfwSupervisor/CMS_RPCfwSupervisorDiskRHTemp.pnl\",
      \"\",
      makeDynString(\"$chs:\" + chann1));
}

// SimpleCtrlScript {EP_childPanelOn}
// Function {ChildPanelOnCentral}
// File {CMS_RPCfwSupervisor/CMS_RPCfwSupervisorDiskCoolTemp.pnl}
// Panel {}
// Parent {}
// Module {}
// OffsetX {0}
// OffsetY {0}
// PanelPara1 {$2:$2}
// SimpleCtrlScriptEnd {EP_childPanelOn}
" 0
 E E E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
