V 11
1
LANG:1 4 Plot
PANEL,-1 -1 569 400 N "_3DFace" 5
"$HVsys"
"$LVsys"
"$ch"
"$sec"
"$wheel"
"main()
{
string sector = $sec;// sect1.selectedText;
string chamb = $ch;//ch1.selectedText;
string sysName = $HVsys;
//DebugN(sector,chamb);
title.text= title.text + \" \"+sector+\" \"+chamb;


lvSys = $LVsys;

 
// DebugN(sector);
 string hvCh = $wheel +\"_\"+ sector+\"_\"+chamb;
 
 string gas = substr($wheel,strpos($wheel,\"_W\")+1) +\"_\"+ sector+\"_\"+substr(chamb,0,strpos(chamb,\"RB\")+3);
  
 int i;
 dyn_string hvChs;
 RPCfwSupervisor_getChannelsFromName(hvCh,\"HV\",sysName, hvChs);
 
 if(dynlen(hvChs)==1) hvCh = hvChs[1];
 if(dynlen(hvChs)==2) hvCh = hvChs[1];
 //  
 gasSys = RPCfwSupervisor_getComponent(\"Services\");

 //DebugN($wheel,sector,chamb,hvCh);
 plotHistory($wheel,sector,chamb,hvCh,1,1);
 
 disapper();

}
void disapper()
{
  Border1.visible = false;
  }
" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "string gasSys,lvSys;
string getTCh(string sys,string wh,string sec,string ch)
{
 
  string result;
  string alias;
  dyn_string exInfo,nodes, children;
  fwNode_getNodes(sys, fwDevice_LOGICAL, nodes, exInfo);
  // DebugN(nodes);
     for(int i = 1; i <= dynlen(nodes); i++)
      {
        alias = dpGetAlias(nodes[i] + \".\");
	//DebugN(nodes[i], alias);
	nodes[i] = sys + alias;
      
      if(strpos(nodes[i],\"T\")>1)  
        fwDevice_getChildren(nodes[i], fwDevice_LOGICAL, children, exInfo);		                        
      
      }
//     DebugN(children);
     for(int i = 1; i<=dynlen(children);i++)
     {
     //  DebugN(children[i]);
     if((strpos(children[i],wh)>-1))  
            if((strpos(children[i],sec)>-1))
                   if((strpos(children[i],ch)>-1))
                   {
                   return sys + fwDU_getPhysicalName(children[i]);
                   break; 
                   }else if(strpos(children[i],substr(ch,0,3))>-1)
                   {
                   return sys + fwDU_getPhysicalName(children[i]);
                   break; 
                     }
   }
     return \"\";
  
  }

void plotHistory(string wheel, string sec,string cham, string value,int index,int pos)
{
  int x,y;
float xSize,ySize;
dyn_string exceptionInfo,parameters,values,parent=makeDynString(\"\",\"\");
string dpTrendName,channelLogName;

dpTrendName=\"five\";


string wh = substr(wheel,strpos(wheel,\"W\"));
dyn_string gas = dpNames(gasSys+wh+\"*\"+sec+\"*\"+substr(cham,0,3)+\"*\",\"RPCGasChannel\");

dyn_string temp = dpAliases(lvSys+\"*\"+wh+\"*\"+sec+\"*\"+substr(cham,0,3)+\"*\");

string tchs = getTCh(lvSys,wh,sec,cham);

if(dynlen(gas)==2)
  if(cham[3]==\"m\")
    dynRemove(gas,2);
  else
    dynRemove(gas,1);
  
//DebugN(sec,cham,wh,gas,fwDU_getLogicalName(tchs));



parameters=makeDynString(\"channel1\",\"channel2\",\"channel3\",\"channel4\",\"channel5\",
                         \"value1\",\"value2\",\"value3\",\"value4\",\"value5\",
                         \"param1\",\"param2\",\"param3\",\"param4\",\"param5\");
values = makeDynString(value,value,gas[1],gas[1],tchs,
                       \"actual.iMon\",\"actual.vMon\",\"flowIn\",\"flowOut\",\"actual.temperature\",
                       \"IMON\",\"VMON\",\"FlowIn\",\"FlowOut\",\"Temp\");
channelLogName= fwDU_getLogicalName(value);
//setValue(\"Text\"+index1,\"text\",channelLogName+\" vMon & iMon Trend\");
	
getValue(\"Border\"+pos,\"position\",x,y);
getValue(\"Border\"+pos,\"size\",xSize,ySize);
//DebugN(parameters,values);




dyn_string chss;
for(int i = 1; i<= 5; i++) chss[i]=values[i]+\".\"+values[i+5];
RPCSupervisor_SetAxis(\"five\",5,chss);




//DebugN(parameters,values);
fwTrending_addFaceplate(myModuleName(), myPanelName(), \"Trend\"+pos,
											dpTrendName,
											parameters,
											values,
											x,y, exceptionInfo);

if(dynlen(exceptionInfo) > 0)
	{
	fwExceptionHandling_display(exceptionInfo);
	return;
	}



}

void _plotHistory(string wheel, string sec,string cham, string value,string gasSys,string lvSys, int index,int pos)
{
  int x,y;
float xSize,ySize;
dyn_string exceptionInfo,parameters,values,parent=makeDynString(\"\",\"\");
string dpTrendName,channelLogName;

dpTrendName=\"five\";
string wh = substr(wheel,strpos(wheel,\"W\"));
dyn_string gas = dpNames(gasSys+wh+\"*\"+sec+\"*\"+substr(cham,0,3)+\"*\",\"RPCGasChannel\");

 
string tchs = getTCh(lvSys,wh,sec,cham);

if(dynlen(gas)==2)
  if(strpos(cham ,\"minus\")>0)
    gas = dpNames(gasSys+wh+\"*\"+sec+\"*\"+substr(cham,0,3)+\"L*\",\"RPCGasChannel\");
  else
    gas = dpNames(gasSys+wh+\"*\"+sec+\"*\"+substr(cham,0,3)+\"R*\",\"RPCGasChannel\");
  
  
//DebugN(sec,cham,wh,gas,tchs);



parameters=makeDynString(\"channel1\",\"channel2\",\"channel3\",\"channel4\",\"channel5\",
                         \"value1\",\"value2\",\"value3\",\"value4\",\"value5\",
                         \"param1\",\"param2\",\"param3\",\"param4\",\"param5\");
values = makeDynString(value,value,gas[1],gas[1],tchs,
                       \"actual.iMon\",\"actual.vMon\",\"flowIn\",\"flowOut\",\"actual.temperature\",
                       \"IMON\",\"VMON\",\"FlowIn\",\"FlowOut\",\"Temp\");
channelLogName= fwDU_getLogicalName(value);
//setValue(\"Text\"+index1,\"text\",channelLogName+\" vMon & iMon Trend\");
	
getValue(\"Borde\"+pos,\"position\",x,y);
getValue(\"Borde\"+pos,\"size\",xSize,ySize);
DebugN(x,y,xSize,ySize,pos);
fwTrending_addFaceplate(myModuleName(), myPanelName(), \"Trend\"+pos,
											RPCfwSupervisor_getSupervisorSys()+dpTrendName,
											parameters,
											values,
											x,y, exceptionInfo);

if(dynlen(exceptionInfo) > 0)
	{
	fwExceptionHandling_display(exceptionInfo);
	return;
	}



  }
string _getTCh(string sys,string wh,string sec,string ch)
{
 
  string result;
  string alias;
  dyn_string exInfo,nodes, children;
  fwNode_getNodes(sys, fwDevice_LOGICAL, nodes, exInfo);
  // DebugN(nodes);
     for(int i = 1; i <= dynlen(nodes); i++)
      {
        alias = dpGetAlias(nodes[i] + \".\");
	//DebugN(nodes[i], alias);
	nodes[i] = sys + alias;
      
      if(strpos(nodes[i],\"T\")>1)  
        fwDevice_getChildren(nodes[i], fwDevice_LOGICAL, children, exInfo);		                        
      
      }
//     DebugN(children);
     for(int i = 1; i<=dynlen(children);i++)
     {
     //  DebugN(children[i]);
     if((strpos(children[i],wh)>-1))  
            if((strpos(children[i],sec)>-1))
                   if((strpos(children[i],ch)>-1))
                   {
                   return sys + fwDU_getPhysicalName(children[i]);
                   break; 
                   }
                   else if(strpos(children[i],substr(ch,0,4))>-1)
                   {
                   return sys + fwDU_getPhysicalName(children[i]);
                   break; 
                     }
   }
     return ch;  //\"\";
  
  }

" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
6 1
"Border1"
""
1 20 90 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1 0 1 0 -20 1 E 20 90 460 320
2 2
"title"
""
1 20 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 20 10 465 50
0 2 2 "0s" 0 0 0 65 0 0  20 10 1
1
LANG:1 26 Arial,-1,16,5,75,0,1,0,0,0
0 1
LANG:1 24 CHAMBER TREND MONITORING
13 3
"PUSH_BUTTON1"
""
1 230 350 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  228 348 342 382

T 
1
LANG:1 5 Close
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
