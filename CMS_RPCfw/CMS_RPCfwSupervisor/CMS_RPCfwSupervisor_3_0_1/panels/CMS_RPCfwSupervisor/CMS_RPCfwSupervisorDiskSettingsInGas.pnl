V 10
1
LANG:1 12 WheelSummary
PANEL,-1 -1 785 470 N "_3DFace" 1
"$2"
E E E E E 1 -1 -1 0  30 380
""0  1
E "dyn_string channelName,channels,listOfSettingsDpElement,value,
					 split,statusLevel;
string channelAddress, sys;
dyn_string split;
dyn_string gaschannels;
 

getChannelsName(dyn_string logicName,dyn_string &channels)
{
for (int i=1;i<=dynlen(logicName);i++)
	{
	channels[i] = fwDU_getPhysicalName(logicName[i]);
	}

}

waitForPanel()
{
	int i;
}
DisableAllInPanel()
{
Button2.enabled = FALSE;

 }
enableControl(){

   }
enableDebug(){
Button2.enabled = TRUE;
 
  }
void ApplyPanelAccessControl(string s1, string s2) // s1 and s2 are not //used
{
bool hasDebug, hasControl;
dyn_string exceptionInfo;
// revoke all previous rights:
DisableAllInPanel(); //here you can call a function that disables //all buttons in the panel
// check privileges:
fwAccessControl_isGranted( \"CMS_RPC:Control\", hasControl, exceptionInfo); //this function checks if the user logged in has the //priviledge passed as first parameter
fwAccessControl_isGranted( \"CMS_RPC:Debug\", hasDebug, exceptionInfo); //this function checks if the user logged in has the //priviledge passed as first parameter
if (dynlen(exceptionInfo)) { fwExceptionHandling_display(exceptionInfo); return;}
// enable/disable panel functionality:
//hasDebug = 1;
if (hasControl) enableControl();
if (hasDebug) enableDebug();
}
" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 5
"l"
""
1 70 424 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
    dyn_string exceptionInfo;
//This function creates a callback to the function passed as //first parameter every time the user logged in changes
if(ACCESS_DCS)
  fwAccessControl_setupPanel( \"ApplyPanelAccessControl\", exceptionInfo);

}" 0
 E 0 1 1 0 1 E U  0 E 72 426 204 442
0 2 0 "0s" 0 0 0 64 0 0  72 426 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 20 Last Channel Changed
2 9
"Text1"
""
1 438 428 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 440 430 451 447
0 2 0 "0s" 0 0 0 192 0 0  440 430 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 2 at
13 2
"Button1"
""
1 652 420 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 650 418 744 452

T 
1
LANG:1 5 Close
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
14 4
"timeMax"
""
1 478 423 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 476 421 638 448
3 "0s" 0 0 0 0 0 -1  E "main()
{
dyn_string systemNumber;	
dyn_string listOfSettingsDpEl,splot;
dyn_time timeStamp;
dyn_dyn_time xx;
float max;
dyn_string channels ;
fwInstallation_getApplicationSystem(\"CMS_RPCfwHardwareGas\",systemNumber);
//DebugN(\"ss\",$2,systemNumber);
int pos = strpos($2,\"_E\");

if(dynlen(systemNumber)>0)
  {
   string name,search;
   if ($2[5] == \"N\"){search = \"EM\"+$2[6];}
   else
   search = substr($2,pos+1);
   channels = dpNames(systemNumber+\"*\"+search+\"*\",\"RPCGasChannel\");
  }
	
	while(!isFunctionDefined(\"waitForPanel\"))//Serve per ritardare la partenza del inizialize
		delay(0,100);//dopo le procedure del general

	
	
	
	for(int i=1; i<=dynlen(channels); i++)
		{	
			listOfSettingsDpEl = makeDynString ( channels[i] + \".flowIn\",channels[i] + \".flowOut\");	
			
 			for (int j=1;j<=dynlen(listOfSettingsDpEl);j++)
 				{																		
 
  			dpGet(listOfSettingsDpEl[j] + \":_original.._stime\",timeStamp[j]);
                        dpConnect(\"refreshTime\",listOfSettingsDpEl[j] + \":_original.._stime\");
  			}
				xx[i]=timeStamp;
                                //DebugN(channels[i]);
				
			
		}
		
	 //DebugN(\"xx   \",xx);
		findMax(xx,channels,max);

                }

findMax(dyn_dyn_time matrix,dyn_string newchannel,time & max)
{
	dyn_time splittime;
	dyn_int position; 
	max = 0;
	
	for(int i=1;i<=dynlen(matrix);i++)
		{
		if(matrix[i] != \"\")
			{
			for(int j=1; j<=dynlen(matrix[i]); j++)
				{
				
				if (matrix[i][j]>=max)
					{
					max = matrix[i][j];
					position[1] = i;
					position[2] = j;
					}
				
				}
			}
		}
		if(dynlen(position)>1)
                  {
                int t = position[1];
		//DebugN(\"QQ\",newchannel[t]);
		 
		this.text=max ;
		channelname.text=dpSubStr(newchannel[t],DPSUB_DP);
                  }
                else
                   channelname.text = \"No channels founded\";
	
}
refreshTime(string dpe,time val)
{
shape timemax = getShape(\"timeMax\");
time getMax = timemax.text;
time now = getCurrentTime();
int difff = now-getMax;
if(val >= getMax)
	{
	this.text = val;
	channelname.text= dpSubStr(dpe,DPSUB_DP);
        if(difff>1000)
          timeMax.backCol = \"FwAlarmErrorAck\";
        else
          timeMax.backCol = \"FwStateOKPhysics\";
	//DebugN(\"MMM\",difff);
	}
}
" 0
 E
14 8
"channelname"
""
1 210 424 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 208 422 422 449
3 "0s" 0 0 0 0 0 -1  E "main()
{
	
}" 0
 E
25 10
"TABLE1"
""
1 40 20 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,Arial
0 ""
 38 18 742 382
"dyn_string channels;
main()
{
  dyn_string systemNumber;
  dyn_string febId,temp,chid;
  dyn_string param = makeDynString(\".flowIn\",\".flowOut\"); 
  fwInstallation_getApplicationSystem(\"CMS_RPCfwHardwareGas\",systemNumber);
  //DebugN(\"$2[2]  \",$2[5],\"systemNumber  \",systemNumber);
  int pos = strpos($2,\"_E\");
  this.deleteAllLines();
  if(dynlen(systemNumber)>0)
   {
   string name,search;
   if ($2[5] == \"N\"){search = \"EM\"+$2[6];}
   else
   search = substr($2,pos+1);
   //DebugN(\"search  \",search);//EP1,EP2,EP3
   channels = dpNames(systemNumber+\"*\"+search+\"*\",\"RPCGasChannel\");
   //DebugN(\"channels  \",channels);
   dyn_string val,times;
   bool invalid;
   int pos;
   dyn_float vall; 
   for(int i = 1; i<=dynlen(channels);i++)
   {
     name = dpSubStr(channels[i],DPSUB_DP);
     for(int j = 1; j<=dynlen(param);j++)
     {
       dpGet(channels[i]+param[j],vall[j]);
       dpGet(channels[i]+param[j]+\":_original.._stime\",times[j]);
       dpGet(channels[i]+param[j]+\":_original.._invalid\",invalid);
       val[j]=vall[j];
       //DebugN(invalid);
       if(invalid)
       {
         channelname.backCol(\"FwStateAttention2\");
         channelname.text = \"Lost Conn.\";
       }
       pos = strpos(val[j],\".\");
       if(pos>0)
         val[j] = substr(val[j],0,pos+3);
       dpConnect(\"refresh\",channels[i]+param[j]);     
     }
     this.appendLine(\"chamber\",name,\"input\",val[1],\"output\",val[2],\"intime\",times[1],\"outtime\",times[2]);
     
     if(vall[1]>15)
       this.cellBackColRC(i-1,\"input\",\"FwStateOKPhysics\");
     else if(vall[1]>10)
       this.cellBackColRC(i-1,\"input\",\"FwAlarmWarnAck\");
     else 
       this.cellBackColRC(i-1,\"input\",\"FwAlarmErrorAck\");
     
     
      if(vall[2]>15)
       this.cellBackColRC(i-1,\"output\",\"FwStateOKPhysics\");
     else if(vall[2]>10)
       this.cellBackColRC(i-1,\"output\",\"FwAlarmWarnAck\");
     else 
       this.cellBackColRC(i-1,\"output\",\"FwAlarmErrorAck\");
     
     } 
   }else
  {
    DebugN(\"Gas component not found\");
    this.appendLine(\"chamber\",\"Component\",\"Input\",\"not found\" );
    this.enabled = false;
    }
 }
refresh(string dpe, float value)
{
  string column,val,strval;
  bool invalid;
  //dyn_string search = makeDynString(\"RB1\",\"RB2\",\"RB3\",\"RB4\",\"RB4L\",\"RB4R\");
  
  string name =dpSubStr(dpe,DPSUB_SYS_DP);
  
  if(strpos(dpe,\"In\")>1)
    column = \"in\";
  else if(strpos(dpe,\"Out\")>1)
    column = \"out\";
  int num = dynContains(channels,name);
  
  strval = value;
dpGet(dpSubStr(dpe,DPSUB_SYS_DP_EL)+\":_original.._stime\",val);
//int col = dpe[pos+2];

//DebugN(channels[1],name,num);
int pos = strpos(strval,\".\");
       if(pos>0)
         strval = substr(strval,0,pos+3);
       
this.cellValueRC(num-1,column+\"put\",strval);

 
      if(value>15)
       this.cellBackColRC(num-1,column+\"put\",\"FwStateOKPhysics\");
     else if(value>10)
       this.cellBackColRC(num-1,column+\"put\",\"FwAlarmWarnAck\");
     else 
       this.cellBackColRC(num-1,column+\"put\",\"FwAlarmErrorAck\");
  
this.cellValueRC(num-1,column+\"time\",val);
  
dpGet(dpSubStr(dpe,DPSUB_SYS_DP_EL)+\":_original.._invalid\",invalid);
       //DebugN(invalid);
       if(invalid)
       {
         channelname.backCol(\"FwStateAttention2\");
         channelname.text = \"Lost Conn.\";
        }
       
  }" 0
E 1 0 1 5 0 "chamber" 12 1 0 "s" 1
LANG:1 7 Chamber
E
1
LANG:1 0 

140 "input" 5 1 0 "s" 1
LANG:1 10 Input Flow
E
1
LANG:1 0 

70 "intime" 12 1 0 "s" 1
LANG:1 9 Timestamp
E
1
LANG:1 0 

150 "output" 6 1 0 "s" 1
LANG:1 11 Output Flow
E
1
LANG:1 0 

80 "outtime" 12 1 0 "s" 1
LANG:1 9 Timestamp
E
1
LANG:1 0 

150 
26 26 10 10
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0