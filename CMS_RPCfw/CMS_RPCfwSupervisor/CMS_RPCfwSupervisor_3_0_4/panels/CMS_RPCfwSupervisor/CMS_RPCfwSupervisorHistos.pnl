V 11
1
LANG:1 8 (NoName)
PANEL,-1 -1 872 457 N "_3DFace" 2
"$2"
"$hvChan"
"main()
{

}" 0
 E E E E 1 0 0 0  10 640
""0  1
E "dyn_dyn_string channels,maxMin;
dyn_string Tchannels;
dyn_string Ichannels;
dyn_float tValues;
dyn_float iValues;
int totI,totT;

fillHistos(dyn_float df, int width, string title, dyn_string & result)
{ 
shape bt=getShape(title); 
// dyn_float df;
    
//df = iValues;
//DebugN(\"Imon -ueue->\",df);  

 dyn_float array, test;
// Start position
float max = 0, min = 9999;
int mIdx,minIdx;
int zero = 0; 
dynClear(array);
int pos;
for(int i = 1; i<=dynlen(df);i++)
{
  if(df[i]>-1)
  {
  if(df[i]>max)
    {
    max = df[i];
    mIdx = i;
  }
  if(df[i]<min)
  {
  min = df[i];
  minIdx = i;
  }
  
  pos = df[i];
  pos = (pos / width)+1;
  if(dynlen(array)<pos)
    array[pos]=0;
    array[pos]=(array[pos]+ 1.0);
  }
  //DebugN(\"elem: \",df[i],array[pos],max);
  else
    zero++;
}
for(int i = 2 ; i<=dynlen(array); i++)
{
  if(array[i]==0)
  {
    dynRemove(array,i);
    i--;
    }
  else
    break;
  
}


// if(strpos(title,\"arT\")>0)
//   DebugN(df,min,max,mIdx,minIdx);
int type;
if((min!=max)&&(min != 9999))
{
if(strpos(title,\"arT\")>0)
  {
  type = 2;
  result[4] =  \"Temperature\";
  //DebugN(df);
    maxMin[type][1] = fwDU_getLogicalName(Tchannels[mIdx]);
    maxMin[type][3] = fwDU_getLogicalName(Tchannels[minIdx]);
    result[2] = fwDU_getLogicalName(Tchannels[mIdx]);
  }
else
{
  type = 1;
  result[4] =  \"Chambers current\";
  maxMin[type][1] = fwDU_getLogicalName(Ichannels[mIdx]);
  maxMin[type][3] = fwDU_getLogicalName(Ichannels[minIdx]);
  result[2] = fwDU_getLogicalName(Ichannels[mIdx]);
}
  

maxMin[type][2] = df[mIdx];
maxMin[type][4] = df[minIdx];
//DebugN(Ichannels[mIdx],df[mIdx]);
result[1] = \"Entries: \" + (dynlen(df)-zero);
result[5] = dynAvg(df);
int pospoint = strpos(result[5],\".\"); 
if(pospoint>0)
  result[5] = substr(result[5],0,pospoint+2);
result[3] = df[mIdx];
//DebugN(min,max);
if(df[minIdx]>0)
{
  int xst=(df[minIdx]-width); 
  bt.xStart= xst;
//barTrend.xOrigin(-10);
}
else
bt.xStart=width-1;

bt.xRange= max+ width * 4;
bt.xWidth=width;
max = 0;

//DebugN(\"Arr:\", array);
for(int i =1;i<=dynlen(array);i++)
{
  if(array[i]>max)
    max = array[i];
 
  }
bt.yRange = max + (max)/2; 
// Setting the values

//DebugN(array,df);
setValue(bt, \"data\",array);
 
// Update bar trend
 
bt.flush();
}
else
{
  result[4] = \"All chambers off\";
  result[2] = \"No values different to zero\";
  result[1] = \"Entries: 0\";
  result[3] = \"0\";
  result[5] = \"0\";
  }
}




void refreshTValues()
{
  dyn_string ttt;
  //DebugN(\"dimensione: \",dynlen(Tchannels));
  if(dynlen(Tchannels)==0)
  {
    if(strpos($2,\"_W\")<0){
     string T_COMPONENT = RPCfwSupervisor_getComponent(\"EndcapT\");
     endcapRPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,ttt);              //Tchannels);
   for (int i=1; i <=dynlen(ttt); i++)
  {
    if (strpos(fwDU_getLogicalName(ttt[i]), \"_R\")>-1)
    {
      dynAppend (Tchannels, ttt[i]);
    }
  }
   }else{
     string T_COMPONENT = RPCfwSupervisor_getComponent(\"BarrelLV\");
     RPCfwSupervisor_getChannelsFromName($2,\"T\",T_COMPONENT,Tchannels);
   
   }
   
  }
  
  
  
  if(totT==0)
  {     
    totT = dynlen(Tchannels);  
  }

 for(int i =1 ; i<=dynlen(Tchannels);i++)
 {
    dpGet(Tchannels[i] + \".actual.temperature\",tValues[i]);  
    //  DebugN(fwDU_getLogicalName(Tchannels[i]),tValues[i]);
 }

} 



////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////

void refreshIValues()
{
if(dynlen(Ichannels)==0)
   {
  Ichannels = strsplit($hvChan,\" |\");
  dynUnique(Ichannels);
  if(dynlen(Ichannels)>0)
  if(Ichannels[2]==\"\")
    dynRemove(Ichannels,2);
        // DebugN(channels);
}

if(totI==0)
{
  totI = dynlen(Ichannels);
  }

 for(int i=1;i<=dynlen(Ichannels);i++)
 {
  if(Ichannels[i]!=\"\")
  dpGet(Ichannels[i]+\".actual.iMon\",iValues[i]);
  else
  {
    dynRemove(Ichannels,i);
    i--;
    }
  
  }
// DebugN(\"...\",Ichannels,iValues);
}
" 0
 2
"CBRef" "1"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 92
"dsa"
""
1 186 30 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  dyn_string split = strsplit($2,\"_\");
 
  if (strpos(split[2],\"E\")>=0)
  {
     this.text= \"Disc \" + split[2][1]+ split[2][2]+\" Global Monitoring\"; 
   }
  else this.text= \"Wheel \" + split[2][1]+ split[2][2]+\" Global Monitoring\"; 
}" 0
 E 0 1 1 0 1 E U  0 E 188 12 614 38
0 2 0 "0s" 0 0 0 65 0 0  188 12 1
1
LANG:1 26 Arial,-1,19,5,75,0,0,0,0,0
0 1
LANG:1 5 Text1
13 91
"Button1"
""
1 986 728 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,69,0,0,0,0,0
0  984 726 1068 763

T 
1
LANG:1 5 Close
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
13 114
"PUSH_BUTTON3"
""
1 20 694 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
55 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  18 692 92 720

T 
1
LANG:1 6 Change
"main()
{
  Text3.visible= FALSE;
    sect3.visible=true;
  ch3.visible= true;
  enter3.visible = true;
  group3.visible = true;
  PRIMITIVE_TEXT3.visible = false;
  this.visible=false;
  int index = 3;
  dyn_string exceptionInfo;
  fwTrending_removeFaceplate(myModuleName(), myPanelName(), \"Trend\"+index,exceptionInfo);
}" 0
 E E E
13 117
"PUSH_BUTTON4"
""
1 552 690 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
61 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  550 688 624 716

T 
1
LANG:1 6 Change
"main()
{
  Text4.visible= FALSE;
    sect4.visible=true;
  ch4.visible= true;
  enter4.visible = true;
  group4.visible = true;
  PRIMITIVE_TEXT4.visible = false;
  this.visible=false;
  int index = 4;
  dyn_string exceptionInfo;
  fwTrending_removeFaceplate(myModuleName(), myPanelName(), \"Trend\"+index,exceptionInfo);
}" 0
 E E E
2 128
"PRIMITIVE_TEXT3"
""
1 152 302 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
83 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 152 598 316 634
0 2 2 "0s" 0 0 0 64 0 0  152 598 1
1
LANG:1 33 MS Shell Dlg,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 4 CIAO
2 133
"PRIMITIVE_TEXT4"
""
1 152 302 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
93 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 726 608 890 644
0 2 2 "0s" 0 0 0 64 0 0  726 608 1
1
LANG:1 33 MS Shell Dlg,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 4 CIAO
27 151
"barImon"
""
1 22 72 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
127 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  20 70 354 310
2 0 30 5 9 "%H:%M" 0 1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  0 3 0 1 0 1 N {0,0,0}
0 0 30 1 1 "%H:%M" 0 1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  0 3 0 1 0 1 N {0,0,0}
1 0 0 10 1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  3 0 1 0 1 N {0,0,0}
0 0 1 0 1 N {0,0,0} 2 0 0 20 20 N "_ETM" N "_ETM" N "_ETM" 1 0 10
"main()
{
  iTitle.text = \"Refreshing.....\";
  //iTitle.text = \"Refreshing.....\";          
 // DebugN(\"s\",Ichannels);
refreshIValues();
 //DebugN(\"s\",iValues);
// Values
int width = 1; 
dyn_string result;
if(dynlen(Ichannels)>0)
{
fillHistos(iValues,width,\"barImon\",result);
iEntries.text = result[1] +\"/\"+ totI +\"\\n Avg: \"+result[5];// \"Entries: \" + (dynlen(df)-zero);
Itext.text = result[2];//fwDU_getLogicalName(Ichannels[mIdx]);
iVal.text = result[3];//df[mIdx];
iTitle.text = result[4];// \"Chambers current\"; 
}
else
iTitle.text = \"No Hardware channels found.\";// \"Chambers current\"; 
  
  
}
" 0

27 152
"barTemp"
""
1 458 72 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
129 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  456 70 782 310
2 0 30 1 9 "%H:%M" 0 1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  0 3 0 1 0 1 N {0,0,0}
0 0 20 1 1 "%H:%M" 0 1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  0 3 0 1 0 1 N {0,0,0}
1 0 0 10 1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  3 0 1 0 1 N {0,0,0}
0 1 1 2 1 N {0,0,0} 2 0 0 20 20 N "_ETM" N "_ETM" N "_ETM" 1 0 10
"
main()
{
 tTitle.text = \"Refreshing.....\";
 
   //shape bt=getShape(\"barTemp\"); 
   refreshTValues(); 
// Values
 
dyn_float df = tValues;

int width = 1; 

//DebugN(Tchannels);
dyn_string result;
if(dynlen(Tchannels)>1)
{
fillHistos(tValues,width,\"barTemp\",result);
tEntries.text = result[1]+\"/\"+ totT+\"\\n Avg: \"+result[5];// \"Entries: \" + (dynlen(df)-zero);
Ttext.text = result[2];//fwDU_getLogicalName(Ichannels[mIdx]);
tVal.text = result[3];//df[mIdx];


tTitle.text = result[4];// \"Chambers current\"; 
}
else
tTitle.text = \"No sensors found.\";  


}

" 0

2 153
"iTitle"
""
1 117 44 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
130 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 117 44 257 62
0 2 2 "0s" 0 0 0 65 0 0  117 44 2
1
LANG:1 33 MS Shell Dlg,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 47 Chamber Current                                
1
LANG:1 33 MS Shell Dlg,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 0 
2 154
"tTitle"
""
1 549 44 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
132 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 549 44 689 62
0 2 2 "0s" 0 0 0 65 0 0  549 44 2
1
LANG:1 33 MS Shell Dlg,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 45 Temperature                                  
1
LANG:1 33 MS Shell Dlg,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 0 
13 157
"Close"
""
1 350 420 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
135 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  348 418 476 452

T 
1
LANG:1 5 Close
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
22 160
"COMBO_BOX1"
""
1 160 316 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
138 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  158 314 216 340
3
1
LANG:1 3 0.5

0
1
LANG:1 1 1

0
1
LANG:1 1 2

0

"main()
{
  this.selectedPos = 2;
}" 0

"main()
{
   

   shape bt=getShape(\"barImon\"); 
 dyn_float df;
 
//refreshIValues();
 
// Values
int width; 
df = iValues;
//DebugN();
//df=makeDynFloat(10.3, 30.5,3.4,22,23.4,18,13,17,16,22,23.4,18, 4.2, 25.1, 15.3,10.3, 29.5, 4.2, 5.1, 8.3,23.3, 30.5, 14.2, 17.1, 11.3);
//DebugN(df);
// Width of the bars
string select = this.selectedText; 
switch (select) {
  case \"0.5\":
    width = 5;
    for(int i =1;i<=dynlen(df);i++)
    {
      df[i]=df[i]*10;
      }
    iUnit.text = \"0.1 uA\";
    break;
  case \"1\":
    width = 1;
    iUnit.text = \" uA\";
    break;
    case \"2\":
    width = 2;
    iUnit.text = \" uA\";
    break;
  }
//DebugN(select,width);

dyn_string result;
fillHistos(df,width,\"barImon\",result);
iEntries.text = result[1];// \"Entries: \" + (dynlen(df)-zero);
if(width<3){
Itext.text = result[2];//fwDU_getLogicalName(Ichannels[mIdx]);
iVal.text = result[3];//df[mIdx];
}

iTitle.text = result[4];// \"Chambers current\"; 
}" 0

E
 0 0
2 161
"PRIMITIVE_TEXT9"
""
1 106 320 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
139 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 106 320 154 338
0 2 2 "0s" 0 0 0 66 0 0  106 320 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 8 BIN Size
22 162
"COMBO_BOX2"
""
1 590 316 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
141 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  588 314 646 340
3
1
LANG:1 3 0.5

0
1
LANG:1 1 1

0
1
LANG:1 1 2

0

"main()
{
  
  this.selectedPos = 2;
}" 0

"
main()
{
   tTitle.text = \"Refreshing.....\";
   shape bt=getShape(\"barTemp\"); 
 dyn_float df;

// refreshTValues();
  
// Values
int width; 
df = tValues; 
//df=makeDynFloat(10.3, 30.5,3.4,22,23.4,18,13,17,16,22,23.4,18, 4.2, 25.1, 15.3,10.3, 29.5, 4.2, 5.1, 8.3,23.3, 30.5, 14.2, 17.1, 11.3);
 //DebugN(df);
// Width of the bars
string select = this.selectedText; 
switch (select) {
  case \"0.5\":
    width = 5;
    for(int i =1;i<=dynlen(df);i++)
    {
      df[i]=df[i]*10;
      }
    tUnit.text = \"0.1 C\";
    break;
  case \"1\":
    width = 1;
    tUnit.text = \" C\";
    break;
    case \"2\":
    width = 2;
    tUnit.text = \" C\";
    break;
  }
//DebugN(select,width);

dyn_string result;
fillHistos(df,width,\"barTemp\",result);
tEntries.text = result[1];// \"Entries: \" + (dynlen(df)-zero);
if(width<3){
Ttext.text = result[2];//fwDU_getLogicalName(Ichannels[mIdx]);
tVal.text = result[3];//df[mIdx];
}

tTitle.text = result[4];// \"Chambers current\"; 


}" 0

E
 0 0
2 163
"PRIMITIVE_TEXT10"
""
1 540 318 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
143 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 540 318 588 336
0 2 2 "0s" 0 0 0 66 0 0  540 318 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 8 BIN Size
2 164
"iUnit"
""
1 356 282 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
144 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 356 282 389 302
0 2 2 "0s" 0 0 0 65 0 0  356 282 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 2 uA
2 165
"tUnit"
""
1 784 282 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
146 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 784 282 812 302
0 2 2 "0s" 0 0 0 65 0 0  784 282 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 1 C
22 166
"COMBO_BOX3"
""
1 380 354 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
147 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  378 352 450 382
2
1
LANG:1 7 Maximum

0
1
LANG:1 7 Minimum

0

E
"main()
{
  //DebugN(maxMin,dynlen(maxMin));
  string text = iEntries.text;
  text = substr(text,(strpos(text,\":\")+2));
  //DebugN(text);
  if((dynlen(Ichannels)==0)||(text ==\"0\"))
  {
   for(int i = 1 ;i<=4;i++)
    maxMin[1][i] = \"\";
  }
    if(dynlen(Tchannels)==0)
  {
   for(int i = 1 ;i<=4;i++)
    maxMin[2][i] = \"\";
    } 
  if(this.selectedPos == 1)
  {
    Ttext.text = maxMin[2][1];
    tVal.text = maxMin[2][2];
    Itext.text = maxMin[1][1];
    iVal.text = maxMin[1][2];
  }
    else if(this.selectedPos == 2)
      {
      Ttext.text = maxMin[2][3];
      tVal.text = maxMin[2][4];
      Itext.text = maxMin[1][3];
      iVal.text = maxMin[1][4];
      }
 }" 0

E
 0 0
14 167
"Itext"
""
1 22 357 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
148 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  20 355 302 378
2 "0s" 0 0 0 0 0 -1  E E E
14 168
"Ttext"
""
1 466 357 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
150 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  464 355 720 378
2 "0s" 0 0 0 0 0 -1  E E E
14 170
"iVal"
""
1 310 357 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
153 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  308 355 352 378
2 "0s" 0 0 0 0 0 -1  E E E
14 171
"tVal"
""
1 732 357 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
155 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  730 355 776 378
2 "0s" 0 0 0 0 0 -1  E E E
13 173
"PUSH_BUTTON6"
""
1 370 160 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
157 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  368 158 440 218

T 
1
LANG:1 20 REFRESH
 or in 1 sec
"main()
{
  iTitle.text = \"Refreshing.....\";
  tTitle.text = \"Refreshing.....\";
  
 refreshIValues(); 
  dyn_string result;
if(dynlen(Ichannels)>1)
 {
  fillHistos(iValues,1,\"barImon\",result);
  iEntries.text = result[1]+\"/\"+ totI +\"\\n Avg: \"+result[5];;// \"Entries: \" + (dynlen(df)-zero);
  Itext.text = result[2];//fwDU_getLogicalName(Ichannels[mIdx]);
  iVal.text = result[3];//df[mIdx];
  iTitle.text = result[4];// \"Chambers current\";
  COMBO_BOX3.selectedPos = 1;
  COMBO_BOX1.selectedPos = 2;
  
}
else
  tTitle.text = \"No HV channels found\";

 refreshTValues(); 
// Values
//DebugN(\"\\\\\",df);  
//df=makeDynFloat(10.3, 30.5,3.4,22,23.4,18,13,17,16, 4.2, 25.1, 15.3,10.3, 29.5,40, 4.2, 5.1, 8.3,23.3, 30.5, 14.2, 17.1, 11.3);

//DebugN($2,\"TTT df\",df); 

// Width of the bars
if(dynlen(Tchannels)>1)
 {
  fillHistos(tValues,1,\"barTemp\",result);
  tEntries.text = result[1]+\"/\"+ totT+\"\\n Avg: \"+result[5];;// \"Entries: \" + (dynlen(df)-zero);
  Ttext.text = result[2];//fwDU_getLogicalName(Ichannels[mIdx]);
  tVal.text = result[3];//df[mIdx];
  tTitle.text = result[4];// \"Chambers current\";
  COMBO_BOX3.selectedPos = 1; 
  COMBO_BOX2.selectedPos = 2;
  }
else
  tTitle.text = \"No sensor found\";


}
" 0
 E E "main()
{
  //this.text(\"dddd \\n ddd\");
  int i = 31;
  while(1){
    i--;
    delay(1,0);
    if(i % 5 == 0)
      this.text(\"REFRESH \\n or in \"+ i + \" s\");
    if(i==0)
    {
      refresh();
      i=31;
      }
    
    }
}

void refresh(){
  iTitle.text = \"Refreshing.....\";
  tTitle.text = \"Refreshing.....\";
  
 refreshIValues(); 
 //DebugN(Ichannels);
  dyn_string result;
if(dynlen(Ichannels)>1)
 {
  fillHistos(iValues,1,\"barImon\",result);
  iEntries.text = result[1]+\"/\"+ totI +\"\\n Avg: \"+result[5];;// \"Entries: \" + (dynlen(df)-zero);
  Itext.text = result[2];//fwDU_getLogicalName(Ichannels[mIdx]);
  iVal.text = result[3];//df[mIdx];
  iTitle.text = result[4];// \"Chambers current\";
   COMBO_BOX3.selectedPos = 1;
  COMBO_BOX1.selectedPos = 2;
}
else
  tTitle.text = \"No HV channels found\";

 refreshTValues(); 

// Width of the bars
if(dynlen(Tchannels)>1)
 {
  fillHistos(tValues,1,\"barTemp\",result);
  tEntries.text = result[1]+\"/\"+ totT+\"\\n Avg: \"+result[5];;// \"Entries: \" + (dynlen(df)-zero);
  Ttext.text = result[2];//fwDU_getLogicalName(Ichannels[mIdx]);
  tVal.text = result[3];//df[mIdx];
  tTitle.text = result[4];// \"Chambers current\"; 
   COMBO_BOX3.selectedPos = 1;
  COMBO_BOX2.selectedPos = 2;
  }
else
  tTitle.text = \"No sensor found\";


}

" 0

2 175
"iEntries"
""
1 277.9375 316 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
159 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 276 316 350.9375 346
0 2 2 "0s" 0 0 0 64 0 0  276 316 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 9 Entries: 
2 176
"tEntries"
""
1 705.875 316 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
161 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 702 316 776.875 346
0 2 2 "0s" 0 0 0 64 0 0  702 316 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 9 Entries: 
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
