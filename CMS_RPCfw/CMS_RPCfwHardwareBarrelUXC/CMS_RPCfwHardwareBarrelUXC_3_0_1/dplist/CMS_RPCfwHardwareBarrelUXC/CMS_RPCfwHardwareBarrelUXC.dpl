# ascii dump of database

# Datapoint/DpId (CMS_RPCfwHardwareBarrelUXC_ConfDBsetup.dpl)
DpName	TypeName	ID
ConfigurationSetups/RPCConfig	_FwConfigurationDB_setup	181866
DBConnections/RPCConf	_FwDBConnection	374243


# Datapoint/DpId (CMS_RPCfwHardwareBarrelUXC_FSMTypes.dpl)
DpName	TypeName	ID
fwOT_FwCaenChannelLV	_FwFsmObjectType	52818
fwOT_FwCaenCrateSY1527Basic	_FwFsmObjectType	52819
fwOT_FwCaenChannelLBBLV	_FwFsmObjectType	105132
fwOT_FwCaenBoardEasy	_FwFsmObjectType	139097
fwOT_RPC_LV	_FwFsmObjectType	139101
fwOT_RPC_T	_FwFsmObjectType	139102
fwOT_RPC_LBBLV	_FwFsmObjectType	139103
fwOT_RPC_Device	_FwFsmObjectType	139104
fwOT_RPC_SY1527	_FwFsmObjectType	139105
fwOT_RPC_BC	_FwFsmObjectType	139107
fwOT_FwCaenChannelADCTemp	_FwFsmObjectType	144209
fwOT_FwCaenBoardSY1527A1676	_FwFsmObjectType	144212
fwOT_RPC_MAO	_FwFsmObjectType	146435
fwOT_FwCaenChannelMAO	_FwFsmObjectType	200385
fwOT_RPC_Boards	_FwFsmObjectType	200389
fwOT_RPC_TopHwDevice	_FwFsmObjectType	355190


# Datapoint/DpId (CMS_RPCfwHardwareBarrelUXC_Plot.dpl)
DpName	TypeName	ID
_FwTrendingQuickPlotDefaults	FwTrendingPlot	26874
vMon_iMonTrend	FwTrendingPlot	57660
dpeOverTime	FwTrendingPlot	146434


# DpValue (CMS_RPCfwHardwareBarrelUXC_ConfDBsetup.dpl)
ElementName	TypeName	_original.._value	_original.._status64	_original.._stime
ConfigurationSetups/RPCConfig.version	_FwConfigurationDB_setup	3	0x101	15.04.2010 16:12:07.255
ConfigurationSetups/RPCConfig.DBConnection	_FwConfigurationDB_setup	"RPCConf"	0x200101	06.03.2013 11:35:17.576
ConfigurationSetups/RPCConfig.default	_FwConfigurationDB_setup	1	0x101	15.04.2010 16:12:07.255
DBConnections/RPCConf.version	_FwDBConnection	5	0x101	06.03.2013 11:35:13.264
DBConnections/RPCConf.description	_FwDBConnection	""	0x101	06.03.2013 11:35:13.264
DBConnections/RPCConf.dbType	_FwDBConnection	"ORACLE"	0x101	06.03.2013 11:35:13.264
DBConnections/RPCConf.dbName	_FwDBConnection	"int2r"	0x101	06.03.2013 11:35:13.264
DBConnections/RPCConf.dbUser	_FwDBConnection	"cms_rpc_test_config_db"	0x101	06.03.2013 11:35:13.264
DBConnections/RPCConf.dbPassword	_FwDBConnection	"7QGiOUDCyrdHFUnuuXnVQCr+xv4="	0x101	06.03.2013 11:34:23.546
DBConnections/RPCConf.connectString	_FwDBConnection	"driver=<DRIVER>;uid=<USER>;enc_pwd=<PASSWORD>;database=<DBNAME>;"	0x101	06.03.2013 11:35:13.264
DBConnections/RPCConf.dbSchema	_FwDBConnection	""	0x101	06.03.2013 11:35:13.264

# DpValue (CMS_RPCfwHardwareBarrelUXC_FSMTypes.dpl)
ElementName	TypeName	_original.._value	_original.._status64	_original.._stime
fwOT_FwCaenChannelLV.panel	_FwFsmObjectType	"FwCaenChannel|CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCFwCaenChannelLV.pnl"	0x300101	27.03.2013 09:29:26.088
fwOT_FwCaenChannelLV.components	_FwFsmObjectType	"int actual.status
", "", "FwCaenChannelLV_initialize(string domain, string device)
{ 
 //dpSet(device+\".settings.onOff:_original.._value\",0);
}




", "FwCaenChannelLV_valueChanged( string domain, string device,
      int actual_dot_status, string &fwState )
{
	
    string ndev;
    int busy = 0;
    bool type = 0; // 1 ana 0 dig
      
    string logBusy = fwDU_getLogicalName(device);  
    if(strpos(logBusy,\"ANA\")>0)
    {
      type = 1;
      strreplace(logBusy,\"ANA\",\"DIG\"); 
     }
    else
     strreplace(logBusy,\"DIG\",\"ANA\"); 
      
    ndev = fwDU_getPhysicalName(logBusy);
        
      
    fwDU_getParameter(domain,device,\"busy\",busy);
    
    if(busy==0)
    {
      fwDU_setParameter(domain,ndev,\"busy\",1);   
      fwDU_setParameter(domain,device,\"busy\",1);
    }
        
      
      /////////////////////////////
      
  
      bool flag = true;
      time now = getCurrentTime();
     
  if(actual_dot_status==0) 
	{ 

    fwState = \"OFF\";
                
   
    
    if(busy==0) 
    {
            
    dpSet(ndev+\".settings.onOff:_original.._value\",0);
            
    // check if the other ch is off
    int nnow;
    bool ok = false;
    delay(2,0);
    for(int i = 1; i<=3;i++)
    {
    dpGet(ndev+\".settings.onOff\",nnow);
    if(nnow!=0)
      dpSet(ndev+\".settings.onOff:_original.._value\",0);
    else
      break;
     
     delay(2,0);
     }
    }   
	} 
	else if((getBit(actual_dot_status, 8)) ||    
                	(getBit(actual_dot_status, 9)))
           
	{   
		fwState = \"TRIPPED\"; 

    if(busy==0){

      dpSet(ndev+\".settings.onOff:_original.._value\",0);
            
      // check if the other ch is off
      int nnow;
      bool ok = false;
      delay(2,0);
      for(int i = 1; i<=3;i++)
      {
      dpGet(ndev+\".settings.onOff\",nnow);
      if(nnow!=0)
        dpSet(ndev+\".settings.onOff:_original.._value\",0);
      else
        break;
     
       delay(2,0);
      } 
    }
	}   
	else if(getBit(actual_dot_status, 7))
   {   
		
    fwState = \"ERROR\";
   
    dpSet(device+\".settings.onOff:_original.._value\",0);

    if(busy==0)           
    {
    dpSet(ndev+\".settings.onOff:_original.._value\",0); 

    }
	 } 
	else if (  
	(getBit(actual_dot_status, 3)) ||  
	(getBit(actual_dot_status, 4)) ||   
        (getBit(actual_dot_status, 5)) ||
        (getBit(actual_dot_status, 15)) ||   
        (getBit(actual_dot_status, 14)))  
	{  
		
    fwState = \"WARNING\";

    dpSet(device+\".settings.onOff:_original.._value\",0);

    if(busy==0){ 
            
    dpSet(ndev+\".settings.onOff:_original.._value\",0);
            


    }
	}  
 else if (getBit(actual_dot_status, 0))    
	{    
		
		fwState = \"ON\";   
           
    if(busy==0)
      {     
      // check if the other ch is on
            
      int astatus;
            
      dpGet(ndev+\".actual.status\",astatus);
      if(astatus>2)
        dpSet(device + \".settings.onOff:_original.._value\",0);
              
      }
   
	}  
	else  
	{  
	  fwState = \"ERROR\";
          
    dpSet(device+\".settings.onOff:_original.._value\",0);   
    dpSet(ndev+\".settings.onOff:_original.._value\",0);
  }
        
        
  if(busy==0)
        {
    //DebugN(ndev,\" end\", device,logBusy);
        delay(10,0);
        fwDU_setParameter(domain,device,\"busy\",0);
        fwDU_setParameter(domain,ndev,\"busy\",0);
        }      
          

}





", "FwCaenChannelLV_doCommand(string domain, string device, string command)
{

  string state;
  fwDU_getState(domain,device,state);
  fwDU_setState(domain,device,state);

  float adtime = 1;
  string logName; 

  if (command == \"OFF\")
	{
	  logName = fwDU_getLogicalName(device); 

    if((strpos(logName,\"ANA\"))>0) 
    { 
      
      strreplace(logName,\"ANA\",\"DIG\"); 
      string digital= fwDU_getPhysicalName(logName); 
      
      int anaOn,digOn;
      dpGet(digital+\".actual.isOn\",digOn,device+\".actual.isOn\",anaOn);      
      if((anaOn+digOn)>0)
      {
      dpSet(digital+\".settings.onOff:_original.._value\",0);
      dpSet(device+\".settings.onOff:_original.._value\",0);
              
              
      delay(2,0);
      int val;
      for(int i = 1; i<3;i++)
      {
        dpGet(digital+\".settings.onOff\",val);
        if(val == 0)
        {
         dpGet(device+\".settings.onOff\",val);
         if(val == 0)
         {
            break;
         }
         else 
          {
           dpSet(device+\".settings.onOff:_original.._value\",0);
           delay(2,0);
          }
                
        }
        else
        {
        dpSet(digital+\".settings.onOff:_original.._value\",0);
        dpSet(device+\".settings.onOff:_original.._value\",0);
        delay(2,0);
        }
      }
      }        
    }
	}
	if(command == \"ON\") 
	{ 

      logName = fwDU_getLogicalName(device); 
      
      if((strpos(logName,\"ANA\"))>0) 
      { 
      strreplace(logName,\"ANA\",\"DIG\"); 
      //DebugTN(device,\" --> \");
      string digital= fwDU_getPhysicalName(logName); 
      
      int anaOn,digOn;
      dpGet(digital+\".actual.isOn\",digOn,device+\".actual.isOn\",anaOn);        
      if((anaOn+digOn)!=2)
      {
      dpSet(device+\".settings.onOff:_original.._value\",1); 
      delay(adtime); 
      dpSet(digital+\".settings.onOff:_original.._value\",1);
      //DebugTN(device,\"DIG\");

      delay(3,0);
      int val;
      for(int i = 1; i<3;i++)
       {
        dpGet(digital+\".settings.onOff\",val);
        if(val == 1)
        {
          dpGet(device+\".settings.onOff\",val);
          if(val == 1){
            //val = -1;
            break;
          }
          else 
          {
            dpSet(device+\".settings.onOff:_original.._value\",1);
            delay(adtime);
            dpSet(digital+\".settings.onOff:_original.._value\",1);
            delay(2,0);
            }
                
         }
        else
          {
          dpSet(digital+\".settings.onOff:_original.._value\",1);
          dpSet(device+\".settings.onOff:_original.._value\",1);
          delay(2,0);
          }
       }
      }    
     }
         
	} 
  if (command == \"CLEAR_ALARM\")
        {
        string status;
        fwDU_getState(domain,device,status);
        dyn_string exc;                  
        dyn_dyn_string hierarchy;                   
        fwDevice_getHierarchy(device,hierarchy,exc);                   
        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
        //string dpe = substr(device,0,strpos(device,\"/bra\"));
        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
        fwDU_setState(domain,device,status);
        }
}





"	0x101	27.03.2013 09:18:53.873
fwOT_FwCaenChannelLV.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	27.03.2013 09:18:53.858
fwOT_FwCaenChannelLV.actions	_FwFsmObjectType	"ON/CLEAR_ALARM", "", "1", "", "0", "ON/OFF", "", "1", "", "0", "ON/ON", "", "1", "", "0", "OFF/CLEAR_ALARM", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/OFF", "", "1", "", "0", "WARNING/CLEAR_ALARM", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "WARNING/ON", "", "1", "", "0", "TRIPPED/CLEAR_ALARM", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "TRIPPED/OFF", "", "1", "", "0", "ERROR/CLEAR_ALARM", "", "1", "", "0", "ERROR/ON", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0"	0x101	27.03.2013 09:18:53.858
fwOT_FwCaenChannelLV.parameters	_FwFsmObjectType	"int busy = 0"	0x101	17.03.2009 16:20:48.231
fwOT_FwCaenCrateSY1527Basic.panel	_FwFsmObjectType	"FwCaenCrateSY1527|CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCFwCaenCrateSY1527Basic.pnl"	0x300101	27.03.2013 09:29:26.088
fwOT_FwCaenCrateSY1527Basic.components	_FwFsmObjectType	"bool FrontPanOutP.FanFailure
string PWstatus.HvPwSM
string Information.ModelName
bool _CAENOPCServer.Connected
bool FrontPanInP.Interlock
string Communication.ConnStatus
", "bool Commands.Kill
bool Commands.ClearAlarm
", "FwCaenCrateSY1527Basic_initialize(string domain, string device)
{
}




", "FwCaenCrateSY1527Basic_valueChanged( string domain, string device,
      bool FrontPanOutP_dot_FanFailure,
      string PWstatus_dot_HvPwSM,
      string Information_dot_ModelName,
      bool _CAENOPCServer_dot_Connected,
      bool FrontPanInP_dot_Interlock,
      string Communication_dot_ConnStatus, 
      string &fwState )
{
	if (FrontPanOutP_dot_FanFailure == 1)
	{
		
         fwState = \"FANFAILURE\";
	}
  else if (Communication_dot_ConnStatus == \"Ko\")
  {
    fwState = \"DISCONNECT\";
  }
  else if (FrontPanInP_dot_Interlock == 1)
	{
		fwState = \"KILL_RECEIVED\";
	}
	else if (strpos(PWstatus_dot_HvPwSM,\"-\") >= 0)
	{
		fwState = \"POWERSUPPLY_FAILURE\";
	}
	else if (_CAENOPCServer_dot_Connected == 0)
	{
		fwState = \"DISCONNECT\";
	}
  else if (Information_dot_ModelName == \"Ko\")
	{
		fwState = \"DISCONNECT\";
	}
	else 
	{
		fwState = \"OK\";
	}
}





", "FwCaenCrateSY1527Basic_doCommand(string domain, string device, string command)
{
	if (command == \"KILL\")
	{
		dpSet(device+\".Commands.Kill\",true);
	}
	if (command == \"CLEAR_ALARMS\")
	{
		dpSet(device+\".Commands.ClearAlarm\",true);
	}
}

", "", "", "FwCaenCrateSY1527Basic_initialize(string domain, string device)", "{", "}", "", "", "", "", "FwCaenCrateSY1527Basic_valueChanged( string domain, string device,", "      bool FrontPanOutP_dot_FanFailure,", "      string PWstatus_dot_HvPwSM,", "      string Information_dot_ModelName,", "      bool _CAENOPCServer_dot_Connected,", "      bool FrontPanInP_dot_Kill, ", "      string &fwState )", "{", "	if (FrontPanOutP_dot_FanFailure == 1)", "	{", "		fwState = \"FANFAILURE\";", "	}", "        else if (FrontPanInP_dot_Kill == 1)", "	{", "		fwState = \"KILL_RECEIVED\";", "	}", "	else if (strpos(PWstatus_dot_HvPwSM,\"-\") >= 0)", "	{", "		fwState = \"POWERSUPPLY_FAILURE\";", "	}", "	else if (_CAENOPCServer_dot_Connected == 0)", "	{", "		fwState = \"DISCONNECT\";", "	}", "        else if (Information_dot_ModelName == \"Ko\")", "	{", "		fwState = \"DISCONNECT\";", "	}", "	else ", "	{", "		fwState = \"OK\";", "	}", "}", "", "", ""	0x101	27.03.2013 09:18:54.436
fwOT_FwCaenCrateSY1527Basic.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "FANFAILURE", "FwStateAttention1", "", "", "", "KILL_RECEIVED", "FwStateAttention2", "", "", "", "POWERSUPPLY_FAILURE", "FwStateAttention2", "", "", "", "DISCONNECT", "FwStateAttention3", "", "", ""	0x101	27.03.2013 09:18:54.420
fwOT_FwCaenCrateSY1527Basic.actions	_FwFsmObjectType	"OK/KILL", "", "1", "", "0", "OK/CLEAR_ALARMS", "", "1", "", "0", "FANFAILURE/KILL", "", "1", "", "0", "FANFAILURE/CLEAR_ALARMS", "", "1", "", "0", "POWERSUPPLY_FAILURE/KILL", "", "1", "", "0", "POWERSUPPLY_FAILURE/CLEAR_ALARMS", "", "1", "", "0"	0x101	27.03.2013 09:18:54.420
fwOT_FwCaenCrateSY1527Basic.parameters	_FwFsmObjectType		0x141	23.06.2008 14:41:28.121
fwOT_FwCaenChannelLBBLV.panel	_FwFsmObjectType	"FwCaenChannel|CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCFwCaenChannelLV.pnl"	0x300101	27.03.2013 09:29:26.088
fwOT_FwCaenChannelLBBLV.components	_FwFsmObjectType	"int actual.status
", "", "FwCaenChannelLBBLV_initialize(string domain, string device)
{ 
//dpSet(device+\".settings.onOff:_original.._value\",0); 

}






", "FwCaenChannelLBBLV_valueChanged( string domain, string device,
      int actual_dot_status, string &fwState )
{
 
  
  string ndev;
  int busy = 0;
  bool type = 0; // 1 25 0 33
  time now = getCurrentTime();
  string logBusy = fwDU_getLogicalName(device);  

  if((strpos(logBusy,\"B25\"))>0)
  {
    type = 1;
    strreplace(logBusy,\"B25\",\"B33\"); 
   }
  else
   strreplace(logBusy,\"B33\",\"B25\"); 
      
  ndev = fwDU_getPhysicalName(logBusy);
        
  // busy parameters are used to avoid multiple action occurred    
  fwDU_getParameter(domain,device,\"busy\",busy);
  if(busy==0)
  {
    fwDU_setParameter(domain,ndev,\"busy\",1);   
     
    fwDU_setParameter(domain,device,\"busy\",1);
  }
     
// Start the state list conditions
  
  if(actual_dot_status==0) 
	{ 
		fwState = \"OFF\"; 
           
  if(busy==0)
     {     
     dpSet(ndev+\".settings.onOff:_original.._value\",0);  
     }
	} 
	else if((getBit(actual_dot_status, 8)) ||    
	(getBit(actual_dot_status, 9))) 
	{   
		fwState = \"TRIPPED\"; 
           
    if(busy==0)
    { 
    dpSet(ndev+\".settings.onOff:_original.._value\",0);
    }
                  
	}   
	else if (  
	(getBit(actual_dot_status, 3)) ||  
	(getBit(actual_dot_status, 4)) ||   
      (getBit(actual_dot_status, 5)) ||   
      (getBit(actual_dot_status, 12)))  
	{  
		fwState = \"WARNING\";
           
   if(busy==0)
    {     
    dpSet(device+\".settings.onOff:_original.._value\",0);    
    dpSet(ndev+\".settings.onOff:_original.._value\",0);    
    }
            
	}  
	else if (getBit(actual_dot_status, 0))    
	{    
		fwState = \"ON\";   
           
    if(busy==0)
      {     
      // check if the other ch is on
            
      int astatus;
            
      dpGet(ndev+\".actual.status\",astatus);
      if(astatus>2)
        dpSet(device + \".settings.onOff:_original.._value\",0);
              
     } 
            
	}  
	else  
	{  
          
    fwState = \"ERROR\";

    dpSet(device+\".settings.onOff:_original.._value\",0);

    if(busy==0)
      {    
      dpSet(ndev+\".settings.onOff:_original.._value\",0);    
      }
	
  }  

  if(busy==0)
  {
    fwDU_setParameter(domain,ndev,\"busy\",0);   
     
    fwDU_setParameter(domain,device,\"busy\",0);
  }
        
        
}

", "FwCaenChannelLBBLV_doCommand(string domain, string device, string command)
{
  // Version 2.0
	//int i0set,v0set,lower,value; 

  string state;
  fwDU_getState(domain,device,state);
  fwDU_setState(domain,device,state);
      
      
  if (command == \"OFF\")
    {
    string logName = fwDU_getLogicalName(device);   
    if((strpos(logName,\"B33\"))>0) 
     { 
     strreplace(logName,\"B33\",\"B25\"); 

     string device1= fwDU_getPhysicalName(logName);
     
     int d1on,d2on;
     dpGet(device+\".actual.isOn\",d1on,device1+\".actual.isOn\",d2on);
     if((d1on+d2on)>0)     
     {
     dpSet(device+\".settings.onOff:_original.._value\",0); 
     dpSet(device1+\".settings.onOff:_original.._value\",0);
               
              
          // check if the command has been received
     delay(2,0);
     int val;
     for(int i = 1; i<3;i++)
        {
        dpGet(device1+\".settings.onOff\",val);
        if(val == 0)
          {
          dpGet(device+\".settings.onOff\",val);
          if(val == 0)
            {
            break;
            }
          else 
            {
            dpSet(device+\".settings.onOff:_original.._value\",0);
            //dpSet(device1+\".settings.onOff:_original.._value\",0);
            delay(2,0);
            }
                
          }
        else
            {
            dpSet(device+\".settings.onOff:_original.._value\",0);
            dpSet(device1+\".settings.onOff:_original.._value\",0);
            delay(2,0);
            }
        }    
      }
     }
    }
	
  if(command == \"ON\") 
    { 
            
    string logName = fwDU_getLogicalName(device);
              
    if((strpos(logName,\"B33\"))>0) 
      {
       //device = b33 device1 = b25  
       strreplace(logName,\"B33\",\"B25\"); 
       int d1on,d2on;
       string device1= fwDU_getPhysicalName(logName);// DebugN(device,device1);
       dpGet(device+\".actual.isOn\",d1on,device1+\".actual.isOn\",d2on);
       if((d1on+d2on)!=2)     
       {        
        
        dpSet(device1+\".settings.onOff:_original.._value\",1);
        dpSet(device+\".settings.onOff:_original.._value\",1);
               
              
            
    //check if the command has been received
            
        delay(3,0);
        int val;
        for(int i = 1; i<3;i++)
        {
          dpGet(device1+\".settings.onOff\",val);
          if(val == 1)
          {
            dpGet(device+\".settings.onOff\",val);
            if(val == 1)
            {
            //val = -1;
            break;
            }else 
            {
            dpSet(device1+\".settings.onOff:_original.._value\",1);
            dpSet(device+\".settings.onOff:_original.._value\",1);
            delay(2,0);
            }
          }else
            {
           dpSet(device1+\".settings.onOff:_original.._value\",1);
           dpSet(device+\".settings.onOff:_original.._value\",1);
             delay(2,0);
            }
        }
      }
    }
          
	} 
   if (command == \"CLEAR_ALARM\")
  {
  string status;
  fwDU_getState(domain,device,status);
  dyn_string exc;                  
  dyn_dyn_string hierarchy;                   
  fwDevice_getHierarchy(device,hierarchy,exc);                   
  string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
  //string dpe = substr(device,0,strpos(device,\"/bra\"));
  dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
  fwDU_setState(domain,device,status);
  }
}







"	0x101	27.03.2013 09:18:53.530
fwOT_FwCaenChannelLBBLV.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	27.03.2013 09:18:53.530
fwOT_FwCaenChannelLBBLV.actions	_FwFsmObjectType	"ON/CLEAR_ALARM", "", "1", "", "0", "ON/ON", "", "1", "", "0", "ON/OFF", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/CLEAR_ALARM", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "WARNING/CLEAR_ALARM", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "TRIPPED/CLEAR_ALARM", "", "1", "", "0", "ERROR/ON", "", "1", "", "0", "ERROR/CLEAR_ALARM", "", "1", "", "0"	0x101	27.03.2013 09:18:53.530
fwOT_FwCaenChannelLBBLV.parameters	_FwFsmObjectType	"int busy = 0"	0x101	05.10.2009 12:44:10.154
fwOT_FwCaenBoardEasy.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCFwCaenBoardEasy.pnl"	0x300101	27.03.2013 09:29:26.088
fwOT_FwCaenBoardEasy.components	_FwFsmObjectType	"bool Actual.12VPwS
float Temp.Temp1
string Information.FmwRelease
", "", "FwCaenBoardEasy_initialize(string domain, string device)
{
}
", "FwCaenBoardEasy_valueChanged ( string domain, string device,
                              bool Actual_dot_12VPwS,
                              float Temp_dot_Temp1,
                              string Information_dot_FmwRelease,
                              string &fwState )
{
	//DebugN(\"OoO\",device,Actual_dot_12VPwS,Actual_dot_Sync);
        bool flag = true;
        string model;
        dyn_string channels,exInfo;
        
        if ((Actual_dot_12VPwS == true))
	{
		fwState = \"POWER_FAILURE\";
	}
 	else if ((Information_dot_FmwRelease == \"\")||(Information_dot_FmwRelease == \"0\"))
 	{
          //DebugN(\"dd\");
           fwState = \"UNPLUGGED\";
           dpGet(device + \".model\",model);
           if(model== \"A3801A\")
           {
              fwDevice_getChildren(device,fwDevice_HARDWARE,channels,exInfo); 
             for(int i = 1 ; i<=dynlen(channels); i++)
             {
               dpSet(channels[i]+\".actual.temperature:_original.._value\",-44.9);
               
               }
           } 
 	}
  else if (Temp_dot_Temp1 > 36)
 	{
 		fwState = \"HIGH_TEMP\";
                
                if (Temp_dot_Temp1 > 42)
                {
                dyn_string devices;
                fwDevice_getChildren(device,fwDevice_HARDWARE,devices,exInfo); 
                 for(int i = 1 ; i<=dynlen(devices); i++)
                 {
               dpSet(devices[i]+\".settings.onOff:_original.._value\",0);
               
                  }
               }
 	}
	else 
	{
               fwState = \"OK\";
	}
}


", "FwCaenBoardEasy_doCommand(string domain, string device, string command)
{
}
"	0x101	27.03.2013 09:18:52.702
fwOT_FwCaenBoardEasy.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "HIGH_TEMP", "FwStateAttention1", "", "", "", "UNPLUGGED", "FwStateAttention3", "", "", "", "POWER_FAILURE", "FwStateAttention3", "", "", "", "OUT_OF_SYNC", "FwStateAttention2", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	27.03.2013 09:18:52.702
fwOT_FwCaenBoardEasy.actions	_FwFsmObjectType		0x101	27.03.2013 09:18:52.702
fwOT_FwCaenBoardEasy.parameters	_FwFsmObjectType		0x141	23.06.2008 14:41:28.168
fwOT_RPC_LV.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCRPC_LV.pnl"	0x300101	27.03.2013 09:29:26.104
fwOT_RPC_LV.components	_FwFsmObjectType		0x141	23.06.2008 14:41:28.184
fwOT_RPC_LV.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ANY$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "TRIPPED", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
       ( $ANY$FwCHILDREN in_state ERROR ) )  move_to ERROR|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
       ( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED
|when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
       ( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|", "", ""	0x101	27.03.2013 09:18:57.733
fwOT_RPC_LV.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "OFF/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ON/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "TRIPPED/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "TRIPPED/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "ERROR/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0"	0x101	27.03.2013 09:18:57.733
fwOT_RPC_LV.parameters	_FwFsmObjectType		0x141	23.06.2008 14:41:28.184
fwOT_RPC_T.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCRPC_T.pnl"	0x300101	27.03.2013 09:29:26.104
fwOT_RPC_T.components	_FwFsmObjectType		0x141	23.06.2008 14:41:28.199
fwOT_RPC_T.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state {ERROR,UNPLUGGED} )  move_to ERROR|when ( $ANY$FwCHILDREN in_state TOO_HIGH )  move_to TOO_HIGH|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN in_state OK )  move_to OK|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,UNPLUGGED} ) and
       ( $ANY$FwCHILDREN in_state TOO_HIGH ) )  move_to TOO_HIGH|", "", "", "TOO_HIGH", "FwStateAttention1", "when ( $ANY$FwCHILDREN in_state {ERROR,UNPLUGGED} )  move_to ERROR|when ( $ALL$FwCHILDREN in_state OK )  move_to OK|", "", ""	0x101	27.03.2013 09:18:58.483
fwOT_RPC_T.actions	_FwFsmObjectType		0x101	27.03.2013 09:18:58.483
fwOT_RPC_T.parameters	_FwFsmObjectType		0x141	23.06.2008 14:41:28.215
fwOT_RPC_LBBLV.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCRPC_LBBLV.pnl"	0x300101	27.03.2013 09:29:26.104
fwOT_RPC_LBBLV.components	_FwFsmObjectType		0x141	23.06.2008 14:41:28.215
fwOT_RPC_LBBLV.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ANY$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "TRIPPED", "FwStateAttention3", "when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
       ( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED
|when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
       ( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|", "", ""	0x101	27.03.2013 09:18:57.452
fwOT_RPC_LBBLV.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "OFF/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ON/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "TRIPPED/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "TRIPPED/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "ERROR/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0"	0x101	27.03.2013 09:18:57.452
fwOT_RPC_LBBLV.parameters	_FwFsmObjectType		0x141	23.06.2008 14:41:28.231
fwOT_RPC_Device.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUSC/CMS_RPCfwHardwareBarrelUSCRPC_Device.pnl"	0x300101	27.03.2013 09:29:26.104
fwOT_RPC_Device.components	_FwFsmObjectType		0x141	23.06.2008 14:41:28.246
fwOT_RPC_Device.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", ""	0x101	27.03.2013 09:18:57.186
fwOT_RPC_Device.actions	_FwFsmObjectType		0x101	27.03.2013 09:18:57.186
fwOT_RPC_Device.parameters	_FwFsmObjectType		0x101	26.03.2013 10:28:10.267
fwOT_RPC_SY1527.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCRPC_SY1527.pnl"	0x300101	27.03.2013 09:29:26.104
fwOT_RPC_SY1527.components	_FwFsmObjectType		0x141	23.06.2008 14:41:28.262
fwOT_RPC_SY1527.states	_FwFsmObjectType	"NOT_READY", "FwStateOKNotPhysics", "when ( $ALL$FwCHILDREN in_state OK )  move_to OK
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCaenCrateSY1527Basic in_state FANFAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state KILL_RECEIVED ) or
( $ANY$FwCaenCrateSY1527Basic in_state POWERSUPPLY_FAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state DISCONNECT ) )  move_to ERROR|", "", "", "OK", "FwStateOKPhysics", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCaenCrateSY1527Basic in_state FANFAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state KILL_RECEIVED ) or
( $ANY$FwCaenCrateSY1527Basic in_state POWERSUPPLY_FAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state DISCONNECT ) )  move_to ERROR|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ALL$FwCaenCrateSY1527Basic not_in_state FANFAILURE ) and
( $ALL$FwCaenCrateSY1527Basic not_in_state KILL_RECEIVED ) and
( $ALL$FwCaenCrateSY1527Basic not_in_state POWERSUPPLY_FAILURE ) and
( $ALL$FwCaenCrateSY1527Basic not_in_state DISCONNECT ) )  move_to NOT_READY|", "", ""	0x101	27.03.2013 09:18:58.248
fwOT_RPC_SY1527.actions	_FwFsmObjectType		0x101	27.03.2013 09:18:58.248
fwOT_RPC_SY1527.parameters	_FwFsmObjectType		0x141	23.06.2008 14:41:28.277
fwOT_RPC_BC.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCRPC_BC.pnl"	0x300101	27.03.2013 09:29:26.104
fwOT_RPC_BC.components	_FwFsmObjectType		0x141	23.06.2008 14:41:28.277
fwOT_RPC_BC.states	_FwFsmObjectType	"NOT_OK", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR|when ( $ALL$FwCHILDREN in_state OK ) move_to OK|", "", "", "OK", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR|when ( $ALL$FwCHILDREN not_in_state OK )  move_to NOT_OK|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN not_in_state ERROR ) move_to NOT_OK|", "", ""	0x101	27.03.2013 09:18:56.733
fwOT_RPC_BC.actions	_FwFsmObjectType		0x101	27.03.2013 09:18:56.733
fwOT_RPC_BC.parameters	_FwFsmObjectType		0x141	23.06.2008 14:41:28.293
fwOT_FwCaenChannelADCTemp.panel	_FwFsmObjectType	"FwCaenChannelADC|CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCFwCaenChannelADCTemp.pnl"	0x300101	27.03.2013 09:29:26.088
fwOT_FwCaenChannelADCTemp.components	_FwFsmObjectType	"float actual.temperature
", "", "FwCaenChannelADCTemp_initialize(string domain, string device)
{
}

", "FwCaenChannelADCTemp_valueChanged( string domain, string device,
      float actual_dot_temperature, string &fwState )
{
        
          bool flag = true;
      //dpGet(device+\".actual.temperature:_original.._userbit1\",flag);
      if(!flag)
      {
            fwState = \"ERROR\";
            if(actual_dot_temperature > -44 )
              dpSet(device+\".actual.temperature\",-44.9);
      }
      else if ((actual_dot_temperature < -44 ))
	{
		fwState = \"UNPLUGGED\";
	}
        else if ((actual_dot_temperature < -10 )||(actual_dot_temperature > 40 ))
	{
		fwState = \"ERROR\";
	}
	else if (actual_dot_temperature > 24)
	{
		fwState = \"TOO_HIGH\";
	}
	else 
	{
		fwState = \"OK\";
	}
}


", "FwCaenChannelADCTemp_doCommand(string domain, string device, string command)
{
}

"	0x101	27.03.2013 09:18:53.217
fwOT_FwCaenChannelADCTemp.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "TOO_HIGH", "FwStateAttention1", "", "", "", "UNPLUGGED", "FwStateAttention1", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	27.03.2013 09:18:53.202
fwOT_FwCaenChannelADCTemp.actions	_FwFsmObjectType		0x101	27.03.2013 09:18:53.202
fwOT_FwCaenChannelADCTemp.parameters	_FwFsmObjectType		0x101	07.08.2008 08:34:14.629
fwOT_FwCaenBoardSY1527A1676.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCFwCaenBoardSY1527A1676.pnl"	0x300101	27.03.2013 09:29:26.088
fwOT_FwCaenBoardSY1527A1676.components	_FwFsmObjectType	"int Information.SerNum
", "bool Commands.48VA1676
", "FwCaenBoardSY1527A1676_initialize(string domain, string device)
{
}
", "FwCaenBoardSY1527A1676_valueChanged( string domain, string device,
      int Information_dot_SerNum, string &fwState )
{
	if (Information_dot_SerNum != 0)
	{
		fwState = \"OK\";
	}
	else 
	{
		fwState = \"ERROR\";
	}
}

", "FwCaenBoardSY1527A1676_doCommand(string domain, string device, string command)
{
	if (command == \"SERVICE_ON\")
	{
		dpSet(device+\".Commands.48VA1676\",1);
	}
	if (command == \"SERVICE_OFF\")
	{
		dpSet(device+\".Commands.48VA1676\",0);
	}
}

"	0x101	27.03.2013 09:18:52.967
fwOT_FwCaenBoardSY1527A1676.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	27.03.2013 09:18:52.952
fwOT_FwCaenBoardSY1527A1676.actions	_FwFsmObjectType	"OK/SERVICE_ON", "", "1", "", "0", "OK/SERVICE_OFF", "", "1", "", "0", "ERROR/SERVICE_ON", "", "1", "", "0", "ERROR/SERVICE_OFF", "", "1", "", "0"	0x101	27.03.2013 09:18:52.952
fwOT_RPC_MAO.panel	_FwFsmObjectType	"CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCRPC_MAO.pnl"	0x300101	27.03.2013 09:29:26.104
fwOT_RPC_MAO.components	_FwFsmObjectType		0x141	23.06.2008 14:41:28.340
fwOT_RPC_MAO.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ANY$FwCHILDREN in_state {ON,STANDBY} )  move_to PARTIALLY_ON|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF|when ( $ANY$FwCHILDREN in_state {OFF,STANDBY} )  move_to PARTIALLY_ON|", "", "", "TRIPPED", "FwStateAttention3", "when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
       ( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
       ( $ALL$FwCHILDREN not_in_state ERROR ) and
       ( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF|", "", "", "PARTIALLY_ON", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED|when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR|when ( $ALL$FwCHILDREN in_state ON )  move_to ON|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF|", "", ""	0x101	27.03.2013 09:18:58.014
fwOT_RPC_MAO.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "TRIPPED/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "PARTIALLY_ON/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "PARTIALLY_ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0"	0x101	27.03.2013 09:18:58.014
fwOT_RPC_MAO.parameters	_FwFsmObjectType		0x141	23.06.2008 14:41:28.356
fwOT_FwCaenChannelMAO.panel	_FwFsmObjectType	"FwCaenChannel|CMS_RPCfwHardwareBarrelUXC/CMS_RPCfwHardwareBarrelUXCFwCaenChannelMAO.pnl"	0x300101	27.03.2013 09:29:26.088
fwOT_FwCaenChannelMAO.components	_FwFsmObjectType	"int actual.status
float actual.temp
bool actual.remIlk
bool actual.intFail
", "", "FwCaenChannelMAO_initialize(string domain, string device)
{
}


", "FwCaenChannelMAO_valueChanged( string domain, string device,
      int actual_dot_status,float actual_dot_temp,bool actual_dot_remIlk,
      bool actual_dot_intFail,string &fwState )
{ 
	string channelLogName;   
      //float vMon;  
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject; 
  
  
      if(actual_dot_status==0)   
	{   
		fwState = \"OFF\";    
	}   
	else if((getBit(actual_dot_status, 8)) ||      
	(getBit(actual_dot_status, 9)))   
	{     
		fwState = \"TRIPPED\";     
	}     
	    
	else if (    
	(getBit(actual_dot_status, 3)) ||    
	(getBit(actual_dot_status, 4)) ||     
        (getBit(actual_dot_status, 5)) ||  
        (getBit(actual_dot_status, 11)) ||     
        (getBit(actual_dot_status, 12)))    
	{    
		fwState = \"WARNING\";    
	}        
  else if ((actual_dot_remIlk)||(actual_dot_intFail))
      {
        
        fwState = \"ERROR\";
        
        }
  else if(actual_dot_temp > 35)
  {
    fwState = \"WARNING\";
        
    if(actual_dot_temp > 40)
      {
      dpSet(device+\".settings.onOff:_original.._value\",0);    
      }

    }
   else if (getBit(actual_dot_status, 0))      
	{      
	       
            fwState = \"ON\";   

	}
	else    
	{    
	  fwState = \"ERROR\";    
	} 
}



", "FwCaenChannelMAO_doCommand(string domain, string device, string command)
{
      //int i0set,v0set,pos;    
      string channelLogName;   
      //float vMon;  
       int value; 
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject;  
      if (command == \"OFF\")  
	{  
	channelLogName = fwDU_getLogicalName(device);
        
        
        dpSet(device+\".settings.onOff:_original.._value\",0);
         
                }  
	   
      if (command == \"ON\")    
	{    
	 channelLogName = fwDU_getLogicalName(device);     
        
         dpSet(device+\".settings.onOff:_original.._value\",1);     
 
	}
      
          
       
       if (command == \"CLEAR_ALARM\")
        {
        string status;
        fwDU_getState(domain,device,status);
        dyn_string exc;                  
        dyn_dyn_string hierarchy;                   
        fwDevice_getHierarchy(device,hierarchy,exc);                   
        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
        //string dpe = substr(device,0,strpos(device,\"/bra\"));
        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
        fwDU_setState(domain,device,status);
        }
}



", "      dyn_string exceptionInfo;   ", "      dyn_dyn_mixed  recipeObject; ", "  ", "  ", "      if(actual_dot_status==0)   ", "	{   ", "		fwState = \"OFF\";    ", "	}   ", "	else if((getBit(actual_dot_status, 8)) ||      ", "	(getBit(actual_dot_status, 9)))   ", "	{     ", "		fwState = \"TRIPPED\";     ", "	}     ", "	    ", "	else if (    ", "	(getBit(actual_dot_status, 3)) ||    ", "	(getBit(actual_dot_status, 4)) ||     ", "        (getBit(actual_dot_status, 5)) ||     ", "        (getBit(actual_dot_status, 12)))    ", "	{    ", "		fwState = \"WARNING\";    ", "	}    ", "	else if (getBit(actual_dot_status, 1))    ", "	{    ", "		fwState = \"RAMPING_UP\";    ", "	}    ", "	else if (getBit(actual_dot_status, 2))    ", "	{    ", "		fwState = \"RAMPING_DOWN\";    ", "	}       ", "      else if (getBit(actual_dot_status, 0))      ", "	{      ", "	       ", "            fwState = \"ON\";   ", "         ", "                 ", "	}", "      else if ((actual_dot_remIlk)||(actual_dot_intFail))      ", "	{      ", "	       ", "            fwState = \"ERROR\";   ", "         ", "                 ", "	}", "      else if(actual_dot_temp > 34)", "      {", "          fwState = \"WARNING\";", "        }", "      else    ", "	{    ", "	  fwState = \"ERROR\";    ", "	} ", "}FwCaenChannelMAO_doCommand(string domain, string device, string command)", "{", "      //int i0set,v0set,pos;    ", "      string channelLogName;   ", "      //float vMon;  ", "       int value; ", "      dyn_string exceptionInfo;   ", "      dyn_dyn_mixed  recipeObject;  ", "      if (command == \"OFF\")  ", "	{  ", "	channelLogName = fwDU_getLogicalName(device);", "        ", "        ", "        dpSet(device+\".settings.onOff:_original.._value\",0);", "         ", "                }  ", "	   ", "      if (command == \"ON\")    ", "	{    ", "	 channelLogName = fwDU_getLogicalName(device);     ", "        ", "         dpSet(device+\".settings.onOff:_original.._value\",1);     ", " ", "	}", "      ", "          ", "       ", "       if (command == \"CLEAR_ALARM\")", "        {", "        string status;", "        fwDU_getState(domain,device,status);", "        dyn_string exc;                  ", "        dyn_dyn_string hierarchy;                   ", "        fwDevice_getHierarchy(device,hierarchy,exc);                   ", "        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  ", "        //string dpe = substr(device,0,strpos(device,\"/bra\"));", "        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);", "        fwDU_setState(domain,device,status);", "        }", "}"	0x101	27.03.2013 09:18:54.155
fwOT_FwCaenChannelMAO.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "0|", "", "", "OFF", "FwStateOKNotPhysics", "0|", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	27.03.2013 09:18:54.139
fwOT_FwCaenChannelMAO.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "ERROR/ON", "", "1", "", "0"	0x101	27.03.2013 09:18:54.139
fwOT_FwCaenChannelMAO.parameters	_FwFsmObjectType		0x101	23.06.2008 14:41:28.418
fwOT_RPC_Boards.panel	_FwFsmObjectType	"RPC_Boards.pnl"	0x101	27.03.2013 09:29:26.104
fwOT_RPC_Boards.components	_FwFsmObjectType		0x141	23.06.2008 14:41:28.418
fwOT_RPC_Boards.states	_FwFsmObjectType	"NOT_OK", "FwStateOKNotPhysics", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
       ( $ANY$FwCHILDREN in_state UNPLUGGED ) or
       ( $ANY$FwCHILDREN in_state POWER_FAILURE ) or
       ( $ANY$FwCHILDREN in_state OUT_OF_SYNC ) )  move_to ERROR|when ( $ALL$FwCHILDREN in_state OK ) move_to OK
|", "", "", "OK", "FwStateOKPhysics", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
       ( $ANY$FwCHILDREN in_state UNPLUGGED ) or
       ( $ANY$FwCHILDREN in_state POWER_FAILURE ) or
       ( $ANY$FwCHILDREN in_state OUT_OF_SYNC ) )  move_to ERROR|when ( $ALL$FwCHILDREN not_in_state OK )  move_to NOT_OK
|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN in_state OK )  move_to OK|when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
       ( $ALL$FwCHILDREN not_in_state UNPLUGGED ) and
       ( $ALL$FwCHILDREN not_in_state POWER_FAILURE ) and
       ( $ALL$FwCHILDREN not_in_state OUT_OF_SYNC ) )  move_to NOT_OK|", "", ""	0x101	27.03.2013 09:18:56.952
fwOT_RPC_Boards.actions	_FwFsmObjectType		0x101	27.03.2013 09:18:56.952
fwOT_RPC_Boards.parameters	_FwFsmObjectType		0x101	23.06.2008 14:41:28.434
fwOT_RPC_TopHwDevice.panel	_FwFsmObjectType	"RPC_TopHwDevice.pnl"	0x101	27.03.2013 09:29:26.104
fwOT_RPC_TopHwDevice.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN not_in_state ERROR )  move_to OK
|when ( $ALL$FwCHILDREN in_state OK )  move_to OK
|", "", ""	0x101	27.03.2013 09:18:58.717
fwOT_RPC_TopHwDevice.actions	_FwFsmObjectType		0x101	27.03.2013 09:18:58.717
fwOT_RPC_TopHwDevice.parameters	_FwFsmObjectType		0x101	26.03.2013 10:27:41.580

# DpValue (CMS_RPCfwHardwareBarrelUXC_Plot.dpl)
ElementName	TypeName	_original.._value	_original.._status	_original.._stime
_FwTrendingQuickPlotDefaults.plotTitle	FwTrendingPlot	"Default_Settings_For_QuickPlot"	0x101	09.07.2007 13:51:29.264
_FwTrendingQuickPlotDefaults.dpes	FwTrendingPlot	"{dpe1}", "{dpe2}", "{dpe3}", "{dpe4}", "{dpe5}", "{dpe6}", "{dpe7}", "{dpe8}"	0x101	09.07.2007 13:51:29.280
_FwTrendingQuickPlotDefaults.legendTexts	FwTrendingPlot	"{dpe1}", "{dpe2}", "{dpe3}", "{dpe4}", "{dpe5}", "{dpe6}", "{dpe7}", "{dpe8}"	0x101	09.07.2007 13:51:29.280
_FwTrendingQuickPlotDefaults.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	09.07.2007 13:51:29.280
_FwTrendingQuickPlotDefaults.axii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	09.07.2007 13:51:29.280
_FwTrendingQuickPlotDefaults.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	09.07.2007 13:51:29.280
_FwTrendingQuickPlotDefaults.legend	FwTrendingPlot	0	0x101	09.07.2007 13:51:29.280
_FwTrendingQuickPlotDefaults.isTemplate	FwTrendingPlot	0	0x101	09.07.2007 13:51:29.280
_FwTrendingQuickPlotDefaults.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	09.07.2007 13:51:29.280
_FwTrendingQuickPlotDefaults.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	09.07.2007 13:51:29.295
_FwTrendingQuickPlotDefaults.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	09.07.2007 13:51:29.295
_FwTrendingQuickPlotDefaults.plotType	FwTrendingPlot	2	0x101	09.07.2007 13:51:29.295
_FwTrendingQuickPlotDefaults.templateName	FwTrendingPlot	""	0x101	09.07.2007 13:51:29.295
_FwTrendingQuickPlotDefaults.timeRange	FwTrendingPlot	3600	0x101	09.07.2007 13:51:29.295
_FwTrendingQuickPlotDefaults.isLogarithmic	FwTrendingPlot	0	0x101	09.07.2007 13:51:29.311
_FwTrendingQuickPlotDefaults.curveTypes	FwTrendingPlot	2, 2, 2, 2, 2, 2, 2, 2	0x101	09.07.2007 13:51:29.311
_FwTrendingQuickPlotDefaults.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	09.07.2007 13:51:29.311
_FwTrendingQuickPlotDefaults.grid	FwTrendingPlot	1	0x101	09.07.2007 13:51:29.311
_FwTrendingQuickPlotDefaults.model	FwTrendingPlot	"Value over time"	0x101	09.07.2007 13:51:29.311
_FwTrendingQuickPlotDefaults.xAxii	FwTrendingPlot		0x141	09.07.2007 13:51:29.311
_FwTrendingQuickPlotDefaults.xDpes	FwTrendingPlot		0x141	09.07.2007 13:51:29.327
_FwTrendingQuickPlotDefaults.xRangeMin	FwTrendingPlot		0x141	09.07.2007 13:51:29.327
_FwTrendingQuickPlotDefaults.xRangeMax	FwTrendingPlot		0x141	09.07.2007 13:51:29.327
_FwTrendingQuickPlotDefaults.xLegendTexts	FwTrendingPlot		0x141	09.07.2007 13:51:29.327
vMon_iMonTrend.plotTitle	FwTrendingPlot	"vMoniMonTrend"	0x101	16.03.2007 09:52:28.857
vMon_iMonTrend.dpes	FwTrendingPlot	"{device}.actual.vMon", "{device}.actual.iMon", "", "", "", "", "", ""	0x101	16.03.2007 09:52:28.857
vMon_iMonTrend.legendTexts	FwTrendingPlot	"VMON", "IMON", "", "", "", "", "", ""	0x101	16.03.2007 09:52:28.872
vMon_iMonTrend.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 09:52:28.872
vMon_iMonTrend.axii	FwTrendingPlot	1, 1, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:28.872
vMon_iMonTrend.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 09:52:28.872
vMon_iMonTrend.legend	FwTrendingPlot	0	0x101	16.03.2007 09:52:28.872
vMon_iMonTrend.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 09:52:28.872
vMon_iMonTrend.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:28.872
vMon_iMonTrend.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:28.872
vMon_iMonTrend.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:28.888
vMon_iMonTrend.plotType	FwTrendingPlot	1	0x101	16.03.2007 09:52:28.888
vMon_iMonTrend.templateName	FwTrendingPlot	""	0x101	16.03.2007 09:52:28.888
vMon_iMonTrend.timeRange	FwTrendingPlot	600	0x101	16.03.2007 09:52:28.888
vMon_iMonTrend.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 09:52:28.888
vMon_iMonTrend.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	16.03.2007 09:52:28.888
vMon_iMonTrend.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 09:52:28.888
vMon_iMonTrend.grid	FwTrendingPlot	1	0x101	16.03.2007 09:52:28.888
vMon_iMonTrend.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 09:52:28.904
vMon_iMonTrend.xAxii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:28.904
vMon_iMonTrend.xDpes	FwTrendingPlot	"", "", "", "", "", "", "", ""	0x101	16.03.2007 09:52:28.904
vMon_iMonTrend.xRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:28.904
vMon_iMonTrend.xRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:28.904
vMon_iMonTrend.xLegendTexts	FwTrendingPlot	"", "", "", "", "", "", "", ""	0x101	16.03.2007 09:52:28.904
dpeOverTime.plotTitle	FwTrendingPlot	"dpeOverTime"	0x101	16.03.2007 09:52:29.294
dpeOverTime.dpes	FwTrendingPlot	"{device}.{param}", "", "", "", "", "", "", ""	0x101	16.03.2007 09:52:29.294
dpeOverTime.legendTexts	FwTrendingPlot	"{legend}", "", "", "", "", "", "", ""	0x101	16.03.2007 09:52:29.294
dpeOverTime.colors	FwTrendingPlot	"FwTrendingCurve1", "FwTrendingCurve2", "FwTrendingCurve3", "FwTrendingCurve4", "FwTrendingCurve5", "FwTrendingCurve6", "FwTrendingCurve7", "FwTrendingCurve8"	0x101	16.03.2007 09:52:29.294
dpeOverTime.axii	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:29.294
dpeOverTime.plotBackColor	FwTrendingPlot	"FwTrendingTrendBackground"	0x101	16.03.2007 09:52:29.294
dpeOverTime.legend	FwTrendingPlot	0	0x101	16.03.2007 09:52:29.294
dpeOverTime.isTemplate	FwTrendingPlot	0	0x101	16.03.2007 09:52:29.294
dpeOverTime.curvesHidden	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:29.310
dpeOverTime.yRangeMin	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:29.310
dpeOverTime.yRangeMax	FwTrendingPlot	0, 0, 0, 0, 0, 0, 0, 0	0x101	16.03.2007 09:52:29.310
dpeOverTime.plotType	FwTrendingPlot	1	0x101	16.03.2007 09:52:29.310
dpeOverTime.templateName	FwTrendingPlot	""	0x101	16.03.2007 09:52:29.310
dpeOverTime.timeRange	FwTrendingPlot	3600	0x101	16.03.2007 09:52:29.310
dpeOverTime.isLogarithmic	FwTrendingPlot	0	0x101	16.03.2007 09:52:29.310
dpeOverTime.curveTypes	FwTrendingPlot	1, 1, 1, 1, 1, 1, 1, 1	0x101	16.03.2007 09:52:29.310
dpeOverTime.plotForeColor	FwTrendingPlot	"FwTrendingTrendForeground"	0x101	16.03.2007 09:52:29.325
dpeOverTime.grid	FwTrendingPlot	1	0x101	16.03.2007 09:52:29.325
dpeOverTime.model	FwTrendingPlot	"Value over time"	0x101	16.03.2007 09:52:29.325
dpeOverTime.xAxii	FwTrendingPlot		0x141	16.03.2007 09:52:29.325
dpeOverTime.xDpes	FwTrendingPlot		0x141	16.03.2007 09:52:29.325
dpeOverTime.xRangeMin	FwTrendingPlot		0x141	16.03.2007 09:52:29.325
dpeOverTime.xRangeMax	FwTrendingPlot		0x141	16.03.2007 09:52:29.325
dpeOverTime.xLegendTexts	FwTrendingPlot		0x141	16.03.2007 09:52:29.325
