/*
 * Created by Giovanni Polese (Lappeenranta University of Technology
 * 
 *	date:08/08/2008
 *	LastChange:08/08/2008
 *
 */
 
#uses "fwDIP/fwDIP.ctl"

string dipAddress;


//_____________________________________________________________________________
main()
{
  DebugN("Uninstalling RPC Cooling component...");
  dyn_string exInfo, config = dpNames("*","_FwDipConfig");
  DebugN(config);
  if(dynlen(config) < 1)
  {
    DebugN("Dip Configuration Error, please check the config");
  }
  else
  {
    dipAddress = config[1];
    fwDIP_setupSelfTest(config[1],exInfo);
    dipDeleteAddress();
    deleteOld();
    DebugN("RPC Cooling component successfully integrated");
  }
}


//_____________________________________________________________________________
void 
deleteOld()
{
  Debug("Deleting old component....  ");
  dyn_string elements = dpNames("*","RPCCooling");
  //DebugN(elements);  
  for(int i = 1; i<=dynlen(elements);i++)
  {
    dpDelete(elements[i]);
  }
  DebugN("Deleted");
}


//_____________________________________________________________________________
void 
dipDeleteAddress()
{
  dyn_string exInfo, childName, fieldName;
  dyn_int childType, fieldType;
  dyn_string addresses = makeDynString("AI_Temperature_UXC55",
                                       "AI_Dewpoint_UXC55",
                                       "AI_Flowmeter_Muon_Cooling_YB_Minus_1",
                                       "AI_Flowmeter_Muon_Cooling_YB_Minus_2",
                                       "AI_Flowmeter_Muon_Cooling_YB_Plus_1",
                                       "AI_Flowmeter_Muon_Cooling_YB_Plus_2",
                                       "AI_Flowmeter_Muon_Cooling_YB0",
                                       "AI_Flowmeter_Rack_EndCap_Cooling_Far_Side_YE_Minus_1",
                                       "AI_Flowmeter_Rack_EndCap_Cooling_Far_Side_YE_Plus_1",
                                       "AI_Flowmeter_Rack_EndCap_Cooling_Near_Side_YE_Minus_1",
                                       "AI_Flowmeter_Rack_EndCap_Cooling_Near_Side_YE_Plus_1",
                                       "AI_Flowmeter_Yoke_Cooling_YB_Minus_1",
                                       "AI_Flowmeter_Yoke_Cooling_YB_Minus_2",
                                       "AI_Flowmeter_Yoke_Cooling_YB_Plus_1",
                                       "AI_Flowmeter_Yoke_Cooling_YB_Plus_2",
                                       "AI_Flowmeter_Yoke_Cooling_YB0");
        
  dyn_string dpes = makeDynString("Cooling_TempUXC55",
                                  "Cooling_DewpointUXC55",
                                  "Flowmeter_Cham_WM1",
                                  "Flowmeter_Cham_WM2",
                                  "Flowmeter_Cham_WP1",
                                  "Flowmeter_Cham_WP2",
                                  "Flowmeter_Cham_W00",
                                  "Flowmeter_Rack_YM1F",
                                  "Flowmeter_Rack_YP1F",
                                  "Flowmeter_Rack_YM1N",
                                  "Flowmeter_Rack_YP1N",
                                  "Flowmeter_Yoke_WM1",
                                  "Flowmeter_Yoke_WM2",
                                  "Flowmeter_Yoke_WP1",
                                  "Flowmeter_Yoke_WP2",
                                  "Flowmeter_Yoke_W00");
        
  string item = "dip/CMSX/DSS/";// CHECK
  string configDp = dipAddress;// = getSystemName()+"DIPConfig_1";         
  //dyn_string dpes = makeDynString(getSystemName()+chamber+".flowIn", 
  //                                getSystemName()+chamber+".flowOut");         
        
  for(int i = 1; i<=dynlen(addresses);i++)
  {
    fwDIP_DipQuery(configDp, item + addresses[i], childName, childType, fieldName, fieldType, exInfo);
    //DebugN(childName, childType, fieldName, fieldType);
    dyn_string tags = fieldName;                                   
    bool overwrite = FALSE;       
    //DebugN(item, dpes, tags, configDp, exInfo, overwrite);
       
    if(dynlen(exInfo)<1)
      fwDIP_unsubscribe( dpes[i], exInfo);                 							
  }
}
