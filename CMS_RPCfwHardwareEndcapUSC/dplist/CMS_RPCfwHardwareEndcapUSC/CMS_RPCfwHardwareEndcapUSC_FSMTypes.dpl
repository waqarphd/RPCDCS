# ascii dump of database

# Datapoint/DpId
DpName	TypeName	ID
fwOT_FwCaenChannelHV	_FwFsmObjectType	52817
fwOT_FwCaenCrateSY1527Basic	_FwFsmObjectType	52819
fwOT_FwCaenBoardEasy	_FwFsmObjectType	139097
fwOT_RPC_Device	_FwFsmObjectType	139104
fwOT_RPC_SY1527	_FwFsmObjectType	139105
fwOT_RPC_BC	_FwFsmObjectType	139107
fwOT_FwCaenBoardSY1527A1676	_FwFsmObjectType	144212
fwOT_RPC_HV	_FwFsmObjectType	180028
fwOT_FwCaenChannelMAO	_FwFsmObjectType	200385
fwOT_RPC_Boards	_FwFsmObjectType	200389
fwOT_RPC_MAO	_FwFsmObjectType	260307
fwOT_RPC_TopHwDevice	_FwFsmObjectType	355173

# DpValue
ElementName	TypeName	_original.._value	_original.._status64	_original.._stime
fwOT_FwCaenChannelHV.panel	_FwFsmObjectType	"FwCaenChannel|CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelFwCaenChannelHV.pnl"	0x101	04.03.2010 16:53:07.536
fwOT_FwCaenChannelHV.components	_FwFsmObjectType	"int actual.status
", "", "FwCaenChannelHV_initialize(string domain, string device)
{       
  
}













", "FwCaenChannelHV_valueChanged( string domain, string device,
      int actual_dot_status,string &fwState )
{ 
  //version 2.3
  // v1s 7k, v1r 9.2k, i1s 50, i1r 10    
  
      dyn_string exceptionInfo; 
      string channelLogName;   
      dyn_dyn_mixed  recipeObject; 
  
   if(actual_dot_status==0)   
	{   
		fwState = \"OFF\";    
	}   
	else if((getBit(actual_dot_status, 8)) ||      
	(getBit(actual_dot_status, 9)))   
	{     
		fwState = \"TRIPPED\";     
	}     
	else if (    
	(getBit(actual_dot_status, 3)) ||    
	(getBit(actual_dot_status, 4)) ||     
        (getBit(actual_dot_status, 5)) ||     
        (getBit(actual_dot_status, 12)))    
	{    
		
    if(getBit(actual_dot_status, 3)){
     string state;      
     fwDU_getState(domain,device,state);
     if(state == \"RAMPING_UP\"){
       int i0;
      dpGet(device+\".settings.i1\",i0);
      dpSet(device+\".settings.i0\",i0);
     
     }    
   
    }
    fwState = \"WARNING\";

        
    
                   
	}    
	else if (getBit(actual_dot_status, 1))    
	{    
	
         int i0;
         
         dpGet(device+\".settings.i1\",i0);
         //fwDU_getParameter(domain,device,  \"i0\",i0);
         dpSet(device+\".settings.i0\",i0);
         
         
        fwState = \"RAMPING_UP\";
         
	}    
	else if (getBit(actual_dot_status, 2))    
	{
                
        fwState = \"RAMPING_DOWN\";
          
	}       
  else if (actual_dot_status==1)
        	{
        
        
         // Case on  
          
        
        int enable;
        fwDU_getParameter(domain,device,\"enabled\",enable);
        if(enable==1){ 
        fwDU_setParameter(domain,device,\"enabled\",0);
        string state;      
        fwDU_getState(domain,device,state);
        
        int v0,vmon,v0set;
        //v0 = settings_dot_v0;
        dpGet(device+\".readBackSettings.v0\",v0,device+\".settings.v0\",v0set);
         
        if(v0 < 8800)
              {  
              fwState = \"STANDBY\";
              fwDU_setState(domain,device,\"STANDBY\");
        }
        else{       
              fwState = \"ON\";
              fwDU_setState(domain,device,\"ON\");
        }
             
       //DebugN(\"device: \", fwState, settings_dot_onOff);
        
        bool flag = true;
        int cycle = 0;

        if(v0==v0set){     
        while(flag){
           //  DebugN(\"flag: \", cycle);
          
          dpGet(device+\".actual.vMon\",vmon);
            if((v0-vmon < 20)&&(v0-vmon > -20))
             {
              int imon,inew;
              dpGet(device+\".actual.iMon\",imon,device+\".readBackSettings.i1\",inew);
              if(imon < inew)
              {
              channelLogName = fwDU_getLogicalName(device);
               
              int izero;
              dpGet(device+\".readBackSettings.i0\",izero);
              
              if(izero>inew)
                {
                 fwConfigurationDB_getRecipeFromCache(\"I0Stable\",makeDynString(channelLogName),fwDevice_LOGICAL,recipeObject,exceptionInfo);      
                 fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo);   
                 fwConfigurationDB_ApplyRecipe(recipeObject, fwDevice_LOGICAL, exceptionInfo);
                 fwAlertConfig_activate(device+\".actual.iMon\",exceptionInfo); 
             
                 dpSet(device+\".settings.i0\",inew);
                 dynClear(recipeObject);
                  
                }
              flag = false;
              }else
                cycle++;
              
            }else if(vmon<200)
              {flag = false;  
            }else
            {
            delay(4,0);
            cycle++;
            }
           delay(2,0);
           if(cycle == 10)
            {
             flag = false;
            channelLogName = fwDU_getLogicalName(device);
           
            dpSet(device+\".userDefined\",\"1\");           
             
           }         
         }
      }

   fwDU_setParameter(domain,device,\"enabled\",1);
   }
  }    
	else    
	{    
	  fwState = \"ERROR\";    
	} 

}














", "FwCaenChannelHV_doCommand(string domain, string device, string command)
{
  // version 2.2
   // v0 6k, v1 9.2k, i0 50, i1 10  
    // v1s-v0 6k, v1r-v1 9.2k, i1s-i0 50, i1r-i1 10    

      //int i0set,v0set,pos;    
      string channelLogName;
      string iHigh = \".settings.i1\";
      string iLow= \".readBackSettings.i1\";;
      string vOn= \".readBackSettings.v1\";;
      string vStb= \".settings.v1\";;   
      
      
      //float vMon;  
       int value; 
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject;  
      if (command == \"OFF\")  
	    {
        string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        
          
	//channelLogName = fwDU_getLogicalName(device);
        int onoff;
        dpGet(device+\".actual.isOn\",onoff);
        if(onoff==1)
        dpSet(device+\".settings.onOff:_original.._value\",0,
              device+\".settings.v0:_original.._value\",100); 
      }  
	   
      if (command == \"ON\")    
	    {    
      
        
        string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        
        int i,v,v0,inew;

         dpGet(device+iHigh,i,device+vOn,v,
               device+\".readBackSettings.v0\",v0,device+\".readBackSettings.i0\",inew);     
         if((v0!=v)||(i!=inew))
         {
           dpSet(device+\".settings.i0:_original.._value\",i);     
           fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo); 
           dpSet(device+\".settings.v0:_original.._value\",v);     
           delay(1,0);
 
          }
        int onoff;
        dpGet(device+\".actual.isOn\",onoff);
        if(onoff==0)
         dpSet(device+\".settings.onOff:_original.._value\",1);     
 
	}
      
       if (command == \"STANDBY\")    
	{

         string status;
        fwDU_getState(domain,device,status);
        fwDU_setState(domain,device,status);
        

         int i,v,v0,inew;

         dpGet(device+iHigh,i,device+vStb,v,
               device+\".readBackSettings.v0\",v0,device+\".readBackSettings.i0\",inew);     
         if((v0!=v)||(i!=inew))
         {
           dpSet(device+\".settings.i0:_original.._value\",i);     
           fwAlertConfig_deactivate(device+\".actual.iMon\",exceptionInfo);
           
           dpSet(device+\".settings.v0:_original.._value\",v); 
           delay(1,0);
  
         }
         int onoff;
        dpGet(device+\".actual.isOn\",onoff);
        if(onoff==0)
         dpSet(device+\".settings.onOff:_original.._value\",1);       
       } 
        
       
       if (command == \"CLEAR_ALARM\")
        {
        string status;
        fwDU_getState(domain,device,status);
        dyn_string exc;                  
        dyn_dyn_string hierarchy;                   
        fwDevice_getHierarchy(device,hierarchy,exc);                   
        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
        //string dpe = substr(device,0,strpos(device,\"/bra\"));
        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
        fwDU_setState(domain,device,status);
        }
             
}














"	0x101	15.03.2013 10:33:29.362
fwOT_FwCaenChannelHV.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "STANDBY", "FwStateOKNotPhysics", "", "", "", "RAMPING_UP", "FwStateAttention1", "", "", "", "RAMPING_DOWN", "FwStateAttention1", "", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	15.03.2013 10:33:29.346
fwOT_FwCaenChannelHV.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "ON/STANDBY", "", "1", "", "0", "ON/ON", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/STANDBY", "", "1", "", "0", "OFF/OFF", "", "1", "", "0", "STANDBY/OFF", "", "1", "", "0", "STANDBY/ON", "", "1", "", "0", "STANDBY/STANDBY", "", "1", "", "0", "RAMPING_UP/OFF", "", "1", "", "0", "RAMPING_UP/STANDBY", "", "1", "", "0", "RAMPING_UP/ON", "", "1", "", "0", "RAMPING_DOWN/ON", "", "1", "", "0", "RAMPING_DOWN/OFF", "", "1", "", "0", "RAMPING_DOWN/STANDBY", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "WARNING/STANDBY", "", "1", "", "0", "WARNING/ON", "", "1", "", "0", "TRIPPED/STANDBY", "", "1", "", "0", "TRIPPED/OFF", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "ERROR/STANDBY", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0", "ERROR/ON", "", "1", "", "0"	0x101	15.03.2013 10:33:29.346
fwOT_FwCaenChannelHV.parameters	_FwFsmObjectType	"int enabled = 1"	0x101	03.04.2009 10:14:23.941
fwOT_FwCaenCrateSY1527Basic.panel	_FwFsmObjectType	"FwCaenCrateSY1527|CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelFwCaenCrateSY1527Basic.pnl"	0x101	03.04.2009 10:14:23.941
fwOT_FwCaenCrateSY1527Basic.components	_FwFsmObjectType	"bool FrontPanOutP.FanFailure
string PWstatus.HvPwSM
bool _CAENOPCServer.Connected
bool FrontPanInP.Interlock
bool FrontPanOutP.FanFailure_invalid
", "", "FwCaenCrateSY1527Basic_initialize(string domain, string device)
{
}




", "FwCaenCrateSY1527Basic_valueChanged( string domain, string device,
      bool FrontPanOutP_dot_FanFailure,
      string PWstatus_dot_HvPwSM,
      bool _CAENOPCServer_dot_Connected,
      bool FrontPanInP_dot_Interlock,
      bool FrontPanOutP_dot_FanFailure_invalid, 
      string &fwState )
{
        if(FrontPanOutP_dot_FanFailure_invalid)
          {
          fwState = \"DISCONNECT\";
          }
	else if (FrontPanOutP_dot_FanFailure == 1)
	{
		fwState = \"FANFAILURE\";
	}
	else if (strpos(PWstatus_dot_HvPwSM,\"-\") >= 0)
	{
		fwState = \"POWERSUPPLY_FAILURE\";
	}
        else if (FrontPanInP_dot_Interlock)
	{
		fwState = \"DSS_INTERLOCK\";
	}
	else if (_CAENOPCServer_dot_Connected == 0)
	{
		fwState = \"DISCONNECT\";
	}
	else 
	{
		fwState = \"OK\";
	}
}




", "FwCaenCrateSY1527Basic_doCommand(string domain, string device, string command)
{
	if (command == \"KILL\")
	{
		dpSet(device+\".Commands.Kill\",1);
	}
	if (command == \"CLEAR_ALARMS\")
	{
		dpSet(device+\".Commands.ClearAlarm\",1);
	}
}





"	0x101	15.03.2013 10:33:29.955
fwOT_FwCaenCrateSY1527Basic.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "FANFAILURE", "FwStateAttention1", "", "", "", "POWERSUPPLY_FAILURE", "FwStateAttention1", "", "", "", "DISCONNECT", "FwStateAttention3", "", "", "", "DSS_INTERLOCK", "FwStateAttention2", "", "", ""	0x101	15.03.2013 10:33:29.955
fwOT_FwCaenCrateSY1527Basic.actions	_FwFsmObjectType	"OK/KILL", "", "1", "", "0", "OK/CLEAR_ALARMS", "", "1", "", "0", "FANFAILURE/KILL", "", "1", "", "0", "FANFAILURE/CLEAR_ALARMS", "", "1", "", "0", "POWERSUPPLY_FAILURE/KILL", "", "1", "", "0", "POWERSUPPLY_FAILURE/CLEAR_ALARMS", "", "1", "", "0"	0x101	15.03.2013 10:33:29.940
fwOT_FwCaenCrateSY1527Basic.parameters	_FwFsmObjectType		0x141	03.04.2009 10:14:23.957
fwOT_FwCaenBoardEasy.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelFwCaenBoardEasy.pnl"	0x101	22.02.2010 14:04:46.101
fwOT_FwCaenBoardEasy.components	_FwFsmObjectType	"bool Actual.12VPwS
float Temp.Temp1
bool Actual.Sync
string Information.FmwRelease
", "", "FwCaenBoardEasy_initialize(string domain, string device)
{
}


", "FwCaenBoardEasy_valueChanged ( string domain, string device,
                              bool Actual_dot_12VPwS,
                              float Temp_dot_Temp1,
                              bool Actual_dot_Sync,
                              string Information_dot_FmwRelease,
                              string &fwState )
{
	//DebugN(\"OoO\",device,Actual_dot_12VPwS,Actual_dot_Sync,Information_dot_FmwRelease);
  
  bool flag = true;
  string model;
  dyn_string channels,exInfo;
        
  if ((Actual_dot_12VPwS == true))
	{
		fwState = \"POWER_FAILURE\";
	}
 	else if (Actual_dot_Sync == true)
 	{
     fwState = \"UNPLUGGED\";
     dpGet(device + \".model\",model);
     if(model== \"A3801A\")
     {
        fwDevice_getChildren(device,fwDevice_HARDWARE,channels,exInfo); 
       for(int i = 1 ; i<=dynlen(channels); i++)
       {
         dpSet(channels[i]+\".actual.temperature:_original.._value\",-44.9);
               
         }
     } 
 	}
  else if ((Information_dot_FmwRelease == \"\")||(Information_dot_FmwRelease == \"0\"))
 	{
        fwState = \"UNPLUGGED\";
  }
  else if (Temp_dot_Temp1 > 36)
 	{
 		fwState = \"HIGH_TEMP\";
                
    if (Temp_dot_Temp1 > 42)
    {
    dyn_string devices;
    fwDevice_getChildren(device,fwDevice_HARDWARE,devices,exInfo); 
     for(int i = 1 ; i<=dynlen(devices); i++)
     {
     dpSet(devices[i]+\".settings.onOff:_original.._value\",0);
               
      }
     }
 	}
	else 
	{
   fwState = \"OK\";
   //DebugN(\"OoO\",device,Actual_dot_12VPwS,Actual_dot_Sync,Information_dot_FmwRelease);
	}
}


", "FwCaenBoardEasy_doCommand(string domain, string device, string command)
{
}


"	0x101	15.03.2013 10:33:28.674
fwOT_FwCaenBoardEasy.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "HIGH_TEMP", "FwStateAttention1", "", "", "", "UNPLUGGED", "FwStateAttention3", "", "", "", "POWER_FAILURE", "FwStateAttention3", "", "", "", "OUT_OF_SYNC", "FwStateAttention2", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	15.03.2013 10:33:28.658
fwOT_FwCaenBoardEasy.actions	_FwFsmObjectType		0x101	15.03.2013 10:33:28.658
fwOT_FwCaenBoardEasy.parameters	_FwFsmObjectType		0x101	13.01.2010 17:23:44.477
fwOT_RPC_Device.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelRPC_Device.pnl"	0x101	21.03.2013 14:57:17.570
fwOT_RPC_Device.components	_FwFsmObjectType		0x141	03.04.2009 10:14:23.972
fwOT_RPC_Device.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ANY$FwCHILDREN in_state {ON,STANDBY} )  move_to PARTIALLY_ON
|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|when ( $ANY$FwCHILDREN in_state {OFF,STANDBY} )  move_to PARTIALLY_ON
|", "", "", "TRIPPED", "FwStateAttention3", "when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "PARTIALLY_ON", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", ""	0x101	21.03.2013 14:57:17.351
fwOT_RPC_Device.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "OFF/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "PARTIALLY_ON/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "PARTIALLY_ON/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN
", "0", "PARTIALLY_ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0"	0x101	21.03.2013 14:57:17.351
fwOT_RPC_Device.parameters	_FwFsmObjectType		0x101	21.03.2013 14:57:17.570
fwOT_RPC_SY1527.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelRPC_SY1527.pnl"	0x101	03.04.2009 10:14:23.988
fwOT_RPC_SY1527.components	_FwFsmObjectType		0x141	03.04.2009 10:14:23.988
fwOT_RPC_SY1527.states	_FwFsmObjectType	"NOT_READY", "FwStateOKNotPhysics", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCaenCrateSY1527Basic in_state FANFAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state POWERSUPPLY_FAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state DSS_INTERLOCK ) or
( $ANY$FwCaenCrateSY1527Basic in_state DISCONNECT ) )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state OK )  move_to OK
|", "", "", "OK", "FwStateOKPhysics", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
( $ANY$FwCaenCrateSY1527Basic in_state FANFAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state POWERSUPPLY_FAILURE ) or
( $ANY$FwCaenCrateSY1527Basic in_state DSS_INTERLOCK ) or
( $ANY$FwCaenCrateSY1527Basic in_state DISCONNECT ) )  move_to ERROR
|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCaenCrateSY1527Basic not_in_state FANFAILURE ) and
( $ALL$FwCaenCrateSY1527Basic not_in_state POWERSUPPLY_FAILURE ) and
( $ANY$FwCaenCrateSY1527Basic not_in_state DSS_INTERLOCK ) and
( $ALL$FwCaenCrateSY1527Basic not_in_state DISCONNECT ) move_to NOT_READY
|", "", ""	0x101	15.03.2013 10:33:33.705
fwOT_RPC_SY1527.actions	_FwFsmObjectType		0x101	15.03.2013 10:33:33.705
fwOT_RPC_SY1527.parameters	_FwFsmObjectType		0x141	03.04.2009 10:14:24.003
fwOT_RPC_BC.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelRPC_BC.pnl"	0x101	03.04.2009 10:14:24.003
fwOT_RPC_BC.components	_FwFsmObjectType		0x141	03.04.2009 10:14:24.003
fwOT_RPC_BC.states	_FwFsmObjectType	"NOT_OK", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR|when ( $ALL$FwCHILDREN in_state OK ) move_to OK|", "", "", "OK", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR|when ( $ALL$FwCHILDREN not_in_state OK )  move_to NOT_OK|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN not_in_state ERROR ) move_to NOT_OK|", "", ""	0x101	15.03.2013 10:33:32.268
fwOT_RPC_BC.actions	_FwFsmObjectType		0x101	15.03.2013 10:33:32.268
fwOT_RPC_BC.parameters	_FwFsmObjectType		0x141	03.04.2009 10:14:24.003
fwOT_FwCaenBoardSY1527A1676.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelFwCaenBoardSY1527A1676.pnl"	0x101	03.04.2009 10:14:24.003
fwOT_FwCaenBoardSY1527A1676.components	_FwFsmObjectType	"int Information.SerNum
", "", "FwCaenBoardSY1527A1676_initialize(string domain, string device)
{
}
", "FwCaenBoardSY1527A1676_valueChanged( string domain, string device,
      int Information_dot_SerNum, string &fwState )
{
	if (Information_dot_SerNum != 0)
	{
		fwState = \"OK\";
	}
	else 
	{
		fwState = \"ERROR\";
	}
}

", ""	0x101	15.03.2013 10:33:28.893
fwOT_FwCaenBoardSY1527A1676.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	15.03.2013 10:33:28.893
fwOT_FwCaenBoardSY1527A1676.actions	_FwFsmObjectType		0x101	15.03.2013 10:33:28.893
fwOT_RPC_HV.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelRPC_HV.pnl"	0x101	03.04.2009 10:14:24.019
fwOT_RPC_HV.components	_FwFsmObjectType		0x141	03.04.2009 10:14:24.019
fwOT_RPC_HV.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
       ( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR|when ( $ANY$FwCHILDREN in_state RAMPING_UP )  move_to RAMPING_UP|when ( $ANY$FwCHILDREN in_state RAMPING_DOWN )  move_to RAMPING_DOWN|when ( $ALL$FwCHILDREN in_state STANDBY )  move_to STANDBY|when ( $ALL$FwCHILDREN in_state ON )  move_to ON|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
       ( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR|when ( $ANY$FwCHILDREN in_state RAMPING_UP )  move_to RAMPING_UP
|when ( $ANY$FwCHILDREN in_state RAMPING_DOWN )  move_to RAMPING_DOWN
|when ( $ANY$FwCHILDREN in_state OFF )  move_to OFF
|when ( $ANY$FwCHILDREN in_state STANDBY )  move_to STANDBY|", "", "", "STANDBY", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
       ( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR|when ( $ANY$FwCHILDREN in_state RAMPING_UP )  move_to RAMPING_UP|when ( $ANY$FwCHILDREN in_state RAMPING_DOWN )  move_to RAMPING_DOWN|when ( $ANY$FwCHILDREN in_state OFF )  move_to OFF|when ( $ALL$FwCHILDREN in_state ON )  move_to ON|", "", "", "RAMPING_UP", "FwStateAttention1", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
       ( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR|when ( $ALL$FwCHILDREN in_state ON )  move_to ON|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_UP ) and
       ( $ANY$FwCHILDREN in_state RAMPING_DOWN ) )  move_to RAMPING_DOWN|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_UP ) and
       ( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_UP ) and
       ( $ANY$FwCHILDREN in_state STANDBY ) )  move_to STANDBY|", "", "", "RAMPING_DOWN", "FwStateAttention1", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( ( $ANY$FwCHILDREN in_state ERROR ) or
       ( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR|when ( $ANY$FwCHILDREN in_state RAMPING_UP )  move_to RAMPING_UP
|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_DOWN ) and
       ( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF|when ( $ALL$FwCHILDREN in_state ON )  move_to ON|when ( ( $ALL$FwCHILDREN not_in_state RAMPING_DOWN ) and
       ( $ANY$FwCHILDREN in_state STANDBY ) )  move_to STANDBY|", "", "", "TRIPPED", "FwStateAttention3", "when ( ( $ANY$FwCHILDREN in_state ERROR ) or
       ( $ANY$FwCHILDREN in_state WARNING ) )  move_to ERROR|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state RAMPING_UP ) )  move_to RAMPING_UP
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state RAMPING_DOWN ) )  move_to RAMPING_DOWN
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
       ( $ANY$FwCHILDREN in_state OFF ) )  move_to OFF|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
       ( $ANY$FwCHILDREN in_state STANDBY ) )  move_to STANDBY|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
( $ANY$FwCHILDREN in_state RAMPING_UP ) )  move_to RAMPING_UP|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
( $ANY$FwCHILDREN in_state RAMPING_DOWN ) )  move_to RAMPING_DOWN|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
       ( $ALL$FwCHILDREN in_state OFF ) )  move_to OFF|when ( $ALL$FwCHILDREN in_state ON )  move_to ON|when ( ( $ALL$FwCHILDREN not_in_state {ERROR,WARNING} ) and
       ( $ALL$FwCHILDREN in_state STANDBY ) )  move_to STANDBY|", "", ""	0x101	15.03.2013 10:33:33.205
fwOT_RPC_HV.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "OFF/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "OFF/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ON/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "ON/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "STANDBY/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "STANDBY/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "STANDBY/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "RAMPING_UP/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "RAMPING_UP/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "RAMPING_UP/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "RAMPING_DOWN/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "RAMPING_DOWN/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "RAMPING_DOWN/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "TRIPPED/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "TRIPPED/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "TRIPPED/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "ERROR/STANDBY", "", "1", "do STANDBY $ALL$FwCHILDREN", "0", "ERROR/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN", "0"	0x101	15.03.2013 10:33:33.205
fwOT_RPC_HV.parameters	_FwFsmObjectType		0x141	03.04.2009 10:14:24.035
fwOT_FwCaenChannelMAO.panel	_FwFsmObjectType	"FwCaenChannel|CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelFwCaenChannelMAO.pnl"	0x101	03.04.2009 10:14:24.035
fwOT_FwCaenChannelMAO.components	_FwFsmObjectType	"int actual.status
float actual.temp
bool actual.remIlk
bool actual.intFail
", "", "FwCaenChannelMAO_initialize(string domain, string device)
{
}



", "FwCaenChannelMAO_valueChanged( string domain, string device,
      int actual_dot_status,float actual_dot_temp,bool actual_dot_remIlk,
      bool actual_dot_intFail,string &fwState )
{ 
	string channelLogName;   
      //float vMon;  
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject; 
  
  
      if(actual_dot_status==0)   
	{   
		fwState = \"OFF\";    
	}   
	else if((getBit(actual_dot_status, 14)) ||      
	(getBit(actual_dot_status, 9)))   
	{     
		fwState = \"TRIPPED\";     
	}     
	    
	else if (    
	(getBit(actual_dot_status, 3)) ||    
	(getBit(actual_dot_status, 4)) ||     
        (getBit(actual_dot_status, 5)) ||  
        (getBit(actual_dot_status, 7)) ||     
        (getBit(actual_dot_status, 12)))    
	{    
		fwState = \"WARNING\";    
	}      
      else if (getBit(actual_dot_status, 0))      
	{      
	       
            fwState = \"ON\";   
         
                 
	}
      else if ((actual_dot_remIlk)||(actual_dot_intFail))
      {
        
        fwState = \"ERROR\";
        
        }
      else if(actual_dot_temp > 35)
      {
        fwState = \"WARNING\";
        
        if(actual_dot_temp > 40)
        {
          dpSet(device + \".settings.onOff\",0);
          }
        
        }
	else    
	{    
	  fwState = \"ERROR\";    
	} 
}




", "FwCaenChannelMAO_doCommand(string domain, string device, string command)
{
      //int i0set,v0set,pos;    
      string channelLogName;   
      //float vMon;  
       int value; 
      dyn_string exceptionInfo;   
      dyn_dyn_mixed  recipeObject;  
      if (command == \"OFF\")  
	{  
	channelLogName = fwDU_getLogicalName(device);
        
        
        dpSet(device+\".settings.onOff:_original.._value\",0);
         
                }  
	   
      if (command == \"ON\")    
	{    
	 channelLogName = fwDU_getLogicalName(device);     
        
         dpSet(device+\".settings.onOff:_original.._value\",1);     
 
	}
      
          
       
       if (command == \"CLEAR_ALARM\")
        {
        string status;
        fwDU_getState(domain,device,status);
        dyn_string exc;                  
        dyn_dyn_string hierarchy;                   
        fwDevice_getHierarchy(device,hierarchy,exc);                   
        string mainframe = hierarchy[dynlen(hierarchy)-1][1];  
        //string dpe = substr(device,0,strpos(device,\"/bra\"));
        dpSet(mainframe+\".Commands.ClearAlarm\",TRUE);
        fwDU_setState(domain,device,status);
        }
}




"	0x101	15.03.2013 10:33:29.658
fwOT_FwCaenChannelMAO.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "WARNING", "FwStateAttention2", "", "", "", "TRIPPED", "FwStateAttention3", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	15.03.2013 10:33:29.658
fwOT_FwCaenChannelMAO.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "ON/ON", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/OFF", "", "1", "", "0", "WARNING/OFF", "", "1", "", "0", "WARNING/ON", "", "1", "", "0", "TRIPPED/ON", "", "1", "", "0", "ERROR/ON", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0"	0x101	15.03.2013 10:33:29.658
fwOT_FwCaenChannelMAO.parameters	_FwFsmObjectType		0x141	03.04.2009 10:14:24.035
fwOT_RPC_Boards.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelRPC_Boards.pnl"	0x101	03.04.2009 10:14:24.050
fwOT_RPC_Boards.components	_FwFsmObjectType		0x141	03.04.2009 10:14:24.050
fwOT_RPC_Boards.states	_FwFsmObjectType	"NOT_OK", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state {ERROR,UNPLUGGED} ) move_to ERROR|when ( $ALL$FwCHILDREN in_state OK ) move_to OK|", "", "", "OK", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state {ERROR,UNPLUGGED} ) move_to ERROR|when ( $ALL$FwCHILDREN not_in_state OK )  move_to NOT_OK|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN not_in_state {ERROR,UNPLUGGED} ) move_to NOT_OK|", "", ""	0x101	15.03.2013 10:33:32.502
fwOT_RPC_Boards.actions	_FwFsmObjectType		0x101	15.03.2013 10:33:32.502
fwOT_RPC_Boards.parameters	_FwFsmObjectType		0x141	03.04.2009 10:14:24.050
fwOT_RPC_MAO.panel	_FwFsmObjectType	"CMS_RPCfw_HardwareBarrel/CMS_RPCfw_HardwareBarrelRPC_MAO.pnl"	0x101	03.04.2009 13:14:48.967
fwOT_RPC_MAO.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ANY$FwCHILDREN in_state {ON,STANDBY} )  move_to PARTIALLY_ON
|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|when ( $ANY$FwCHILDREN in_state {OFF,STANDBY} )  move_to PARTIALLY_ON
|", "", "", "TRIPPED", "FwStateAttention3", "when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "ERROR", "FwStateAttention3", "when ( ( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state TRIPPED ) )  move_to TRIPPED
|when ( ( $ALL$FwCHILDREN not_in_state TRIPPED ) and
( $ALL$FwCHILDREN not_in_state ERROR ) and
( $ANY$FwCHILDREN in_state {ON,STANDBY} ) )  move_to PARTIALLY_ON
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", "", "PARTIALLY_ON", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state TRIPPED )  move_to TRIPPED
|when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|when ( $ALL$FwCHILDREN in_state ON )  move_to ON
|when ( $ALL$FwCHILDREN in_state OFF )  move_to OFF
|", "", ""	0x101	15.03.2013 10:33:33.471
fwOT_RPC_MAO.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0", "TRIPPED/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "PARTIALLY_ON/ON", "", "1", "do ON $ALL$FwCHILDREN
", "0", "PARTIALLY_ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN
", "0"	0x101	15.03.2013 10:33:33.471
fwOT_RPC_MAO.parameters	_FwFsmObjectType		0x101	03.04.2009 13:14:48.967
fwOT_RPC_TopHwDevice.panel	_FwFsmObjectType	"RPC_TopHwDevice.pnl"	0x101	21.03.2013 14:57:01.180
fwOT_RPC_TopHwDevice.states	_FwFsmObjectType	"OK", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR
|", "", "", "ERROR", "FwStateAttention3", "when ( $ALL$FwCHILDREN not_in_state ERROR )  move_to OK
|when ( $ALL$FwCHILDREN in_state OK )  move_to OK
|", "", ""	0x101	21.03.2013 14:57:00.758
fwOT_RPC_TopHwDevice.actions	_FwFsmObjectType		0x101	21.03.2013 14:57:00.758
fwOT_RPC_TopHwDevice.parameters	_FwFsmObjectType		0x101	21.03.2013 14:57:01.133
