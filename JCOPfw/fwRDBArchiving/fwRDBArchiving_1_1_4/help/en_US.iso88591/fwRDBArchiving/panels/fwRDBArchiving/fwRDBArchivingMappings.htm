<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>fwRDBArchiving: RDB Archiving Custom Mappings Panel</title>
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
</head>
<body>
<p>&nbsp;</p>
<table border="1" width="95%">
  <tbody>
    <tr valign="top">
      <td bgcolor="#00cc00" width="22%"><strong>Panel Name</strong></td>
      <td colspan="2" width="78%">
      <p>fwRDBArchivingGeneral.pnl</p>
      </td>
    </tr>
    <tr valign="top">
      <td bgcolor="#00cc00"><strong>Introduction<br>
      </strong></td>
      <td colspan="2">
      <p>This panel is used when the database for RDB archiving in &quot;Custom&quot; mode, to set up which tables and columns the data is stored in. It should be opened from another panel such as <a href="fwRDBArchivingGeneral.htm">fwRDBArchivingGeneral.pnl</a> to supply the database information.</p>
   	</td>
    </tr>
    <tr valign="top">
      <td bgcolor="#00cc00"><strong>Instructions</strong></td>
      <td colspan="2"><p>To use the custom RDB archiving, you have to specify where each DPE will be archived.</p>
<b>Adding and removing mappings</b><p>

A list of the current mappings is shown at the bottom of the panel. If a line is in bold, then there may be a problem with the mapping, for instance the table does not exist or does not have the required columns. To see details of what the problem is, either scroll to the right to see the ‘Warnings’ column, or click on the item to display the warning above in the panel.

<dl><dt>Refresh</dt>
	<dd>This refreshes the table displayed with the information from the database. As the table is refreshed automatically whenever you make a change in the panel, you should only need to use this button when you first open the panel (after entering the login details) or if you make a change to the database directly without using the panel.</dd>

<dt>Delete</dt>
	<dd>This button deletes the mapping which is currently selected in the table. The information remains in the fields above so you can easily add the mapping again if you deleted it by mistake, or if you want to change the DPE name. This button is disabled when there is no mapping selected in the table.</dd>

<dt>Update/Add (only visible when $sDpe is defined)</dt>
	<dd>Click this button to update or add mappings for all specified DPEs according to the values you have entered.</dd>

<dt>Update (only visible when $sDpe is not defined)</dt>
	<dd>To make changes to a mapping, click on it in the table, make changes to the necessary fields, and click the ‘Update’ button. Note that you cannot change the DPE name this way, if you want to change the DPE name you should delete the mapping and re-add it with the new DPE name. This button is disabled when there is no mapping selected in the table.</dd>

<dt>Add (only visible when $sDpe is not defined)</dt>
	<dd>After filling in the necessary fields, click this button to add a mapping and turn on archiving for the DPE. If the ‘Automatically create table on add’ checkbox is ticked, then the table will be created as well. If there is one, the alias for the datapoint containing this DPE will be added to the ALIASES table. See Datapoint Aliases section.</dd>
</dl>

</p><b>Mapping information</b><p>

<dl><dt>DPE</dt>
	<dd>If $sDpe was defined, then this field is uneditable and simply displays which datapoints were passed to the panel via the dollar parameter. Changes made using the panel will be applied to all of those datapoints.<p>
Otherwise, this can be either the name or alias of a data point element which you want to archive. It should not include the system name. You cannot add the same DPE more than once, nor can you add one mapping for the full DPE name and a different mapping for the alias of the same DPE. Once you have clicked the ‘Refresh’ button, the drop-down menu will be populated with any DPEs which have RDB archiving turned on but which do not have mappings set up. If you start the RDB Archive Manager without either turning off archiving or setting up mappings for these DPEs, there will be errors because the archiver will not know where to store the archived values. It may take a few seconds after the table is refreshed to populate this menu.</p></dd>

<dt>Table</dt>
	<dd>The name of the table where you want archived values of the DPE(s) to go. See the ‘Creating Tables’ section for information on how to create the tables.</dd>

<dt>Value Column</dt>
	<dd>The name of the column in the specified table where the values of the DPE(s) should be archived. This field is mandatory.</dd>

<dt>Date Column</dt>
	<dd>The name of the column in the specified table where the timestamp of each change to the DPE(s) will be put. This field is mandatory.</dd>

<dt>Store as:</dt>
	<dd>You can choose whether the timestamp is written to the database as an actual timestamp, or as the number of microseconds since midnight on 01/01/1970. Note that the number of microseconds recorded will always be divisible by 1000 as PVSS only has millisecond precision. Microseconds are used rather than milliseconds purely for the sake of compatibility with other data. You can display a microsecond column as a date by using the SQL function <tt>microseconds_to_date.</tt></dd>

<dt>Status Column</dt>
<dd>The name of the column in the specified table where the status value should be archived. This field is optional. Currently the status is not filled out for array values, but that may change once the technical difficulty with this is resolved.</dd>

<dt>DPE Name Column</dt>
	<dd>The name of the column in the specified table where the name of the DPE should be archived. This field is optional, and is probably only useful when you have several different DPEs being archived in the same table and column.</dd>

<dt>Transform DPE name with function</dt>
	<dd>You may prefer to identify DPEs in a different way from the default. If so, tick this box and type a function name from your database into the accompanying field. The function should accept a single string as input, which will be the full datapoint element name, including system name. It may return any data type that can be stored in the DPE Name Column you have selected. This checkbox is only editable if you have chosen a DPE Name Column. If (when you are using the panel without specifying the $sDpe parameter) you select a DPE which does not use a function to transform the DPE name, the previously used function name will remain in the text field in case you want to enable it, but the function will only be used for that DPE if you tick the checkbox.</dd>
</dl>
</p><b>Creating tables</b><p>
<dl>
<dt>Create Table</dt> 
<dd>The easiest way to create a suitable table is to use the ‘Create Table’ button. After you have filled in all of the necessary fields for a mapping, click the button and a table with all the necessary columns will be created. Make sure you fill out all of the fields you need before clicking the button, so that you don’t need to add any columns to the table later. Creating the table does not automatically add the mapping, you will still need to click the ‘Add’ button either before or after creating the table. You do not need to use the ‘Create Table’ button at all if you have ‘Automatically create table on add’ ticked.</dd>

<dt>With position column (for arrays)</dt>
	<dd>Any table which stores values from an array must have an additional column called <tt>POSITION</tt>, to store the position of each value in the array. Tick this box if you want the table you create to have a <tt>POSITION</tt> column. A table with a <tt>POSITION</tt> column can also be used for scalar elements. This box is automatically ticked or unticked when you select a new DPE, according to whether the DPE is an array or not, however you might wish to change it if you want to use the same table for both arrays and scalars, or if the DPE you have selected is from another system so whether it is an array cannot be determined.</dd>
<dt>Automatically create table on add</dt>
	<dd>If this box is ticked, the table will be created automatically when you add the mapping by clicking the ‘Add’ button. This is equivalent to clicking ‘Create Table’ after you add the mapping.</dd>
</dl>
</p><p>The ‘Create Table’ button only creates a table with the columns specified for one datapoint element. It creates the value and DPE name columns as <tt>VARCHAR2</tt> columns, and the date column as either a <tt>TIMESTAMP</tt> or a <tt>NUMBER</tt> depending on what you chose to store the date as. If you want to store several DPEs in different columns of the same table, or if you want to use a more specific datatype for the value column or for the DPE Name column (if you have specified a transform function which returns a different type) the button will not be adequate. You will have to either create a table yourself with SQL, or create the table using the button and then alter or add columns with SQL. </p>

<p>If the DPE is an array type, the table must have at least a <tt>POSITION</tt> column. It must also have any columns you specify in the other fields. The date column must be a TIMESTAMP if you choose to store the date as a timestamp, or a numeric datatype capable of storing integers on the order of 10<sup>15</sup> if you choose to store the date as the number of microseconds since 1970. If there is a DPE Name column, and the DPE transform function conserves enough information to distinguish one datapoint element from another, then a combination of the date column, the DPE Name column, and (if there is one) the <tt>POSITION</tt> column is guaranteed to be unique. If you wish to use the same table for both array and scalar DPEs, you will need to specify a default value for the <tt>POSITION</tt> column, since this is not filled out for scalar values. SQL commands issued by the panel are logged to the console, so if you need to create your own table it may be convenient to copy one of these commands and modify it to suit your needs.</p>
<p><b>Turning archiving on and off</b><p>

The table at the bottom of the panel includes a column showing the archiving status of each DPE. Clicking on a cell in this column will attempt to turn archiving on or off for the DPE. The column can display any of the following values:</p>

<dl><dt><tt>ON</tt></dt>
	<dd>RDB Archiving is turned on for this DPE. Click to turn archiving off.</dd>

<dt><tt>OFF</tt></dt>
	<dd>Archiving is turned off for this DPE. Click to turn RDB archiving on.</dd>

<dt><tt>NOT RDB</tt></dt>
	<dd>Archiving is turned on for this DPE, but to an archive other than the RDB archive. Click to change to RDB archiving.</dd>

<dt><tt>UNKNOWN</tt></dt>
	<dd>The archiving status for this DPE could not be determined. This usually means that the DPE does not exist in this system. If you are sure that the DPE does exist, check the log for errors. Click to attempt to turn RDB archiving on for this DPE.</dd>
</dl>
<b>Datapoint Aliases</b>

<p>There is a table in the database called <tt>ALIASES</tt>, where changes to the aliases of archived datapoint elements are recorded. This is only automatically updated with changes to the actual elements which are archived. However, you may wish to record the aliases of the datapoints themselves, as these contain the names of devices in the FSM tree, which you may wish to use in a DPE name transform function. These cannot be automatically recorded on the database side because PVSS only sends information about the specific elements being archived, so it must be done using the panel.</p>

<p>The panel adds alias information for each datapoint when a mapping is added for one of its elements. If any of the aliases change, you can update the information in the database using the ‘Update Aliases table’ buttons. This updates the information for all the datapoint elements currently listed on the panel (these will either be the elements listed in <tt>$sDPE</tt>, or, if <tt>sDPE</tt> is not defined, all elements with mappings.)</p>

<p>A new entry is only written to the <tt>ALIASES</tt> table when the alias has changed from the previous value in the table, or when the alias is not already in the table and is not blank.</p>

</td>
    </tr>
    <tr valign="top">
      <td bgcolor="#00cc00"><strong>Restrictions</strong></td>
      <td colspan="2"></td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<table width="647" height="443" border="0" align="center">
  <tbody>
    <tr>
      <td>
        <div align="center"><img
 src="fwRDBArchivingMappings.gif" alt="Panel screenshot, with no $sDpe parameter" width="807" height="558"></div>
      </td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<p>&nbsp;</p>
<table border="1" width="95%">
  <tbody>
    <tr bgcolor="#00cc00">
      <td colspan="3"><strong>Dollar Parameters</strong></td>
    </tr>
    <tr bgcolor="#00cc00">
      <td width="23%"><strong>Name</strong></td>
      <td width="62%"><strong>Description</strong></td>
      <td width="15%">&nbsp;</td>
    </tr>
    <tr>
      <td>$sDBName</td>
      <td><p>The name of the database to configure the mappings in</p></td>
      <td>Required<br>
      </td>
    </tr>    <tr>
      <td>$sUser</td>
      <td><p>The username for the database to configure the mappings in</p></td>
      <td>Required<br>
      </td>
    </tr>    <tr>
      <td>$sPassword</td>
      <td><p>The password of the database to configure the mappings in</p></td>
      <td>Required<br>
      </td>
    </tr>
    <tr>
      <td>$sDpe</td>
      <td><p>The name of the data point element(s) to configure mappings for. Changes on the panel affect the mappings for all of the datapoints given in this dollar parameter. If this dollar parameter not supplied, you will see all mappings set up in the database, and will be able to add or edit mappings individually for any datapoint element(s).</p>
        <p>If you wish to use the panel for multiple data point elements, you
          should pass a list in the same format as the PVSS dyn_string, i.e.dpe1
          | dpe2 | dpe3<br>
        </p></td>
      <td>Optional</td>
    </tr>
  </tbody>
</table>
</body>
</html>
