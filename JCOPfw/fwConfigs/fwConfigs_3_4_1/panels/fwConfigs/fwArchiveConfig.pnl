V 10
1
LANG:1 0 
PANEL,-1 -1 641 391 N "_3DFace" 3
"$bHierarchyBrowser"
"$sDpe"
"$sDpeConfigObjectVarName"
"main()
{
	bool singleDpe;
	int length, i, elementType;
	string dpe, name;
	dyn_string exceptionInfo;
	
	bool isArchived, isConfigured;
	int smoothType, smoothProcedure, typeCorrection, pos, archiveClassType;
	float deadband, timeInterval;
	string archiveClass, errorString, archiveClassName;
	dyn_string archiveClassDpList, archiveClasses, rdbArchiveClasses, archiveClassDpName, rdbArchiveClassDpName, ds;
	shape optionsList;
	string sArchiveClassDpName;
	dyn_int di;
	
	if(isDollarDefined(\"$sDpe\"))
	{
		dpe = $sDpe;
		strreplace(dpe, \" \", \"\");
	    DPE_LIST = strsplit(dpe, \"|\");
	}
    
	elementNameField.editable(FALSE);

	length = dynlen(DPE_LIST);
	switch(length)
	{
			case 0:
				if(isDollarDefined(\"$sDpeConfigObjectVarName\"))	// object passed to the panel
				{
					if(getGlobalType($sDpeConfigObjectVarName) != DYN_DYN_ANYTYPE_VAR)
					{
						elementNameField.text(\"Wrong config object name\");
						archivingOptions.enabled = FALSE;
						applyButton.enabled = FALSE;
						okButton.enabled = FALSE;
						fwException_raise(exceptionInfo, 
															\"WARNING\", \"The config object \" + $sDpeConfigObjectVarName + 
															\" doesn't exists or hasn't got the proper format.\", 
															\"\");
						fwExceptionHandling_display(exceptionInfo);					
						return;
					}					
					
					panelMode = OBJECT;					
					fwGeneral_getGlobalValue($sDpeConfigObjectVarName, dpeConfigObject, exceptionInfo);
//					DebugN(\" Config Panel: \", dpeConfigObject);
					
					DPE_LIST[1] = dpeConfigObject[fwConfigs_DPE_OBJECT_DPE_NAME][1];						
					DPE_TYPE		= dpeConfigObject[fwConfigs_DPE_OBJECT_DPE_TYPE][1];					
					smoothType	= dpeConfigObject[fwConfigs_DPE_OBJECT_TYPE][1];
					isArchived	= dpeConfigObject[fwConfigs_DPE_OBJECT_ACTIVE][1];
//					DebugN(\"smoothType \" + smoothType);
					
					smoothProcedure	= dpeConfigObject[fwArchive_DPE_OBJECT_PROCEDURE][1];
					deadband				= dpeConfigObject[fwArchive_DPE_OBJECT_DEADBAND][1];
					timeInterval		= dpeConfigObject[fwArchive_DPE_OBJECT_TIME_INTERVAL][1];
					archiveClass		= dpeConfigObject[fwArchive_DPE_OBJECT_CLASS_NAME][1];
					
					elementType = DPE_TYPE;
					canHaveSmoothing = TRUE;
					if(smoothType == DPCONFIG_NONE)
						isConfigured = FALSE;
					else
						isConfigured = TRUE;
					
					_fwConfigs_getSystemsInDpeList(DPE_LIST, SYSTEMS, exceptionInfo);
					elementNameField.text(DPE_LIST[1]);
				}
				else // neither dpes nor object passed, nothing to do in the panel
				{
					elementNameField.text(\"No Data Point Elements\");
					archivingOptions.enabled = FALSE;
					applyButton.enabled = FALSE;
					okButton.enabled = FALSE;
					fwException_raise(exceptionInfo, \"WARNING\", getCatStr(\"fwConfigs\", \"PANEL_NODATAPOINTSTOCONFIG\"), \"\");
					fwExceptionHandling_display(exceptionInfo);					
					return;
				}
				break;				
			case 1:		// single dpe passed to the panel
				panelMode = SINGLE_DPE;
				dpe = DPE_LIST[1];
				elementNameField.text(dpe);
				canHaveSmoothing = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_ARCHIVE, DPE_TYPE, exceptionInfo, errorString);				
				if(errorString != \"\")
                                  fwException_raise(exceptionInfo, \"ERROR\", errorString, \"\");
                                
				if(strpos(errorString, getCatStr(\"fwConfigs\", \"ERROR_DPESNOTEXISTING\")) == 0)
				{
					fwExceptionHandling_display(exceptionInfo);
					applyButton.enabled = FALSE;
					okButton.enabled = FALSE;
					return;
				}

				_fwConfigs_getSystemsInDpeList(DPE_LIST, SYSTEMS, exceptionInfo);
				
				fwArchive_get(DPE_LIST[1], isConfigured, archiveClass, smoothType,
											smoothProcedure, deadband, timeInterval, isArchived, exceptionInfo);
				break;
			default:	// multiple dpes passed to the panel
				panelMode = MULTIPLE_DPES;
				dpe = DPE_LIST[1];
				
				_fwConfigs_getSystemsInDpeList(DPE_LIST, SYSTEMS, exceptionInfo);
				
				if(dynlen(SYSTEMS) == 1)
					elementNameField.text(\"Multiple Data Point Elements (from \" + SYSTEMS[1] + \")\");
				else
					elementNameField.text(\"Multiple Data Point Elements (from multiple systems)\");
					
				canHaveSmoothing = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_ARCHIVE, DPE_TYPE, exceptionInfo, errorString);				
				if(errorString != \"\")
					fwException_raise(exceptionInfo, \"ERROR\", errorString, \"\");

				dpeDetails.visible = TRUE;
				
				isConfigured = FALSE;
				isArchived = FALSE;
				break;
	}
	
	fwSetTimeFieldsFormat(exceptionInfo);
	exceptionInfo = makeDynString();
//DebugN(SYSTEMS);

	fwFillArchiveClassList(SYSTEMS, exceptionInfo);
		
	archiveClasses = archiveClassList.items();
	sArchiveClassDpName = archiveClassDp.text();
	PREVIOUS_CLASS = sArchiveClassDpName;

	DPES_OK = TRUE;

	_fwInitOptionsMapping();

	if(isArchived || isConfigured)
	{
		if(isArchived)
		{
			startArchiving.state(0) = TRUE;
		} else {
			startArchiving.state(0) = FALSE;
		} 		
	
		_fwToggleBasicArchiveItems(TRUE);
		if(pos = dynContains(archiveClasses, archiveClass))
		{
			archiveClassList.selectedPos(pos);
			archiveClassDp.selectedPos(pos);
		}

//	DebugN(\"smoothType \" + smoothType + \" \" + DPATTR_ARCH_PROC_SIMPLESM);
		if(smoothType==DPATTR_ARCH_PROC_SIMPLESM)
		{
			archivingOptions.state(0,TRUE);
			archivingOptions.state(1,TRUE);

			if(panelMode != OBJECT)
			{
				_fwConfigs_getConfigOptionsForDpeType(DPE_TYPE, fwConfigs_PVSS_ARCHIVE, elementType, exceptionInfo);		
			}
			
			switch(elementType)
			{
				case fwConfigs_ANALOG_OPTIONS:
					optionsList = getShape(\"smoothingOptions\");
					if(mappingHasKey(ANALOG_OPTIONS, smoothProcedure))
						optionsList.number = ANALOG_OPTIONS[smoothProcedure];
					else
						optionsList.number = 0;
					break;
				default:
					optionsList = getShape(\"digitalSmoothingOptions\");
					if(mappingHasKey(DIGITAL_OPTIONS, smoothProcedure))
						optionsList.number = DIGITAL_OPTIONS[smoothProcedure];
					else
						optionsList.number = 0;
					break;
			}

			_fwDisplayTime(timeInterval);
			_fwDisplayDeadband(smoothProcedure, deadband);
			_fwShowSmoothingItems(optionsList.number);
			optionsList.visible(TRUE);
		}
		else
		{
			archivingOptions.state(0,TRUE);
			archivingOptions.state(1,FALSE);
			_fwHideSmoothingItems();
		}		
	}
	else
	{
		archivingOptions.state(0,FALSE);
		archivingOptions.state(1,FALSE);
		_fwDisplayTime(timeInterval);
		_fwDisplayDeadband(DPCONFIG_NONE, deadband);
		_fwToggleBasicArchiveItems(FALSE);
		_fwHideSmoothingItems();
	}

	sArchiveClassDpName = archiveClassDp.text();
	PREVIOUS_CLASS = \"\";
	fwUpdateArchiveStatistics(sArchiveClassDpName, exceptionInfo);
	
	fwSetDeadbandFieldFormat(relativeSelector.state(0), exceptionInfo);
	
	archivingOptions.visible(TRUE);
}

_fwDisplayDeadband(int smoothProcedure, float deadband)
{
	switch(smoothProcedure)
	{
		case DPATTR_VALUE_REL_SMOOTH:
		case DPATTR_TIME_AND_VALUE_REL_SMOOTH:
		case DPATTR_TIME_OR_VALUE_REL_SMOOTH:
			relativeSelector.state(0) = TRUE;
			break;
		default:
			relativeSelector.state(0) = FALSE;
			break;
	}
	
	deadbandValue.text(deadband);
}

_fwDisplayTime(float timeInterval)
{
	int actualDay,actualHour,actualMinute,actualSecond,actualMilli,timeInSeconds;
	time interval;
	
	interval = timeInterval;
	timeInSeconds = period(interval);
	actualMilli = milliSecond(interval);

	actualDay=timeInSeconds/86400;
	timeInSeconds=timeInSeconds-(actualDay*86400);

	actualHour=timeInSeconds/3600;
	timeInSeconds=timeInSeconds-(actualHour*3600);

	actualMinute=timeInSeconds/60;
	timeInSeconds=timeInSeconds-(actualMinute*60);

	actualSecond=timeInSeconds;	

	day.text(actualDay);
	hour.text(actualHour);
	minute.text(actualMinute);
	second.text(actualSecond);
	milli.text(actualMilli);

	secondsOnly.state(0,FALSE);
}" 0
 E E E E 1 -1 -1 0  11 51
""0  1
E "const int RELATIVE_DEADBAND = 10;

dyn_string DPE_LIST, SYSTEMS;
int DPE_TYPE;
bool DPES_OK;
bool canHaveSmoothing;
string PREVIOUS_CLASS;
mapping DIGITAL_OPTIONS;
mapping ANALOG_OPTIONS;
mapping DIGITAL_PROCEDURES;
mapping ANALOG_PROCEDURES;

// mode in which the panel is used
int panelMode;
const int OBJECT	= 1;
const int SINGLE_DPE		= 2;
const int MULTIPLE_DPES	= 3;

const string ARCHIVECLASSTYPEDIVIDER = \"-----------\";

dyn_dyn_anytype dpeConfigObject;

fwFillArchiveClassList(dyn_string systems, dyn_string &exceptionInfo)
{
	dyn_string archiveClasses, archiveClassDpName, rdbArchiveClasses, rdbArchiveClassDpName;

	fwArchive_getAllValueArchiveClasses(systems, archiveClasses, archiveClassDpName, exceptionInfo);
	fwArchive_getAllRDBArchiveClasses(systems, rdbArchiveClasses, rdbArchiveClassDpName, exceptionInfo);

	if(dynlen(rdbArchiveClasses) > 0)
	{
		dynAppend(archiveClasses, ARCHIVECLASSTYPEDIVIDER);
		dynAppend(archiveClassDpName, ARCHIVECLASSTYPEDIVIDER);
		dynAppend(archiveClasses, rdbArchiveClasses);	
		dynAppend(archiveClassDpName, rdbArchiveClassDpName);	
	}
	
        if(archiveClasses[1] == ARCHIVECLASSTYPEDIVIDER)
        {
          dynRemove(archiveClasses, 1);
          dynRemove(archiveClassDpName, 1);
        }
        
	archiveClassList.items(archiveClasses);
	archiveClassList.selectedPos(1);
	
	archiveClassDp.items(archiveClassDpName);
	archiveClassDp.selectedPos(1);
}

fwUpdateArchiveStatistics(string archiveClassDp, dyn_string &exceptionInfo)
{
	int pos, result;
	dyn_string ds;

	refresh.enabled = FALSE;

	if(dpTypeName(archiveClassDp) == fwArchive_RDB_CLASS_DPTYPE)
	{
	//is ORACLE archive class
		fwInstallation_componentInstalled(\"fwRDBArchiving\", \"1.0\", result);

		archiveManagementButton.enabled	= FALSE;
		parametrize.enabled = (result==0)?FALSE:TRUE;
		archiveLoad.text = \"Not available\";
		classState.text = \"Not available\";
	}
	else if(dpTypeName(archiveClassDp) == fwArchive_VALARCH_CLASS_DPTYPE)
	{ 
	//is PVSS valarch archive class
		archiveManagementButton.enabled	= TRUE;
		pos = dynContains(SYSTEMS, getSystemName());
		parametrize.enabled = (dynlen(SYSTEMS) == 1) && (pos > 0);
		archiveLoad.text = \"Refreshing...\";
		dpConnect(\"work_getClassDpeLoad\", FALSE, archiveClassDp + \".statistics.dpElements:_online.._stime\");
		dpConnect(\"work_getClassState\", TRUE, archiveClassDp + \".state:_online.._stime\");
		
		//trigger refresh of class shown
		dpGet(archiveClassDp+\".files.fileName:_online.._value\",ds);
		dpSet(archiveClassDp+\".statistics.index:_original.._value\",dynlen(ds));
	}
	else
	{
		archiveManagementButton.enabled	= FALSE;
		parametrize.enabled = FALSE;
		archiveLoad.text = \"Not available\";
		classState.text = \"Not available\";	
	}		
}

fwSetTimeFieldsFormat(dyn_string &exceptionInfo)
{
	string formatString;

	fwConfigs_getBestFormatForDpeType(DPEL_INT, formatString, exceptionInfo);
	fwConfigs_setTextFieldsFormat(makeDynString(\"day\", \"hour\", \"minute\", \"second\", \"milli\"), formatString,
									makeDynBool(FALSE), exceptionInfo);
}

fwSetDeadbandFieldFormat(bool isRelative, dyn_string &exceptionInfo)
{
	string formatString;

	if(isRelative)
		fwConfigs_getBestFormatForDpeType(DPEL_FLOAT, formatString, exceptionInfo);
	else
		fwConfigs_getBestFormatForDpeList(DPE_LIST, formatString, exceptionInfo);
	
	fwConfigs_setTextFieldsFormat(makeDynString(\"deadbandValue\"), formatString,
									makeDynBool(FALSE), exceptionInfo);
}

work_getClassDpeLoad(string dpe, int value)
{
	string dpName;
	dyn_string exceptionInfo;
	int iMaxDp, iElements, iNewElements;	

	dpName = dpSubStr(dpe, DPSUB_SYS_DP);

	if(dpName == archiveClassDp.text)
	{
		fwArchive_getClassStatistics(dpName, iElements, iNewElements, iMaxDp, exceptionInfo, FALSE);					
					
		archiveLoad.text() = iElements + \" (\" + iNewElements + \") / \"+iMaxDp;
		refresh.enabled = TRUE;
	}
}

work_getClassState(string dpe, int value)
{
	string dpName, stateText;
	dyn_string exceptionInfo;
	int state;	

	dpName = dpSubStr(dpe, DPSUB_SYS_DP);

	if(dpName == archiveClassDp.text)
	{
		fwArchive_getClassState(dpName, state, stateText, exceptionInfo);					
		classState.text = stateText;
	}
}

_fwInitOptionsMapping()
{
	DIGITAL_OPTIONS[DPATTR_TIME_SMOOTH] = 0;
	DIGITAL_OPTIONS[DPATTR_COMPARE_OLD_NEW] = 1;
	DIGITAL_OPTIONS[DPATTR_OLD_NEW_AND_TIME_SMOOTH] = 2;
	DIGITAL_OPTIONS[DPATTR_OLD_NEW_OR_TIME_SMOOTH] = 3;

	ANALOG_OPTIONS[DPATTR_VALUE_SMOOTH] = 0;
	ANALOG_OPTIONS[DPATTR_VALUE_REL_SMOOTH] = 0;
	ANALOG_OPTIONS[DPATTR_TIME_SMOOTH] = 1;
	ANALOG_OPTIONS[DPATTR_TIME_AND_VALUE_SMOOTH] = 2;
	ANALOG_OPTIONS[DPATTR_TIME_AND_VALUE_REL_SMOOTH] = 2;
	ANALOG_OPTIONS[DPATTR_TIME_OR_VALUE_SMOOTH] = 3;
	ANALOG_OPTIONS[DPATTR_TIME_OR_VALUE_REL_SMOOTH] = 3;
	ANALOG_OPTIONS[DPATTR_COMPARE_OLD_NEW] = 4;
	ANALOG_OPTIONS[DPATTR_OLD_NEW_AND_TIME_SMOOTH] = 5;
	ANALOG_OPTIONS[DPATTR_OLD_NEW_OR_TIME_SMOOTH] = 6;

	DIGITAL_PROCEDURES[0] = DPATTR_TIME_SMOOTH;
	DIGITAL_PROCEDURES[1] = DPATTR_COMPARE_OLD_NEW;
	DIGITAL_PROCEDURES[2] = DPATTR_OLD_NEW_AND_TIME_SMOOTH;
	DIGITAL_PROCEDURES[3] = DPATTR_OLD_NEW_OR_TIME_SMOOTH;

	ANALOG_PROCEDURES[0] = DPATTR_VALUE_SMOOTH;
	ANALOG_PROCEDURES[0 + RELATIVE_DEADBAND] = DPATTR_VALUE_REL_SMOOTH;
	ANALOG_PROCEDURES[1] = DPATTR_TIME_SMOOTH;
	ANALOG_PROCEDURES[1 + RELATIVE_DEADBAND] = DPATTR_TIME_SMOOTH;
	ANALOG_PROCEDURES[2] = DPATTR_TIME_AND_VALUE_SMOOTH;
	ANALOG_PROCEDURES[2 + RELATIVE_DEADBAND] = DPATTR_TIME_AND_VALUE_REL_SMOOTH;
	ANALOG_PROCEDURES[3] = DPATTR_TIME_OR_VALUE_SMOOTH;
	ANALOG_PROCEDURES[3 + RELATIVE_DEADBAND] = DPATTR_TIME_OR_VALUE_REL_SMOOTH;
	ANALOG_PROCEDURES[4] = DPATTR_COMPARE_OLD_NEW;
	ANALOG_PROCEDURES[4 + RELATIVE_DEADBAND] = DPATTR_COMPARE_OLD_NEW;
	ANALOG_PROCEDURES[5] = DPATTR_OLD_NEW_AND_TIME_SMOOTH;
	ANALOG_PROCEDURES[5 + RELATIVE_DEADBAND] = DPATTR_OLD_NEW_AND_TIME_SMOOTH;
	ANALOG_PROCEDURES[6] = DPATTR_OLD_NEW_OR_TIME_SMOOTH;
	ANALOG_PROCEDURES[6 + RELATIVE_DEADBAND] = DPATTR_OLD_NEW_OR_TIME_SMOOTH;
}

_fwToggleBasicArchiveItems(bool shouldShow)
{
	archiveClassText.visible(shouldShow);
	archiveClassList.visible(shouldShow);
	archiveLoad.visible(shouldShow);
	archiveLoadText.visible(shouldShow);
	parametrize.visible(shouldShow);
	refresh.visible(shouldShow);
	startArchiving.visible(shouldShow);
	archiveDetailsBox.visible(shouldShow);
	classState.visible(shouldShow);
	classStateTitle.visible(shouldShow);
	classStatisticsTitle.visible(shouldShow);
}

_fwHideSmoothingItems()
{
	timeText.visible(FALSE);
	day.visible(FALSE);
	hour.visible(FALSE);
	minute.visible(FALSE);
	second.visible(FALSE);
	milli.visible(FALSE);
	dayTitle.visible(FALSE);
	hourTitle.visible(FALSE);
	minuteTitle.visible(FALSE);
	secondTitle.visible(FALSE);
	milliTitle.visible(FALSE);
	secondsOnly.visible(FALSE);

	deadbandText.visible(FALSE);
	deadbandValue.visible(FALSE);
	relativeUnit.visible(FALSE);
	relativeSelector.visible(FALSE);

	smoothingOptions.visible(FALSE);
	digitalSmoothingOptions.visible(FALSE);
}

_fwShowSmoothingItems(int selectedOption)
{
	bool timeInSecondsOnly, relativeDeadband, timeIntervalStatus, deadbandStatus, canShowDeadband;
	int elementType, smoothProcedure;
	dyn_string exceptionInfo;

	timeInSecondsOnly = secondsOnly.state(0);	
	relativeDeadband = relativeSelector.state(0);	

	if(relativeDeadband)
		selectedOption += RELATIVE_DEADBAND;

	_fwConfigs_getConfigOptionsForDpeType(DPE_TYPE, fwConfigs_PVSS_ARCHIVE, elementType, exceptionInfo);		
	switch(elementType)
	{
		case fwConfigs_ANALOG_OPTIONS:
			canShowDeadband = TRUE;
			if(mappingHasKey(ANALOG_PROCEDURES, selectedOption))
				smoothProcedure = ANALOG_PROCEDURES[selectedOption];
			else
				smoothProcedure = -1;
			break;
		default:
			canShowDeadband = FALSE;
			if(mappingHasKey(DIGITAL_PROCEDURES, selectedOption))
				smoothProcedure = DIGITAL_PROCEDURES[selectedOption];
			else
				smoothProcedure = -1;
			break;
	}
	
	switch(smoothProcedure)
	{
		case DPATTR_VALUE_SMOOTH:
		case DPATTR_VALUE_REL_SMOOTH:
			deadbandStatus=canShowDeadband;
			timeIntervalStatus=FALSE;
			break;
		case DPATTR_TIME_SMOOTH:
			deadbandStatus=FALSE;
			timeIntervalStatus=TRUE;
			break;
		case DPATTR_TIME_AND_VALUE_SMOOTH:
		case DPATTR_TIME_AND_VALUE_REL_SMOOTH:
		case DPATTR_TIME_OR_VALUE_SMOOTH:
		case DPATTR_TIME_OR_VALUE_REL_SMOOTH:
			deadbandStatus=canShowDeadband;
			timeIntervalStatus=TRUE;
			break;
		case DPATTR_COMPARE_OLD_NEW:
			deadbandStatus=FALSE;
			timeIntervalStatus=FALSE;
			break;
		case DPATTR_OLD_NEW_AND_TIME_SMOOTH:
		case DPATTR_OLD_NEW_OR_TIME_SMOOTH:
			deadbandStatus=FALSE;
			timeIntervalStatus=TRUE;
			break;
		default:
			deadbandStatus=FALSE;
			timeIntervalStatus=FALSE;
			break;
	}

	timeText.visible(timeIntervalStatus);
	day.visible(timeIntervalStatus &! timeInSecondsOnly);
	hour.visible(timeIntervalStatus &! timeInSecondsOnly);
	minute.visible(timeIntervalStatus &! timeInSecondsOnly);
	second.visible(timeIntervalStatus);
	milli.visible(timeIntervalStatus);
	dayTitle.visible(timeIntervalStatus &! timeInSecondsOnly);
	hourTitle.visible(timeIntervalStatus &! timeInSecondsOnly);
	minuteTitle.visible(timeIntervalStatus &! timeInSecondsOnly);
	secondTitle.visible(timeIntervalStatus);
	milliTitle.visible(timeIntervalStatus);
	secondsOnly.visible(timeIntervalStatus);

	relativeUnit.visible(deadbandStatus && relativeDeadband);
	relativeSelector.visible(deadbandStatus);
	deadbandText.visible(deadbandStatus);
	deadbandValue.visible(deadbandStatus);
}

saveSettings(dyn_string &exceptionInfo)
{
	bool withSmooth, relativeDeadband, isGood;
	int newDay = 0, newHour = 0, newMinute = 0, newSecond = 0, newMilli = 0,
			smoothProcedure, smoothType, pos, elementType;
	float newTime, deadband;
	string archiveClass, temp;
	time interval;
	dyn_string archiveClasses;
	shape optionsList;
	
 	if(!DPES_OK)
	{
		fwException_raise(exceptionInfo, \"ERROR\", getCatStr(\"fwConfigs\", \"PANEL_MIXEDORBADDPETYPES\"), \"\");
		return;		
	}

	okButton.enabled = FALSE;
	applyButton.enabled = FALSE;
	closeButton.enabled = FALSE;
	if(panelMode == MULTIPLE_DPES)
		fwOpenProgressBar(\"Configuration panel\", \"Saving configuration...\", 1);

	withSmooth = archivingOptions.state(1);
	
	if(archivingOptions.state(0))
	{
		archiveClasses = archiveClassList.items();
		pos = archiveClassList.selectedPos();
		archiveClass = archiveClasses[pos];

		if(withSmooth)
		{
			smoothType = DPATTR_ARCH_PROC_SIMPLESM;
			relativeDeadband = relativeSelector.state(0);
		
			_fwConfigs_getConfigOptionsForDpeType(DPE_TYPE, fwConfigs_PVSS_ARCHIVE, elementType, exceptionInfo);		
			switch(elementType)
			{
				case fwConfigs_ANALOG_OPTIONS:
					optionsList = getShape(\"smoothingOptions\");
					smoothProcedure = optionsList.number();

					if(relativeDeadband)
						smoothProcedure += RELATIVE_DEADBAND;

					if(mappingHasKey(ANALOG_PROCEDURES, smoothProcedure))
						smoothProcedure = ANALOG_PROCEDURES[smoothProcedure];
					else
						smoothProcedure = -1;
					break;
				default:
					optionsList = getShape(\"digitalSmoothingOptions\");
					smoothProcedure = optionsList.number();

					if(relativeDeadband)
						smoothProcedure += RELATIVE_DEADBAND;

					if(mappingHasKey(DIGITAL_PROCEDURES, smoothProcedure))
						smoothProcedure = DIGITAL_PROCEDURES[smoothProcedure];
					else
						smoothProcedure = -1;
					break;
			}
			
			if(day.visible)
			{
				temp = day.text();
				fwConfigs_checkStringFormat(temp, DPEL_INT, isGood, exceptionInfo);
				if(isGood)
					newDay = temp;
				else
					fwException_raise(exceptionInfo, \"ERROR\", \"Day value of time interval is not valid\", \"\");

				temp = hour.text();
				fwConfigs_checkStringFormat(temp, DPEL_INT, isGood, exceptionInfo);
				if(isGood)
					newHour = temp;
				else
					fwException_raise(exceptionInfo, \"ERROR\", \"Hour value of time interval is not valid\", \"\");
					
				temp = minute.text();
				fwConfigs_checkStringFormat(temp, DPEL_INT, isGood, exceptionInfo);
				if(isGood)
					newMinute = temp;
				else
					fwException_raise(exceptionInfo, \"ERROR\", \"Minute value of time interval is not valid\", \"\");
			}
			
                        if(second.visible)
                        {
			  temp = second.text();
			  fwConfigs_checkStringFormat(temp, DPEL_INT, isGood, exceptionInfo);
			  if(isGood)
				newSecond = temp;
			  else
				fwException_raise(exceptionInfo, \"ERROR\", \"Second value of time interval is not valid\", \"\");
			
			  temp = milli.text();
			  fwConfigs_checkStringFormat(temp, DPEL_INT, isGood, exceptionInfo);
			  if(isGood)
				newMilli = temp;
			  else
				fwException_raise(exceptionInfo, \"ERROR\", \"Millisecond value of time interval is not valid\", \"\");
					
			  newSecond = newDay*86400 + newHour*3600 + newMinute*60 + newSecond;

			  setPeriod(interval, newSecond, newMilli);  
			  newTime = interval;
                        }
                        
                        if(deadbandValue.visible)
                        {
			  temp = deadbandValue.text();
			  if(relativeDeadband)
				fwConfigs_checkStringFormat(temp, DPEL_FLOAT, isGood, exceptionInfo);
			  else
				fwConfigs_checkStringFormat(temp, DPE_TYPE, isGood, exceptionInfo);
			  if(isGood)
				deadband = temp;
			  else
				fwException_raise(exceptionInfo, \"ERROR\", \"Deadband value is not valid\", \"\");
                        }
                        
			if(dynlen(exceptionInfo) > 0)
			{
				okButton.enabled = TRUE;
				applyButton.enabled = TRUE;
				closeButton.enabled = TRUE;
				if(panelMode == MULTIPLE_DPES)
					fwCloseProgressBar(\"Configuration failed\");
				return;
			}
		}
		else
			smoothType = DPATTR_ARCH_PROC_VALARCH;

		if(panelMode != OBJECT)
		{
			if(startArchiving.state(0))
			{			
				fwArchive_setMultiple(DPE_LIST, archiveClass, smoothType, smoothProcedure,	deadband, newTime, exceptionInfo);
			} 
			else 
			{
				fwArchive_configMultiple(DPE_LIST, archiveClass, smoothType, smoothProcedure,	deadband, newTime, exceptionInfo);
			}
		}
		else
		{					
			dpeConfigObject[fwConfigs_DPE_OBJECT_TYPE][1]	= smoothType;
			dpeConfigObject[fwConfigs_DPE_OBJECT_ACTIVE][1] = startArchiving.state(0);
					
			dpeConfigObject[fwArchive_DPE_OBJECT_PROCEDURE][1] 	= smoothProcedure;
			dpeConfigObject[fwArchive_DPE_OBJECT_DEADBAND][1] 	= deadband;
			dpeConfigObject[fwArchive_DPE_OBJECT_TIME_INTERVAL][1]	= newTime;
			dpeConfigObject[fwArchive_DPE_OBJECT_CLASS_NAME][1]			= archiveClass;
			
			fwGeneral_setGlobalValue($sDpeConfigObjectVarName, dpeConfigObject, exceptionInfo);
//			DebugN(\"Modified \", dpeConfigObject);
		}
	}
	else
	{
		if(panelMode != OBJECT)
		{
			fwArchive_deleteMultiple(DPE_LIST, exceptionInfo);			
		}
		else
		{
			dpeConfigObject[fwConfigs_DPE_OBJECT_TYPE][1]	= DPCONFIG_NONE;
			dpeConfigObject[fwConfigs_DPE_OBJECT_ACTIVE][1] = FALSE;
					
			dpeConfigObject[fwArchive_DPE_OBJECT_PROCEDURE][1] 	= 0;
			dpeConfigObject[fwArchive_DPE_OBJECT_DEADBAND][1] 	= 0;
			dpeConfigObject[fwArchive_DPE_OBJECT_TIME_INTERVAL][1]	= 0;
			dpeConfigObject[fwArchive_DPE_OBJECT_CLASS_NAME][1]			= \"\";
			
			fwGeneral_setGlobalValue($sDpeConfigObjectVarName, dpeConfigObject, exceptionInfo);
//			DebugN(\"Modified \", dpeConfigObject);
		}
	}
	
	okButton.enabled = TRUE;
	applyButton.enabled = TRUE;
	closeButton.enabled = TRUE;
	if(panelMode == MULTIPLE_DPES)
		fwCloseProgressBar(\"Configuration complete\");
}" 0
 2
"CBRef" "1"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 21
"title"
""
1 27 36 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
23 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 12 192 35
0 2 0 "0s" 0 0 0 192 0 0  12 12 1
1
LANG:1 84 -*-Arial-*-r-normal-*-19-*-100-100-*-*-iso8859-1|-19,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 21 Archive Configuration
2 27
"dayTitle"
""
1 320 622 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
24 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 135 275 165 292
0 2 2 "0s" 0 0 0 192 0 0  135 275 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 4 Days
2 28
"hourTitle"
""
1 487 622 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 203 275 237 292
0 2 2 "0s" 0 0 0 192 0 0  203 275 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 5 Hours
2 29
"minuteTitle"
""
1 659 622 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
26 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 269 275 315 292
0 2 2 "0s" 0 0 0 192 0 0  269 275 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 7 Minutes
2 30
"secondTitle"
""
1 812 622 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
27 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 336 275 387 292
0 2 2 "0s" 0 0 0 192 0 0  336 275 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 7 Seconds
2 31
"milliTitle"
""
1 1004 622 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
28 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 407 275 458 292
0 2 2 "0s" 0 0 0 192 0 0  407 275 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 9 Millisecs
2 42
"archiveClassText"
""
1 461 914 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
29 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 157 92 240 109
0 2 2 "0s" 0 0 0 192 0 0  157 92 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 14 Archive Class:
2 45
"Text3"
""
1 255 131 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 55 128 77
0 2 0 "0s" 0 0 0 64 0 0  12 55 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 11 DP Element:
2 50
"archiveLoadText"
""
1 932 1093 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
32 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 492 189 563 206
0 2 2 "0s" 0 0 0 192 0 0  492 189 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 10 DPEs / max
2 53
"Text1"
""
1 185 484 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
33 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 310 96 344
0 2 0 "0s" 0 0 0 193 0 0  59 310 2
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 8 Database
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 13 Configuration
30 58
"archiveDetailsBox"
""
1 400 249 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
34 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 400 130 610 250
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 21 Archive Class Details
2 59
"classStateTitle"
""
1 467 668 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
35 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 412 155 447 172
0 2 2 "0s" 0 0 0 192 0 0  412 155 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 6 State:
2 61
"classStatisticsTitle"
""
1 475 702 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
36 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 412 189 471 206
0 2 2 "0s" 0 0 0 192 0 0  412 189 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 11 Statistics:
30 63
"deadbandText"
""
1 480 345 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
37 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 480 261 610 345
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 8 Deadband
30 64
"timeText"
""
1 110 345 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
38 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 110 261 473 345
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 4 Time
2 66
"relativeUnit"
""
1 586 292 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
39 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 588 294 604 310
0 2 0 "0s" 0 0 0 64 0 0  588 294 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 1 %
14 56
"elementNameField"
""
1 346 103 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 88 48 632 75
3 "0s" 0 0 0 0 0 -1  E E E
13 57
"dpeDetails"
""
1 460 10 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 458 8 582 42

T 
1
LANG:1 15 Select Elements
"main()
{
	string errorString, sArchiveClassDpName;
	dyn_string returnedDpeList, exceptionInfo;
	dyn_float cancelOrOk;

	ChildPanelOnCentralModalReturn(\"fwConfigs/fwDpeSelector.pnl\", \"Choose Data Point Elements\",
									makeDynString(\"$dsAllDpes:\"+$sDpe, \"$dsIncludedDpes:\"+DPE_LIST, \"$sConfigType:\"+fwConfigs_PVSS_ARCHIVE),
									cancelOrOk, returnedDpeList);
	if(cancelOrOk[1] > 0.5)
	{
		if(DPE_LIST != returnedDpeList)
		{
			DPE_LIST = returnedDpeList;
			DPES_OK = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_ARCHIVE, DPE_TYPE, exceptionInfo, errorString);
			if(!DPES_OK)
				fwException_raise(exceptionInfo, \"ERROR\", errorString, \"\");

			_fwConfigs_getSystemsInDpeList(DPE_LIST, SYSTEMS, exceptionInfo);
			fwFillArchiveClassList(SYSTEMS, exceptionInfo);
			sArchiveClassDpName = archiveClassDp.text();
			fwUpdateArchiveStatistics(sArchiveClassDpName, exceptionInfo);

			if(dynlen(DPE_LIST)== 1)
				elementNameField.text(DPE_LIST[1]);
			else
			{
				if(dynlen(SYSTEMS) == 1)
					elementNameField.text(\"Multiple Data Point Elements (from \" + SYSTEMS[1] + \")\");
				else
					elementNameField.text(\"Multiple Data Point Elements (from multiple systems)\");
			}
			
			_fwHideSmoothingItems();
			archivingOptions.state(1) = FALSE;
			fwSetDeadbandFieldFormat(relativeSelector.state(0), exceptionInfo);

			okButton.enabled = TRUE;
			applyButton.enabled = TRUE;
		}
	}	
}" 0
 E E E
20 41
"archivingOptions"
""
1 11 85 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 9 83 153 153
2
T 
1
LANG:1 9 Configure

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 14 With Smoothing

0 
1
LANG:1 0 
E E
0 0 0 0 0
2
E E
E E
E"main()
{
	bool archiveState, withSmooth, result;
	int elementType;
	string errorString;
	shape optionsList;
	dyn_string exceptionInfo;
	
	if(!DPES_OK)
	{
		this.state(0) = FALSE;
		this.state(1) = FALSE;
		
		fwException_raise(exceptionInfo, \"ERROR\", getCatStr(\"fwConfigs\", \"PANEL_MIXEDORBADDPETYPES\"), \"\");
		if(dynlen(exceptionInfo)>0)
			fwExceptionHandling_display(exceptionInfo);
		return;
	}

	archiveState = this.state(0);
	withSmooth = this.state(1);
	
	if(withSmooth)
	{
		if(!canHaveSmoothing)
		{
			this.state(1) = FALSE;
			return;
		}
	}
	
	_fwConfigs_getConfigOptionsForDpeType(DPE_TYPE, fwConfigs_PVSS_ARCHIVE, elementType, exceptionInfo);		
	switch(elementType)
	{
		case fwConfigs_ANALOG_OPTIONS:
			optionsList = getShape(\"smoothingOptions\");
			break;
		default:
			optionsList = getShape(\"digitalSmoothingOptions\");
			break;
	}

	if(!(archiveState)&&(!withSmooth))
	{
		_fwHideSmoothingItems();
		_fwToggleBasicArchiveItems(FALSE);
	}
	if(archiveState&&(!withSmooth))
	{
		_fwHideSmoothingItems();
		_fwToggleBasicArchiveItems(TRUE);
	}
	if(archiveState&&withSmooth)
	{
		_fwShowSmoothingItems(optionsList.number);
		optionsList.visible(TRUE);
		_fwToggleBasicArchiveItems(TRUE);
	}
	if((!archiveState)&&withSmooth)
	{
		if(optionsList.visible())
		{
			this.state(1,FALSE);
			_fwHideSmoothingItems();
			_fwToggleBasicArchiveItems(FALSE);
		}
		else
		{
			this.state(0,TRUE);
			_fwShowSmoothingItems(optionsList.number);
			optionsList.visible(TRUE);
			_fwToggleBasicArchiveItems(TRUE);
		}
	}	
}" 0
20 55
"startArchiving"
""
1 336 507 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 9 168 133 202
1
T 
1
LANG:1 12 Archiving ON

1 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
EE22 44
"archiveClassList"
""
1 248 87 E E E 1 E 0 E N "_3DText" E N "_Window" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 246 85 464 112
0

E
"main()
{
	int iPos;
	string sArchiveClassDpName;
	dyn_string exceptionInfo;

	if(this.text == ARCHIVECLASSTYPEDIVIDER)
	{
		this.selectedPos = archiveClassDp.selectedPos;
		return;
	}
		
	iPos = this.selectedPos();
	
	if(iPos >= 0) {
		if(PREVIOUS_CLASS != \"\")
		{
			if((dpTypeName(PREVIOUS_CLASS) == fwArchive_VALARCH_CLASS_DPTYPE) && (strpos(PREVIOUS_CLASS, \":\") >= 0))
			{
				dpDisconnect(\"work_getClassDpeLoad\", PREVIOUS_CLASS + \".statistics.dpElements:_online.._stime\");
				dpDisconnect(\"work_getClassState\", PREVIOUS_CLASS + \".state:_online.._stime\");
			}
		}
				
		archiveClassDp.selectedPos = iPos;
		sArchiveClassDpName = archiveClassDp.text();
		PREVIOUS_CLASS = sArchiveClassDpName;
		fwUpdateArchiveStatistics(sArchiveClassDpName, exceptionInfo);
	}
}
" 0

E
 0 0
13 47
"parametrize"
""
1 611 323 E E E 0 E 0 E N "_ButtonText" E N "_Button" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 469 81 593 115

T 
1
LANG:1 14 Parametrize...
"main()
{
	string sArchivDp;
	dyn_string exceptionInfo;
	string module = getCatStr(\"va\",\"Hauptfenster\");

	initHosts();

	sArchivDp = archiveClassDp.text();

	if (!dpExists(sArchivDp))
	{
		fwException_raise(exceptionInfo,\"WARNING\", \"getting archive: no archive of type: \"+sArchivDp, \"\");
		fwExceptionHandling_display(exceptionInfo);
		return;
	}

	if(!isModuleOpen(module) )
	{
		ModuleOn(module,100,100,0,0,1,1,1,\"\");
	}

	if((dpTypeName(sArchivDp) == fwArchive_RDB_CLASS_DPTYPE))
	{
		string FileName = \"fwRDBArchiving/fwRDBArchivingGeneral.pnl\"; 

		RootPanelOnModule(FileName,
					\"\",module,
					makeDynString(\"$sDpe:\"+$sDpe));
	}
	else if((dpTypeName(sArchivDp) == fwArchive_VALARCH_CLASS_DPTYPE))
	{
		string FileName = \"para/archive/archive_para.pnl\"; 

		RootPanelOnModule(FileName,
					\"\",module,
					makeDynString(\"$1:\"+sArchivDp));
	}
}

" 0
 E E E
14 60
"classState"
""
1 1223 660 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 458 148 572 175
3 "0s" 0 0 0 0 0 -1  E "main()
{
	this.text(0);
}" 0
 E
13 51
"refresh"
""
1 868 364 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 408 207 482 241

T 
1
LANG:1 7 Refresh
"main()
{
	dyn_string ds;
	string sArchiveClassDpName;

	sArchiveClassDpName = archiveClassDp.text();
	archiveLoad.text = \"Refreshing...\";
	dpGet(sArchiveClassDpName+\".files.fileName:_online.._value\",ds);
	dpSet(sArchiveClassDpName+\".statistics.index:_original.._value\",dynlen(ds));
	
	this.enabled = FALSE;
}

" 0
 E E E
14 49
"archiveLoad"
""
1 485 212 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 74 Number in brackets shows how many DPEs will be used after next file change

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 483 210 602 237
2 "0s" 0 0 0 0 0 -1  E E E
19 24
"smoothingOptions"
""
1 781 236 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 158 112 390 265
7
T 
1
LANG:1 8 Deadband

1 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 4 Time

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 17 Deadband AND Time

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 16 Deadband OR Time

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 18 Old-New Comparison

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 27 Old-New Comparison AND Time

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 26 Old-New Comparison OR Time

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E "main()
{
	_fwShowSmoothingItems(this.number);
}" 0

19 25
"digitalSmoothingOptions"
""
1 545 253 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 158 112 390 210
4
T 
1
LANG:1 4 Time

1 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 18 Old-New Comparison

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 27 Old-New Comparison AND Time

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 26 Old-New Comparison OR Time

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E "main()
{
	_fwShowSmoothingItems(this.number);
}" 0

20 38
"secondsOnly"
""
1 671 489 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
12 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 344 319 468 338
1
T 
1
LANG:1 15 Time in Seconds

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
E"main()
{
	int actualDay,actualHour,actualMinute,actualSecond,actualMilli, timeInSeconds;
	bool checkState;

	checkState = this.state(0);

	if(checkState)
	{
		actualDay = day.text();
		actualHour = hour.text();
		actualMinute = minute.text();
		actualSecond = second.text();

		timeInSeconds=(actualDay*86400+actualHour*3600+actualMinute*60+actualSecond);

		day.text(0);
		hour.text(0);
		minute.text(0);
		second.text(timeInSeconds);

		day.visible(FALSE);
		hour.visible(FALSE);
		minute.visible(FALSE);
		dayTitle.visible(FALSE);
		hourTitle.visible(FALSE);
		minuteTitle.visible(FALSE);
		second.scale(1.5,1);
	}
	else
	{
		timeInSeconds = second.text();
	
		actualDay=timeInSeconds/86400;
		timeInSeconds=timeInSeconds-(actualDay*86400);

		actualHour=timeInSeconds/3600;
		timeInSeconds=timeInSeconds-(actualHour*3600);

		actualMinute=timeInSeconds/60;
		timeInSeconds=timeInSeconds-(actualMinute*60);

		actualSecond=timeInSeconds;
		day.text(actualDay);
		hour.text(actualHour);
		minute.text(actualMinute);
		second.text(actualSecond);

		day.visible(TRUE);
		hour.visible(TRUE);
		minute.visible(TRUE);
		dayTitle.visible(TRUE);
		hourTitle.visible(TRUE);
		minuteTitle.visible(TRUE);
		second.scale(1,1);
	}
}" 0
14 32
"day"
""
1 321 681 E E E 1 E 0 E N "_3DText" E N "_Window" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 118 290 182 317
3 "0s" 0 0 0 2 0 -1  E "main()
{
	this.text(0);
}" 0
 E
14 33
"hour"
""
1 515 681 E E E 1 E 0 E N "_3DText" E N "_Window" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 188 290 252 317
3 "0s" 0 0 0 2 0 -1  E "main()
{
	this.text(0);
}" 0
 E
14 34
"minute"
""
1 715 681 E E E 1 E 0 E N "_3DText" E N "_Window" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 260 290 324 317
3 "0s" 0 0 0 2 0 -1  E "main()
{
	this.text(0);
}" 0
 E
14 35
"second"
""
1 392 315 E E E 1 E 0 E N "_3DText" E N "_Window" E E
 E E
16 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 330 290 394 317
3 "0s" 0 0 0 2 0 -1  E "main()
{
	this.text(0);
}" 0
 E
14 36
"milli"
""
1 1107 681 E E E 1 E 0 E N "_3DText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 400 290 464 317
3 "0s" 0 0 0 2 0 -1  E "main()
{
	this.text(0);
}" 0
 E
20 62
"relativeSelector"
""
1 490 321 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
18 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 488 319 592 338
1
T 
1
LANG:1 14 Relative value

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
E"main(int button, bool state)
{
	dyn_string exceptionInfo;
	
	fwSetDeadbandFieldFormat(relativeSelector.state(0), exceptionInfo);

	if(button == 0)
	{
		if(state)
			relativeUnit.visible = TRUE;
		else
			relativeUnit.visible = FALSE;
	}
}" 0
14 37
"deadbandValue"
""
1 1115 800 E E E 1 E 0 E N "_3DText" E N "_Window" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 488 288 582 315
3 "0s" 0 0 0 2 0 -1  E "main()
{
	this.text(0);
}" 0
 E
13 52
"archiveManagementButton"
""
1 52 278 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
2
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
LANG:0 107 -microsoft windows-arial-medium-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,500,0,0,0,0,0,0,0,16,arial
0 ""
 32 258 82 308

P 
13434828
"pictures/archiveConfiguration.bmp"
1
LANG:1 0 
"main()
{
	int iOK;
	bool bNewDB;

//
//	Falls alte DB -> unsichtbar !!!
//

	iOK=dpGet(\"_DataManager.UseValueArchive:_online.._value\",bNewDB);
	if (iOK!=-1 && bNewDB)	// nur wenn neue DB Aktiv
	{
		if(!isModuleOpen(\"PVSS\") )
  			ModuleOn(\"PVSS\", 100, 100, 500, 500, 1, 1, \"None\");
		RootPanelOnModule(\"para/archive/archive_select.pnl\", \"\", \"PVSS\", makeDynString());
	}
	else
	{
		if(!isModuleOpen(\"PVSS\") )
			ModuleOn(\"PVSS\", 100, 100, 500, 500, 1, 1, \"None\");
		RootPanelOnModule(\"vision/DataManager_par\", \"\", \"PVSS\", makeDynString());
	}
}" 0
 E E E
13 40
"applyButton"
""
1 0 0 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 458 348 542 382

T 
1
LANG:1 5 Apply
"main()
{
	dyn_string exceptionInfo;

	saveSettings(exceptionInfo);
	if(dynlen(exceptionInfo) > 0)
		fwExceptionHandling_display(exceptionInfo);
}" 0
 E E "main()
{
	int x, y;

	if(isDollarDefined(\"$bHierarchyBrowser\"))
	{
		if(!$bHierarchyBrowser)
			closeButton.visible = TRUE;
		else
		{
			getValue(\"\", \"position\", x, y);
			this.position(x + 90,y);	
		}
	}
	else
		closeButton.visible = TRUE;
		
	this.visible = TRUE;	
}
" 0

13 67
"closeButton"
""
1 1492 929 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
22 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 548 348 632 382

T 
1
LANG:1 5 Close
"main()
{
	PanelOff();
}" 0
 E E E
22 48
"archiveClassDp"
""
1 110 350 E E E 1 E 0 E N "_3DText" E N "_Window" E E
 E E
31 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 108 348 302 375
0

E
E
E
 0 0
13 68
"okButton"
""
1 0 0 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
39 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 368 348 452 382

T 
1
LANG:1 2 OK
"main()
{
	dyn_string exceptionInfo;

	saveSettings(exceptionInfo);
	if(dynlen(exceptionInfo) > 0)
		fwExceptionHandling_display(exceptionInfo);
	else
		PanelOff();
}" 0
 E E "main()
{
	if(isDollarDefined(\"$bHierarchyBrowser\"))
	{
		if(!$bHierarchyBrowser)
			this.visible = TRUE;
	}
	else
		this.visible = TRUE;	
}" 0

1 69 0 "" 0
0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 0 "Group2"
"objects\\fwGeneral\\fwHelpButton.pnl" 604 10 T 39 U 
1
"$sPanelRelativePath""fwConfigs/fwArchiveConfig"
0