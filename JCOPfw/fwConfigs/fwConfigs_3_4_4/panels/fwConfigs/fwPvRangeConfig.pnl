V 10
1
LANG:1 0 
PANEL,306 170 641 391 N "_3DFace" 3
"$bHierarchyBrowser"
"$sDpe"
"$sDpeConfigObjectVarName"
"main()
{
	bool negateRange, ignoreOutside, inclusiveMin, inclusiveMax, doesExist;
	int configType, pvRangeType, elementType;
	float min, max;
	string dpe, minString, maxString, formatString, errorString;
	dyn_string systems, exceptionInfo;
	dyn_anytype configData;
			
	if(isDollarDefined(\"$sDpe\"))
	{
		dpe = $sDpe;
		strreplace(dpe, \" \", \"\");
	    DPE_LIST = strsplit(dpe, \"|\");
	}
    
	elementNameField.editable(FALSE);

	switch(dynlen(DPE_LIST))
	{
			case 0:
				if(isDollarDefined(\"$sDpeConfigObjectVarName\"))	// object passed to the panel
				{
					if(getGlobalType($sDpeConfigObjectVarName) != DYN_DYN_ANYTYPE_VAR)
					{
						elementNameField.text(\"Wrong config object name\");
						pvRangeTypeSelector.enabled = FALSE;
						applyButton.enabled = FALSE;
						okButton.enabled = FALSE;
						fwException_raise(exceptionInfo, 
															\"WARNING\", \"The config object \" + $sDpeConfigObjectVarName + 
															\" doesn't exists or hasn't got the proper format.\", 
															\"\");
						fwExceptionHandling_display(exceptionInfo);					
						return;
					}					
					
					panelMode = OBJECT;					
					fwGeneral_getGlobalValue($sDpeConfigObjectVarName, dpeConfigObject, exceptionInfo);
					//DebugN(\\\"fwAlertConfigPanel: \\\", dpeAlertConfigObject);
					
					// read from config object
					DPE_LIST[1] 	= dpeConfigObject[fwConfigs_DPE_OBJECT_DPE_NAME][1];						
					DPE_TYPE			= dpeConfigObject[fwConfigs_DPE_OBJECT_DPE_TYPE][1];
					configType		= dpeConfigObject[fwConfigs_DPE_OBJECT_TYPE][1];
					min						= dpeConfigObject[fwPvRange_DPE_OBJECT_MIN_VALUE][1];
					max						= dpeConfigObject[fwPvRange_DPE_OBJECT_MAX_VALUE][1];				
					negateRange		= dpeConfigObject[fwPvRange_DPE_OBJECT_NEGATE_RANGE][1];
					ignoreOutside	= dpeConfigObject[fwPvRange_DPE_OBJECT_IGNORE_OUTSIDE][1];
					inclusiveMin	= dpeConfigObject[fwPvRange_DPE_OBJECT_INCLUSIVE_MIN][1];
					inclusiveMax	= dpeConfigObject[fwPvRange_DPE_OBJECT_INCLUSIVE_MAX][1];
					
					if(configType != DPCONFIG_NONE)
						doesExist = FALSE;
					else
						doesExist = TRUE;
					
					elementNameField.text(DPE_LIST[1]);
					DPES_OK = TRUE;
				}
				else // neither dpes nor object passed, nothing to do in the panel
				{
					elementNameField.text(\"No Data Point Elements\");
					pvRangeTypeSelector.enabled = FALSE;
					applyButton.enabled = FALSE;
					okButton.enabled = FALSE;
					fwException_raise(exceptionInfo, \"WARNING\", getCatStr(\"fwConfigs\", \"PANEL_NODATAPOINTSTOCONFIG\"), \"\");
					fwExceptionHandling_display(exceptionInfo);					
					return;
				}
				break;				
			case 1:	// single dpe passed to the panel
				panelMode = SINGLE_DPE;
				dpe = DPE_LIST[1];
				elementNameField.text(dpe);
				DPES_OK = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_PV_RANGE, DPE_TYPE, exceptionInfo, errorString);
				if(!DPES_OK)
					fwException_raise(exceptionInfo, \"ERROR\", errorString, \"\");
				else
					fwPvRange_getObject(DPE_LIST[1], doesExist, pvRangeType, configData, exceptionInfo);
				break;
			default: // multiple dpes passed to the panel
				panelMode = MULTIPLE_DPES;
				dpe = DPE_LIST[1];

				_fwConfigs_getSystemsInDpeList(DPE_LIST, systems, exceptionInfo);
				
				if(dynlen(systems) == 1)
					elementNameField.text(\"Multiple Data Point Elements (from \" + systems[1] + \")\");
				else
					elementNameField.text(\"Multiple Data Point Elements (from multiple systems)\");

				DPES_OK = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_PV_RANGE, DPE_TYPE, exceptionInfo, errorString);
				if(!DPES_OK)
					fwException_raise(exceptionInfo, \"ERROR\", errorString, \"\");

				dpeDetails.visible = TRUE;
				doesExist = FALSE;
				break;
	}

	if(DPES_OK)
		fwSetRangeFieldsFormat(exceptionInfo);

	okButton.enabled = DPES_OK;
	applyButton.enabled = DPES_OK;

	if(dynlen(exceptionInfo)>0)
	{
		fwExceptionHandling_display(exceptionInfo);
		return;
	}
	
	_fwDisplayAvailableTypes(exceptionInfo);

	if(doesExist)
	{
		if(panelMode != OBJECT)
			formatString = dpGetFormat(DPE_LIST[1]);
			
		if(formatString == \"\")
			formatString = \"%14f\";
		
		switch(pvRangeType)
		{
			case DPCONFIG_MINMAX_PVSS_RANGECHECK:
				pvRangeTypeSelector.text = PANEL_TEXT_MINMAX;
				sprintf(minString, formatString, configData[fwPvRange_MINIMUM_VALUE]);
				sprintf(maxString, formatString, configData[fwPvRange_MAXIMUM_VALUE]);
				
				maxValue.text = strltrim(maxString);
				minValue.text = strltrim(minString);
				
				inclusiveMinSelector.state(0, configData[fwPvRange_INCLUSIVE_MINIMUM]);
				inclusiveMaxSelector.state(0, configData[fwPvRange_INCLUSIVE_MAXIMUM]);
				break;
			case DPCONFIG_SET_PVSS_RANGECHECK:
				pvRangeTypeSelector.text = PANEL_TEXT_SET;
				valueSet.items = configData[fwPvRange_VALUE_SET];
				break;
			case DPCONFIG_MATCH_PVSS_RANGECHECK:
				pvRangeTypeSelector.text = PANEL_TEXT_PATTERN;
				valuePattern.text = configData[fwPvRange_VALUE_PATTERN];
				break;		
		}

		advancedOptions.state(0) = configData[fwPvRange_NEGATE_RANGE];
		advancedOptions.state(1) = configData[fwPvRange_IGNORE_OUTSIDE];

		_fwTogglePvRangeItems(pvRangeType);
	}
	else
	{
		_fwTogglePvRangeItems(DPCONFIG_NONE);
		pvRangeTypeSelector.text(PANEL_TEXT_NONE);	

		inclusiveMinSelector.state(0, TRUE);
		inclusiveMaxSelector.state(0, TRUE);

		maxValue.text = 0;
		minValue.text = 0;
		
		valuePattern.text = \"\";
		valueSet.items = makeDynString();
	}

	if(dynlen(exceptionInfo) > 0)
		fwExceptionHandling_display(exceptionInfo);	
}" 0
EE E E 1 -1 -1 0  -1 40
"" 0 1
E"#uses \"para.ctl\"

dyn_string DPE_LIST;
int DPE_TYPE;
bool DPES_OK;

// mode in which the panel is used
int panelMode;
const int OBJECT	= 1;
const int SINGLE_DPE		= 2;
const int MULTIPLE_DPES	= 3;

const string PANEL_TEXT_NONE = \"None\";
const string PANEL_TEXT_MINMAX = \"Min-Max Range\";
const string PANEL_TEXT_SET = \"Value Set\";
const string PANEL_TEXT_PATTERN = \"Pattern Match\";

dyn_dyn_anytype dpeConfigObject;

fwSetRangeFieldsFormat(dyn_string &exceptionInfo)
{
	string formatString;
	
	if(panelMode != OBJECT)
	{
		fwConfigs_getBestFormatForDpeList(DPE_LIST, formatString, exceptionInfo);
		fwConfigs_setTextFieldsFormat(makeDynString(\"minValue\", \"maxValue\", \"valuePattern\", \"valueSetItem\"), formatString,		
																	makeDynBool(FALSE), exceptionInfo);
	}
}

_fwDisplayAvailableTypes(dyn_string &exceptionInfo)
{
	int elementType;
	dyn_string availableTypes;

	dynAppend(availableTypes, PANEL_TEXT_NONE);
	if(panelMode != OBJECT)
	{
		_fwConfigs_getConfigOptionsForDpeType(DPE_TYPE, fwConfigs_PVSS_PV_RANGE, elementType, exceptionInfo);
//DebugN(elementType);
		if(elementType == fwConfigs_GENERAL_OPTIONS)
		{
			dynAppend(availableTypes, PANEL_TEXT_MINMAX);
			dynAppend(availableTypes, PANEL_TEXT_PATTERN);
		}
		else if(elementType == fwConfigs_BINARY_OPTIONS)
			dynAppend(availableTypes, PANEL_TEXT_PATTERN);
		else if(elementType == fwConfigs_ANALOG_OPTIONS)
			dynAppend(availableTypes, PANEL_TEXT_MINMAX);
		
		dynAppend(availableTypes, PANEL_TEXT_SET);
		pvRangeTypeSelector.items = availableTypes; 	
	}
	else
	{
		dynAppend(availableTypes, PANEL_TEXT_MINMAX);
		pvRangeTypeSelector.items = availableTypes;
	}
}

_fwTogglePvRangeItems(int pvRangeType)
{
	bool shouldShow, isMinMax, isSet, isPattern;

	switch(pvRangeType)
	{
		case DPCONFIG_NONE:
			shouldShow = FALSE;
			break;
		case DPCONFIG_MINMAX_PVSS_RANGECHECK:
			shouldShow = TRUE;
			isMinMax = TRUE;
			isSet = FALSE;
			isPattern = FALSE;
			break;		
		case DPCONFIG_SET_PVSS_RANGECHECK:
			shouldShow = TRUE;
			isMinMax = FALSE;
			isSet = TRUE;
			isPattern = FALSE;
			break;		
		case DPCONFIG_MATCH_PVSS_RANGECHECK:
			shouldShow = TRUE;
			isMinMax = FALSE;
			isSet = FALSE;
			isPattern = TRUE;
			break;		
	}

	minValueTitle.visible = shouldShow && isMinMax;
	maxValueTitle.visible = shouldShow && isMinMax;
	minValue.visible = shouldShow && isMinMax;
	maxValue.visible = shouldShow && isMinMax;
	inclusiveMinSelector.visible = shouldShow && isMinMax;
	inclusiveMaxSelector.visible = shouldShow && isMinMax;

	valueSet.visible = shouldShow && isSet;
	valueSetItem.visible = shouldShow && isSet;
	valueSetTitle.visible = shouldShow && isSet;
	valueSetEditor.visible = shouldShow && isSet;
	valueSetAfter.visible = shouldShow && isSet;
	valueSetBefore.visible = shouldShow && isSet;
	valueSetModify.visible = shouldShow && isSet;
	valueSetDelete.visible = shouldShow && isSet;
	valueSetDeleteAll.visible = shouldShow && isSet;

	valuePattern.visible = shouldShow && isPattern;
	valuePatternTitle.visible = shouldShow && isPattern;
	advancedOptions.visible = shouldShow;
}

saveSettings(dyn_string &exceptionInfo)
{
	bool isGood;
	string temp;
	int pvRangeType;
	float absMin, absMax;
	dyn_anytype configData;
	
 	if(!DPES_OK)
	{
		fwException_raise(exceptionInfo, \"ERROR\", getCatStr(\"fwConfigs\", \"PANEL_MIXEDORBADDPETYPES\"), \"\");
		return;		
	}

	okButton.enabled = FALSE;
	applyButton.enabled = FALSE;
	closeButton.enabled = FALSE;
	if(panelMode == MULTIPLE_DPES)
		fwOpenProgressBar(\"Configuration panel\", \"Saving configuration...\", 1);
	
	switch(pvRangeTypeSelector.text)
	{
		case PANEL_TEXT_NONE:
			pvRangeType = DPCONFIG_NONE;

			maxValue.text = \"\";
			minValue.text = \"\";
			valueSet.items = makeDynString();
			valuePattern.text = \"\";
		
			if(panelMode != OBJECT)
			{
				fwPvRange_deleteMultiple(DPE_LIST, exceptionInfo);
			}
			else
			{
				dpeConfigObject[fwPvRange_DPE_OBJECT_MIN_VALUE][1]			= 0;
				dpeConfigObject[fwPvRange_DPE_OBJECT_MAX_VALUE][1]			= 0;				
				dpeConfigObject[fwPvRange_DPE_OBJECT_NEGATE_RANGE][1]		= FALSE;
				dpeConfigObject[fwPvRange_DPE_OBJECT_IGNORE_OUTSIDE][1] = FALSE;
				dpeConfigObject[fwPvRange_DPE_OBJECT_INCLUSIVE_MIN][1]	= FALSE;
				dpeConfigObject[fwPvRange_DPE_OBJECT_INCLUSIVE_MAX][1]	= FALSE;
				fwGeneral_setGlobalValue($sDpeConfigObjectVarName, dpeConfigObject, exceptionInfo);
	//			DebugN(\"Modified \", dpeConfigObject);
			}
			break;
		case PANEL_TEXT_MINMAX:
			pvRangeType = DPCONFIG_MINMAX_PVSS_RANGECHECK;
			
			if(isDollarDefined(\"$fMin\"))
				absMin = getDollarValue(\"$fMin\");
			else 
				absMin = minFLOAT();
			if(isDollarDefined(\"$fMax\"))
				absMax = getDollarValue(\"$fMax\");
			else 
				absMax = maxFLOAT();
				
			temp = maxValue.text;
			fwConfigs_checkStringFormat(temp, DPE_TYPE, isGood, exceptionInfo);
			if(isGood)
				configData[fwPvRange_MAXIMUM_VALUE] = temp;
			else
				fwException_raise(exceptionInfo, \"ERROR\", \"Maximum PV range value is not valid\", \"\");
	
			temp = minValue.text;
			fwConfigs_checkStringFormat(temp, DPE_TYPE, isGood, exceptionInfo);
			if(isGood)
				configData[fwPvRange_MINIMUM_VALUE] = temp;
			else
				fwException_raise(exceptionInfo, \"ERROR\", \"Minimum PV range value is not valid\", \"\");
			
			configData[fwPvRange_INCLUSIVE_MINIMUM] = inclusiveMinSelector.state(0);
			configData[fwPvRange_INCLUSIVE_MAXIMUM] = inclusiveMaxSelector.state(0);
			configData[fwPvRange_NEGATE_RANGE] = advancedOptions.state(0);
			configData[fwPvRange_IGNORE_OUTSIDE] = advancedOptions.state(1);
			break;
		case PANEL_TEXT_SET:
			pvRangeType = DPCONFIG_SET_PVSS_RANGECHECK;

			configData[fwPvRange_VALUE_SET] = valueSet.items;
			configData[fwPvRange_NEGATE_RANGE] = advancedOptions.state(0);
			configData[fwPvRange_IGNORE_OUTSIDE] = advancedOptions.state(1);
			break;
		case PANEL_TEXT_PATTERN:
			pvRangeType = DPCONFIG_MATCH_PVSS_RANGECHECK;

			configData[fwPvRange_VALUE_PATTERN] = valuePattern.text;
			configData[fwPvRange_NEGATE_RANGE] = advancedOptions.state(0);
			configData[fwPvRange_IGNORE_OUTSIDE] = advancedOptions.state(1);
			break;
	}
			
	if(dynlen(exceptionInfo) > 0)
	{
		okButton.enabled = TRUE;
		applyButton.enabled = TRUE;
		closeButton.enabled = TRUE;
		if(panelMode == MULTIPLE_DPES)
			fwCloseProgressBar(\"Configuration failed\");
		return;		
	}
		
	if(pvRangeType != DPCONFIG_NONE)
	{
		if(panelMode != OBJECT)
		{
			fwPvRange_setObjectMultiple(DPE_LIST, pvRangeType, configData, exceptionInfo);
		}
		else
		{
			dpeConfigObject[fwPvRange_DPE_OBJECT_MIN_VALUE][1]			= configData[fwPvRange_INCLUSIVE_MINIMUM];
			dpeConfigObject[fwPvRange_DPE_OBJECT_MAX_VALUE][1]			= configData[fwPvRange_INCLUSIVE_MAXIMUM];				
			dpeConfigObject[fwPvRange_DPE_OBJECT_NEGATE_RANGE][1]		= configData[fwPvRange_NEGATE_RANGE];
			dpeConfigObject[fwPvRange_DPE_OBJECT_IGNORE_OUTSIDE][1] = configData[fwPvRange_IGNORE_OUTSIDE];
			dpeConfigObject[fwPvRange_DPE_OBJECT_INCLUSIVE_MIN][1]	= configData[fwPvRange_INCLUSIVE_MINIMUM];
			dpeConfigObject[fwPvRange_DPE_OBJECT_INCLUSIVE_MAX][1]	= configData[fwPvRange_INCLUSIVE_MAXIMUM];
			
			fwGeneral_setGlobalValue($sDpeConfigObjectVarName, dpeConfigObject, exceptionInfo);
	//			DebugN(\"Modified \", dpeConfigObject);
		}		
	}
	
	okButton.enabled = TRUE;
	applyButton.enabled = TRUE;
	closeButton.enabled = TRUE;
	if(panelMode == MULTIPLE_DPES)
		fwCloseProgressBar(\"Configuration complete\");
}" 0
 2
"CBRef""1"
"EClose"E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 2
"minValueTitle"
""
1 121 131 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
10 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 122 132 216 148
0 2 2 "s" 0 0 0 192 0 0  122 132
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 14 Minimum Value:
2 3
"maxValueTitle"
""
1 321 131 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 322 132 420 148
0 2 2 "s" 0 0 0 192 0 0  322 132
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 14 Maximum Value:
2 11
"Text3"
""
1 10 10 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
12 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 12 242 34
0 2 2 "s" 0 0 0 192 0 0  12 12
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-160-100-100-*-*-iso8859-1|-19,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 24 PVSS Range Configuration
2 22
"Text4"
""
1 255 131 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
13 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 55 128 77
0 2 0 "s" 0 0 0 64 0 0  12 55
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 11 DP Element:
2 35
"valuePatternTitle"
""
1 120 131 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
17 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 122 132 168 148
0 2 2 "s" 0 0 0 192 0 0  122 132
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 8 Pattern:
2 36
"valueSetTitle"
""
1 120 131 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
18 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 122 132 183 148
0 2 2 "s" 0 0 0 192 0 0  122 132
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 10 Value Set:
20 26
"inclusiveMinSelector"
""
1 210 180 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
6 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
208 178 282 202
1
T 
1
LANG:1 9 inclusive
 1
1
LANG:1 0 
 E  E  0 0 0 0 0
1
E E 
EE20 27
"inclusiveMaxSelector"
""
1 410 180 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
7 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
408 178 482 202
1
T 
1
LANG:1 9 inclusive
 1
1
LANG:1 0 
 E  E  0 0 0 0 0
1
E E 
EE13 21
"applyButton"
""
1 0 0 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
8 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
458 348 542 382
T 
1
LANG:1 5 Apply
"main()
{
	dyn_string exceptionInfo;

	saveSettings(exceptionInfo);
	if(dynlen(exceptionInfo) > 0)
		fwExceptionHandling_display(exceptionInfo);
}" 0
 E E "main()
{
	int x, y;

	if(isDollarDefined(\"$bHierarchyBrowser\"))
	{
		if(!$bHierarchyBrowser)
			closeButton.visible = TRUE;
		else
		{
			getValue(\"\", \"position\", x, y);
			this.position(x + 90,y);	
		}
	}
	else
		closeButton.visible = TRUE;
		
	this.visible = TRUE;	
}" 0

13 28
"closeButton"
""
1 1492 929 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
9 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
548 348 632 382
T 
1
LANG:1 5 Close
"main()
{
	PanelOff();
}" 0
 E E E
14 23
"elementNameField"
""
1 347 103 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
88 48 632 75
3 "s" 0 0 0 0 0 0 
E
E
E
13 25
"dpeDetails"
""
1 460 10 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
2 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
458 8 582 42
T 
1
LANG:1 15 Select Elements
"main()
{
	string errorString;
	dyn_string returnedDpeList, systems, exceptionInfo;
	dyn_float cancelOrOk;

	ChildPanelOnCentralModalReturn(\"fwConfigs/fwDpeSelector.pnl\", \"Choose Data Point Elements\",
									makeDynString(\"$dsAllDpes:\"+$sDpe, \"$dsIncludedDpes:\"+DPE_LIST, \"$sConfigType:\"+fwConfigs_PVSS_PV_RANGE),
									cancelOrOk, returnedDpeList);
	if(cancelOrOk[1] > 0.5)
	{
		if(DPE_LIST != returnedDpeList)
		{
			DPE_LIST = returnedDpeList;
			DPES_OK = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_PV_RANGE, DPE_TYPE, exceptionInfo, errorString);
			if(!DPES_OK)
				fwException_raise(exceptionInfo, \"ERROR\", errorString, \"\");

			_fwConfigs_getSystemsInDpeList(DPE_LIST, systems, exceptionInfo);

			if(dynlen(DPE_LIST)== 1)
				elementNameField.text(DPE_LIST[1]);
			else
			{
				if(dynlen(systems) == 1)
					elementNameField.text(\"Multiple Data Point Elements (from \" + systems[1] + \")\");
				else
					elementNameField.text(\"Multiple Data Point Elements (from multiple systems)\");
			}

			fwSetRangeFieldsFormat(exceptionInfo);

			okButton.enabled = DPES_OK;
			applyButton.enabled = DPES_OK;

			pvRangeTypeSelector.text = PANEL_TEXT_NONE;
			_fwDisplayAvailableTypes(exceptionInfo);
			_fwTogglePvRangeItems(DPCONFIG_NONE);
		}
	}	
}" 0
 E E E
14 1
"minValue"
""
1 118 150 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
4 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
118 148 281 175
3 "s" 0 0 0 2 0 0 
E
E
E
14 0
"maxValue"
""
1 318 150 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
5 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
318 148 482 172
3 "s" 0 0 0 2 0 0 
E
E
E
13 29
"okButton"
""
1 0 0 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
13 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
368 348 452 382
T 
1
LANG:1 2 OK
"main()
{
	dyn_string exceptionInfo;

	saveSettings(exceptionInfo);
	if(dynlen(exceptionInfo) > 0)
		fwExceptionHandling_display(exceptionInfo);
	else
		PanelOff();
}" 0
 E E "main()
{
	if(isDollarDefined(\"$bHierarchyBrowser\"))
	{
		if(!$bHierarchyBrowser)
			this.visible = TRUE;
	}
	else
		this.visible = TRUE;	
}
" 0

1 37 0 "" 0
0
20 31
"advancedOptions"
""
1 120 330 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
13 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
118 328 302 382
2
T 
1
LANG:1 18 Invert value range
 0
1
LANG:1 0 
 E  E  0 0 0 0 0
T 
1
LANG:1 27 Ignore values outside range
 0
1
LANG:1 0 
 E  E  0 0 0 0 0
2
E E E E 
EE22 32
"pvRangeTypeSelector"
""
1 10 90 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
14 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
8 88 142 115
1
1
LANG:1 4 None
 1
E
"main()
{
	bool status;
	dyn_string exceptionInfo;
	
	if(!DPES_OK)
	{
		this.text = PANEL_TEXT_NONE;
		
		fwException_raise(exceptionInfo, \"ERROR\", getCatStr(\"fwConfigs\", \"PANEL_MIXEDORBADDPETYPES\"), \"\");
		if(dynlen(exceptionInfo)>0)
			fwExceptionHandling_display(exceptionInfo);
		return;
	}

	switch(this.text)
	{
		case PANEL_TEXT_NONE:
			_fwTogglePvRangeItems(DPCONFIG_NONE);
			break;
		case PANEL_TEXT_MINMAX:
			_fwTogglePvRangeItems(DPCONFIG_MINMAX_PVSS_RANGECHECK);
			break;
		case PANEL_TEXT_SET:
			_fwTogglePvRangeItems(DPCONFIG_SET_PVSS_RANGECHECK);
			break;
		case PANEL_TEXT_PATTERN:
			_fwTogglePvRangeItems(DPCONFIG_MATCH_PVSS_RANGECHECK);
			break;
	}
}" 0

E
 0 0
17 33
"valueSet"
""
1 120 150 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
15 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
118 148 282 272
0
E
"main()
{
	valueSetItem.text = this.selectedText;
}" 0

E

3 1
14 34
"valuePattern"
""
1 120 150 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
16 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
118 148 282 175
3 "s" 0 0 0 0 0 0 
E
E
E
14 38
"valueSetItem"
""
1 120 280 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
18 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
118 278 282 305
3 "s" 0 0 0 0 0 0 
E
E
E
13 45
"valueSetBefore"
""
1 328 214 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
25 0 0 0 0 0
EE E
0
2
LANG:1 0 
LANG:0 0 
0
2
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
LANG:0 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
328 214 368 242
P 
13421721
"pictures/insertB_en.gif"
1
LANG:1 0 
"main()
{
  int            pos;
  bool           lang = (shapeExists(\"langedit\"))?(langedit.visible):false;
  string         s,format;
  anytype        value;
  dyn_string     list,ds,dsl;
  langString     ls;
  dyn_langString dls;

  getMultiValue(\"valueSetItem\",\"text\",value,
                \"valueSetItem\",\"format\",format,
                \"valueSet\",\"items\",list,
                \"valueSet\",\"selectedPos\",pos);
  if(pos<1) pos=1;
  if (!lang)
  {
    if (strpos(format,\"s]\")>0)
      format=\"%\"+substr(format,1,strpos(format,\"]\")-1);
    else
      format=\"%\"+substr(format,1,strpos(format,\",\")-1);
    if (strpos(value,\"#ERROR#\")==0) return;
    s=value;
    if (strpos(format,\"s\")<0 && strrtrim(strltrim(s))==\"\")
      return;
    dynInsertAt(list,s,pos);
    setValue(\"valueSet\",\"items\",list);
    setValue(\"valueSet\",\"selectedPos\",pos);
  }
  else
  {
    ds = langinput.items;
    ls = ds;
    ds = langliste.items;
    dls = dynString2dynLangString(ds);
    dynInsertAt(dls, ls, pos);
    ds = dynLangString2dynString(dls);
    langliste.items = ds;
    s = ls;
    dynInsertAt(list,s,pos);
    setValue(\"valueSet\",\"items\",list);
    setValue(\"valueSet\",\"selectedPos\",pos);
  }
}
" 0
 E E E
13 46
"valueSetDelete"
""
1 328 244 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
26 0 0 0 0 0
EE E
0
2
LANG:1 0 
LANG:0 0 
0
2
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
LANG:0 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
328 244 368 272
P 
13421721
"pictures/del_en.gif"
1
LANG:1 0 
"main()
{
  int            pos;
  bool           lang = (shapeExists(\"langedit\"))?(langedit.visible):false;
  string         s;
  dyn_string     list,ds,dsl;
  langString     ls;
  dyn_langString dls;

  getMultiValue(\"valueSetItem\",\"text\",s,
                \"valueSet\",\"items\",list,
                \"valueSet\",\"selectedPos\",pos);

  if ( pos < 1 ) return;

  if( lang )
  {
    ds = langinput.items;
    ls = ds;
    ds = langliste.items;
    dls = dynString2dynLangString(ds);
    dynRemove(dls,pos);
    ds = dynLangString2dynString(dls);
    langliste.items = ds;
    s = ls;
    list[pos] = s;
  }

  dynRemove(list,pos);
  if (pos>dynlen(list))
    pos--;
  if (pos>0)
  {
    setValue(\"valueSet\",\"items\",list);
    setValue(\"valueSet\",\"selectedPos\",pos);
    setValue(\"valueSetItem\",\"text\",list[pos]);
  }
  else
  {
    setMultiValue(\"valueSet\",\"items\",list,
                  \"valueSetItem\",\"text\",\"\");
  }
  setValue(\"valueSet\",\"items\",list);
  setValue(\"valueSet\",\"selectedPos\",pos);
}" 0
 E E E
13 47
"valueSetAfter"
""
1 288 214 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
27 0 0 0 0 0
EE E
0
2
LANG:1 0 
LANG:0 0 
0
2
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
LANG:0 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
288 214 328 242
P 
13421721
"pictures/insertA_en.gif"
1
LANG:1 0 
"main()
{
  int            pos;
  bool           lang = (shapeExists(\"langedit\"))?(langedit.visible):false;
  string         s,format;
  anytype        value;
  dyn_string     list,ds,dsl;
  langString     ls;
  dyn_langString dls;

  getMultiValue(\"valueSetItem\",\"text\",value,
                \"valueSetItem\",\"format\",format,
                \"valueSet\",\"items\",list,
                \"valueSet\",\"selectedPos\",pos);
  if(pos<1) pos=dynlen(list);
  if (!lang)
  {
    if (strpos(format,\"s]\")>0)
      format=\"%\"+substr(format,1,strpos(format,\"]\")-1);
    else
      format=\"%\"+substr(format,1,strpos(format,\",\")-1);
    if (strpos(value,\"#ERROR#\")==0) return;
    s=value;
    if (strpos(format,\"s\")<0 && strrtrim(strltrim(s))==\"\")
      return;
    dynInsertAt(list,s,pos+1);
    setValue(\"valueSet\",\"items\",list);
    setValue(\"valueSet\",\"selectedPos\",pos+1);
  }
  else
  {
    ds = langinput.items;
    ls = ds;
    ds = langliste.items;
    dls = dynString2dynLangString(ds);
    dynInsertAt(dls, ls, pos+1);
    ds = dynLangString2dynString(dls);
    langliste.items = ds;
    s = ls;
    dynInsertAt(list,s,pos+1);
    setValue(\"valueSet\",\"items\",list);
    setValue(\"valueSet\",\"selectedPos\",pos+1);
  }
}
" 0
 E E E
13 48
"valueSetModify"
""
1 288 244 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
28 0 0 0 0 0
EE E
0
2
LANG:1 0 
LANG:0 0 
0
2
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
LANG:0 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
288 244 328 272
P 
12632256
"pictures/ok_en.gif"
1
LANG:1 0 
"main()
{
  int            pos;
  bool           lang = (shapeExists(\"langedit\"))?(langedit.visible):false;
  string         s;
  langString     ls;
  dyn_string     list,ds,dsl;
  dyn_langString dls;

  getMultiValue(\"valueSetItem\",\"text\",s,
                \"valueSet\",\"items\",list,
                \"valueSet\",\"selectedPos\",pos);

  if ( pos < 1 ) return;

  if ( !lang )
  {
    list[pos]=s;
    setValue(\"valueSet\",\"items\",list);
    setValue(\"valueSet\",\"selectedPos\",pos);
  }
  else
  {
    ds = langinput.items;
    ls = ds;
    ds = langliste.items;
    dls = dynString2dynLangString(ds);
    dls[pos] = ls;
    ds = dynLangString2dynString(dls);
    langliste.items = ds;
    s = ls;
    list[pos] = s;
    setValue(\"valueSet\",\"items\",list);
    setValue(\"valueSet\",\"selectedPos\",pos);
  }
}" 0
 E E E
13 49
"valueSetEditor"
""
1 288 184 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
29 0 0 0 0 0
EE E
0
2
LANG:1 0 
LANG:0 0 
0
2
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
LANG:0 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
288 184 328 212
P 
14215660
"pictures/editor.xpm"
1
LANG:1 0 
"main()
{
  bool       ok;
  dyn_float	df;
  dyn_string list,sPara,ds;

  getMultiValue(\"valueSet\",\"items\",list);
  sPara[1]=paJoinString(list,\"\\n\"); 
  ChildPanelOnCentralReturn(\"para/nvTextEditor.pnl\",
							                 \"PV Range Value Set\",
							                 sPara, df, ds);
//DebugN(df);
  if (df[1] >= 1)
    setValue(\"valueSet\",\"items\",ds);
}
" 0
 E E E
13 50
"valueSetDeleteAll"
""
1 328 274 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
30 0 0 0 0 0
EE E
0
2
LANG:1 0 
LANG:0 0 
0
2
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
LANG:0 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
328 274 368 304
P 
13421721
"pictures/delAll_en.gif"
1
LANG:1 0 
"main()
{
  setMultiValue(\"valueSet\",\"items\",makeDynString(),
                \"valueSetItem\",\"text\",\"\");

  if ( shapeExists(\"langedit\") )
    setMultiValue(\"langliste\",\"items\",makeDynString(),
                  \"langinput\",\"items\",makeDynString());
}" 0
 E E E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 0 "Group2"
"objects\\fwGeneral\\fwHelpButton.pnl" 604 10 T 13 U  
1
"$sPanelRelativePath""fwConfigs/fwPvRangeConfig"
2 "Group2" 120 130 480 200
6 0 1 27 26 3 2
2 "Group3" 120 130 280 173
2 34 35
2 "Group6" 120 130 366 303
9 50 49 48 47 46 45 38 33 36
0