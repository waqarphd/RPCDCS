V 11
1
LANG:1 0 
PANEL,-1 -1 408 136 N "_3DFace" 2
"$sFilter"
"$sMode"
E E E E E 1 -1 -1 0  0 0
""0  1
E "void addRow(string name,string tableName, bool after=false)
{
  shape table = getShape(tableName);
  dyn_int diIndexes;
  int index;
  string oldName;
  bool added;
  getValue(tableName,\"getSelectedLines\",diIndexes);  
  if(table.lineCount()==0)
    after = false;
  if(!strlen(name)) 
    return;
  if(dynlen(diIndexes))
    index = diIndexes[1]+after;
  else
    index = table.lineCount()+after;

  table.insertLineN(index);
  table.cellValueRC(index,\"name\",name);
  
}

void modifyRow(string name,string tableName)
{
  shape table = getShape(tableName);
  dyn_int diIndexes;
  int index;
  string oldName;
  bool modified;
  getValue(tableName,\"getSelectedLines\",diIndexes);  
  if(dynlen(diIndexes) && strlen(name))
    index = diIndexes[1];
  else
    return;
  getValue(tableName,\"cellValueRC\",index,\"name\",oldName);  
  setValue(tableName,\"cellValueRC\",index,\"name\",name);  
}

deleteRow(string tableName, int index)
{
  shape table = getShape(tableName);
  string value = table.cellValueRC(index,\"name\");
  table.deleteLineN(index);
  table.deleteSelection(); 
}

deleteRows(string tableName)
{
  shape table = getShape(tableName);
  int i;
  dyn_int diIndexes;
  getValue(tableName,\"getSelectedLines\",diIndexes);
  for(i=1 ; i<=dynlen(diIndexes) ; i++)
    deleteRow(tableName, diIndexes[i]);
}

deleteAll(string tableName)
{
  shape table = getShape(tableName);
  setValue(tableName,\"deleteAllLines\");
}

" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
2 8
"PRIMITIVE_TEXT1"
""
1 20 10 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
      if(strlen($sFilter))
        this.text(\"Edit \"+$sMode+ \" \" + $sFilter);
      else
        this.text(\"Add new \"+$sMode);
}" 0
 E 0 1 1 2 1 E U  0 E 20 10 495 35
0 2 2 "0s" 0 0 0 64 0 0  20 10 1
1
LANG:1 26 Arial,14,-1,5,50,0,0,0,0,0
0 1
LANG:1 26 Add dp pattern for system 
13 14
"PUSH_BUTTON3"
""
1 290 100 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,10,-1,5,50,0,0,0,0,0
0  288 98 398 132

T 
1
LANG:1 6 Cancel
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_panelOff();
}

EP_panelOff()
{
  PanelOff();
}

// SimpleCtrlScript {EP_panelOff}
// Function {PanelOff}
// Panel {}
// Module {}
// SimpleCtrlScriptEnd {EP_panelOff}
" 0
 E E E
13 15
"cmOk"
""
1 150 100 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,10,-1,5,50,0,0,0,0,0
0  148 98 258 132

T 
1
LANG:1 2 Ok
"main()
{
  PanelOffReturn(makeDynFloat(1), makeDynString(ComboBoxNodes.text));
}" 0
 E E E
22 17
"ComboBoxNodes"
""
1 10 50 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 31 Add Plant and Loop device units

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  8 48 402 75
1
1
LANG:1 10 Loading...

1

"main()
{
	dyn_string devices, cleanedDevices, excp;
	int i, totDevs, namePos;
	string devName;
	
	//get the total number of devices
	fwTree_getAllNodes(devices,excp);//dpNames(\"*\", \"_FwTreeNode\");
	
	totDevs = dynlen(devices);
//         DebugN(\"Tot devices: \" + totDevs);
        
  for(i=1; i<=totDevs; i++)
	{
		if (strpos(devices[i],\"-Clipboard\")<1 )
		{
			devName = devices[i];
			if((fwFsm_isCU(devName,devName)))
				dynAppend(cleanedDevices,devName);
		}
	}

	this.deleteAllItems;
	this.items = cleanedDevices;
	totDevs = dynlen(cleanedDevices);
  if(totDevs>0)
  {
  	this.text = \"\";
	  this.enabled=true;
  }
  else
  {
    this.text = \"No nodes found in the FSM tree\";
    this.enabled=false;
    cmOk.enabled = false;
  }
           
	return;
//DebugN(devices);

}
" 0

"main()
{
    cmOk.enabled = (this.text !=\"\");
}" 0

E
 0 0
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
