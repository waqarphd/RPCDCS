V 11
1
LANG:1 17 tfNumberOfSystems
PANEL,-1 -1 780 650 N "_3DFace" 3
"$host"
"$sDpName"
"$system"
"main()
{
  int monitoring;
  
  while(1)
  {
    if(cbAutoRefresh.state(0))      
    {
      dpGet(fwSysOverview_PARAMETRIZATION + fwSysOverview_ENABLE_MONITORING, monitoring);
      if(monitoring == 1)
        updatePanel();
      
      else
        continue;
    }
        
    delay(sbRefresh.text());
  }
}" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "#uses \"fwSystemOverview/fwSystemOverview.ctl\"
#uses \"fwSystemOverview/fwSystemOverviewUi.ctl\"

updatePanel()
{
  dyn_string projDps, sysNames;
  string dbSystemName, dbHostName, projName, license;
  dyn_string hostNames;
  dyn_string exceptionInfo;
  string hostDpName;
  bool active;
  string alertActive;
  string dbProject;
  time timeStamp;
  
  
  int projStatus = 0, numTotal = 0, numBlocked = 0, numAbStopped = 0;
  int numSys = 0 , numProj = 0, projStopped = 0, projMismatched = 0, projNoPmon = 0;
  int managersTotal = 0, managersAbStopped = 0, managersBlocked = 0;
  int numHosts = 0, licenseExpires = 0;

  int refreshInterval;
  int lastUpdate;
  
  dpGet(fwSysOverview_PARAMETRIZATION + fwSysOverview_REFRESH_RATE, refreshInterval);

  if(isDollarDefined(\"$system\") && $system != \"\")
  {
//DebugN(isDollarDefined(\"$system\") && $system );    
    dyn_string ex;
    string systemDp;
    fwSysOverview_getSystemDp($system, $host, systemDp, ex);
    fwSysOverview_getSystemProjects(systemDp, projDps, ex);
  }
  else if(isDollarDefined(\"$sDpName\"))  
  {
    string node = fwFMC_getNodeName($sDpName);
    projDps = dpNames(getSystemName() + \"SystemOverview/\" + node + \"/*\",\"FwSystemOverviewProject\");
  }
  else  
    projDps = dpNames(getSystemName() + \"SystemOverview*\",\"FwSystemOverviewProject\");
  
  if(dynlen(projDps) != projSummaryTable.lineCount())
    projSummaryTable.deleteAllLines();
      
  for (int i=1; i<=dynlen(projDps); i++)
  {
    dpGet(projDps[i] + fwSysOverview_PROJECT_CURRENT_PROJECT_NAME, projName,
          projDps[i] + fwSysOverview_PROJECT_SYSTEM, dbSystemName,
          projDps[i] + fwSysOverview_STATE, projStatus, 
          projDps[i] + fwSystemOverview_TOTAL_MANAGERS_NUMBER, numTotal,
          projDps[i] + fwSystemOverview_NUMBER_MANAGERS_BLOCKED, numBlocked,
          projDps[i] + fwSystemOverview_NUMBER_MANAGERS_ERROR, numAbStopped,
          projDps[i] + fwSysOverview_STATE + \":_alert_hdl.._active\", active,
          projDps[i] + fwSysOverview_PROJECT_NAME, dbProject
          ,projDps[i] + fwSysOverview_STATE + \":_original.._stime\", timeStamp
          );

    if(active == false)
      alertActive = \"NO\";
    else
      alertActive = \"YES\";
    
    fwSysOverview_getProjectPc(projDps[i], hostDpName, exceptionInfo);
    if(dynlen(exceptionInfo)){continue;}
    
    fwSysOverview_getHostDb(hostDpName, dbHostName, exceptionInfo);
    if(dynlen(exceptionInfo)){continue;}
    
    fwSysOverview_getLicenseStatus(dbSystemName, license, exceptionInfo);
    if(dynlen(exceptionInfo)){continue;}    

    managersTotal += numTotal;
    managersBlocked += numBlocked;
    managersAbStopped += numAbStopped;
           
     
      setValue(\"projSummaryTable\", \"updateLine\",1, \"dp\", projDps[i],
               \"system\",dbSystemName,
               \"host\", dbHostName,
               \"project\",projName,
               \"projStatus\", fwSysOverview_getStrFromState(projStatus),
               \"alerts\", alertActive,
               \"license\", license,
               \"totalManagers\",numTotal,
               \"blockedManagers\",numBlocked,
               \"errManagers\",numAbStopped,
               \"dp\", projDps[i],
               \"dbProject\", dbProject
               ,\"timeStamp\", timeStamp
//               ,\"timeStamp\", formatTime(\"%H:%M:%S\",timeStamp)
               );
    
    if(dbHostName != \"\")
      dynAppend(hostNames, dbHostName);
    
    if(projStatus != fwSysOverview_RUNNING)
    {
//      setValue(\"projSummaryTable\", \"cellBackColRC\", i-1, \"projStatus\", \"FwStateAttention3\");
      
      if(projStatus == fwSysOverview_STOPPED_NORMAL)   // state 0
        ++projStopped;
      else if(projStatus == fwSysOverview_PROJNAME_MISMATCH)  // state 12
      {
        setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"projStatus\", \"FwStateAttention2\");
        ++projMismatched; 
      } 
      else if (projStatus == fwSysOverview_PMON_NO_RESPONSE  )// state 13 
      {
        setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"projStatus\", \"FwStateAttention3\");          
        ++projNoPmon; 
      }
      else if(projStatus == fwSysOverview_BLOCKED) //state 4
      {
        setValue(\"projSummaryTable\", \"cellBackColRC\",i-1, \"projStatus\", \"FwStateAttention1\");  
        setValue(\"projSummaryTable\", \"cellBackColRC\", i-1, \"blockedManagers\", \"FwStateAttention1\");
      } 
      else if(projStatus == fwSysOverview_STOPPED_ABNORMAL) //state 10
      {
        setValue(\"projSummaryTable\", \"cellBackColRC\",i-1, \"projStatus\", \"FwStateAttention2\"); 
        setValue(\"projSummaryTable\", \"cellBackColRC\", i-1, \"errManagers\", \"FwStateAttention2\");
      }
      else if(projStatus == fwSysOverview_MONITORING_STOPPED) //state 3
        setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"projStatus\", \"FwEquipmentDisabled\");
    }
    else
      setValue(\"projSummaryTable\", \"cellBackColRC\", i-1, \"projStatus\", \"_Window\");
        
     
    dynAppend (sysNames, dbSystemName);
   
    if(projStatus != fwSysOverview_MONITORING_STOPPED)    
    {          
      if (license == \"License expires\")
      {
        setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"license\", \"FwStateAttention3\");
        ++licenseExpires;
      }
      else if (license == \"N/A: Not Connected\")
        setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"license\", \"FwStateAttention2\");
      else
        setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"license\", \"_Window\");
    }
    else
      setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"license\", \"FwEquipmentDisabled\"); 
    
 /*   
    if(numBlocked)
      setValue(\"projSummaryTable\", \"cellBackColRC\", i-1, \"blockedManagers\", \"FwStateAttention1\");
    else
      setValue(\"projSummaryTable\", \"cellBackColRC\", i-1, \"blockedManagers\", \"_Window\");
    
    if(numAbStopped)
      setValue(\"projSummaryTable\", \"cellBackColRC\", i-1, \"errManagers\", \"FwStateAttention2\");
    else
      setValue(\"projSummaryTable\", \"cellBackColRC\", i-1, \"errManagers\", \"_Window\");
*/       
    if(alertActive == \"NO\")
      setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"alerts\", \"FwStateAttention3\");
    else
      setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"alerts\", \"_Window\");

    lastUpdate = getCurrentTime() - timeStamp;

    if(lastUpdate > 2*refreshInterval)
    {
      setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"timeStamp\", \"FwStateAttention3\");
    }
    else
      setValue(\"projSummaryTable\",\"cellBackColRC\",i-1,\"timeStamp\", \"_Window\");
    

  }
  
  numSys=dynUnique(sysNames);
 
 // Display summary informations: 
  tfNumberOfSystems.text = numSys; 
  tfNumberOfProjects.text = dynlen(projDps);  
  tfNumberOfProjectsStopped.text = projStopped;   
  tfNumberOfProjectsMismatched.text = projMismatched; 

  dynUnique(hostNames);
  tfNumberOfHosts.text = dynlen(hostNames);

    
  if (projStopped > 0)
  {
    tfNumberOfProjectsStopped.backCol(\"FwStateAttention3\");
  }
  else
      tfNumberOfProjectsStopped.backCol(\"_Window\");
  
  if (projMismatched > 0)
  {
    tfNumberOfProjectsMismatched.backCol(\"FwStateAttention2\");
  }
  else
    tfNumberOfProjectsMismatched.backCol(\"_Window\");

    
  tfNumberOfProjectsNoPmon.text = projNoPmon;
  if (projNoPmon > 0)
  {
    tfNumberOfProjectsNoPmon.backCol(\"FwStateAttention3\");
  }
  else
    tfNumberOfProjectsNoPmon.backCol(\"_Window\");

  tfTotalNumberManagers.text = managersTotal;
  tflNumberBlockedManagers.text = managersBlocked;  
  tflNumberAbStoppedManagers.text = managersAbStopped;
  tfLicense.text = licenseExpires;
  
  if (managersBlocked > 0)
  {
    tflNumberBlockedManagers.backCol(\"FwStateAttention1\");
  }  
  else
    tflNumberBlockedManagers.backCol(\"_Window\");

  if (managersAbStopped > 0)
  {
    tflNumberAbStoppedManagers.backCol(\"FwStateAttention2\");
  }
  else
    tflNumberAbStoppedManagers.backCol = \"_Window\";
  
  if ( licenseExpires > 0)
  {
    tfLicense.backCol(\"FwStateAttention3\");
  }
  else
    tfLicense.backCol = \"_Window\";
        
//tfNumberOfProjectsNoPmon
  
  projSummaryTable.removeSelectLines(0);
} 
    












" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 1
"projSummaryTable"
""
1 6.66133814775094e-15 19 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main(int row, string column)
{
  dyn_int rows;
  string host, dbProject;
  bool activate;
  dyn_string exceptionInfo;
  dyn_string menu;
  int answer = 0;
  string sys, projectDp;
  dyn_int ds;
  dyn_float df;
  dyn_string sysNames; 
//  dyn_int archvieActiveStates, alertActiveStates, mixedStates;
  int type;
  int isArchiveActive = 0, isAlertActive = 0, mixedStates = 0;
  string archiveClass;
  
//  this.getSelectedLines(rows);
  getValue (\"\", \"getSelectedLines\", rows);
  
  if(dynlen(rows) == 1)
  {
    getValue(\"projSummaryTable\", \"cellValueRC\", rows[1],\"host\", host);
    getValue(\"projSummaryTable\", \"cellValueRC\", rows[1],\"dbProject\", dbProject);
    getValue(\"projSummaryTable\", \"cellValueRC\", rows[1],\"dp\", projectDp);

    dpGet(projectDp + fwSysOverview_STATE + \":_archive.._type\", type);
    if(type != 0)
      dpGet(projectDp + fwSysOverview_STATE + \":_archive.._archive\", isArchiveActive);

    dpGet(projectDp + fwSysOverview_STATE + \":_alert_hdl.._active\", isAlertActive);

  }
  else
    mixedStates = 1;
  
  if(fwSysOverviewUi_gAccessControl > 0)
  {
    menu = makeDynString (\"PUSH_BUTTON, Open Console, 10, \" + (1-mixedStates),
                          \"PUSH_BUTTON, Show Info, 11, \" + (1-mixedStates),
                          \"PUSH_BUTTON, Show Components, 12, \" + (1-mixedStates),
                          \"PUSH_BUTTON, Display Statistics, 3, 1\",
                          \"SEPARATOR\", 
                          \"CASCADE_BUTTON, Alerts, 1\",
                          \"Alerts\", 
                          \"PUSH_BUTTON, Enable,1,\" + (1 - isAlertActive),
                          \"PUSH_BUTTON, Disable,2,\" + (isAlertActive + mixedStates)
                          );
  }
  else
  {
    menu = makeDynString (\"PUSH_BUTTON, Open Console, 10, \" + (1-mixedStates),
                          \"PUSH_BUTTON, Show Info, 11, \" + (1-mixedStates),
                          \"PUSH_BUTTON, Show Components, 12, \" + (1-mixedStates),
                          \"PUSH_BUTTON, Display Statistics, 3, 1\",
                          \"SEPARATOR\", 
                          \"CASCADE_BUTTON, Alerts, 1\",
                          \"Alerts\", 
                          \"PUSH_BUTTON, Enable,1,0\",
                          \"PUSH_BUTTON, Disable,2,0\"
                          );
  }
  
  popupMenu(menu, answer);
   
  
  if(answer > 0)
  {
    for(int i=1; i<=dynlen(rows); i++)
    {
      getValue(\"projSummaryTable\", \"cellValueRC\", rows[i],\"host\", host);
      getValue(\"projSummaryTable\", \"cellValueRC\", rows[i],\"dbProject\", dbProject);
      getValue(\"projSummaryTable\", \"cellValueRC\", rows[i],\"system\", sys);
      getValue(\"projSummaryTable\", \"cellValueRC\", rows[1],\"dp\", projectDp);
      
      if(answer ==10) //show project console
      {
        string user, pwd;
        fwInstallation_getPmonInfo(user, pwd);
        int port = 4999;
        dyn_mixed projectData;
        fwSysOverview_getProjAccessData(projectDp, projectData);
        ChildPanelOnCentralModal(\"fwSystemOverview/fwSystemOverview_managersTable.pnl\", 
                                 dbProject + \" : Console\", 
                                 makeDynString(\"$host:\" + host, \"$project:\" + dbProject, \"$userName:\" + projectData[fwSysOverview_PROJECT_PMON_USER_IDX], 
                                               \"$userPassword:\" + projectData[fwSysOverview_PROJECT_PMON_PASS_IDX], 
                                               \"$port:\" + projectData[fwSysOverview_PROJECT_PMON_NUM_IDX], 
                                               \"$sDpName:\"+$sDpName));
      }
      else if(answer == 11)//show project info
      {
        ChildPanelOnCentralModal(\"fwConfigurationDBSystemInformation/fwConfigurationDBSystemInformation_projectProperties.pnl\", dbProject + \" : Project Info\", makeDynString(\"$project:\" + dbProject, \"$hostname:\" + host));
      }
      else if(answer == 12)//show project components
      {
        ChildPanelOnCentralModal(\"fwConfigurationDBSystemInformation/fwConfigurationDBSystemInformation_projectManager.pnl\", dbProject + \" : Project Info\", makeDynString(\"$project:\" + dbProject, \"$hostname:\" + host));
      }
      else if(answer == 1)//enable project alert
      {  
        fwSysOverview_activateProjectAlert(projectDp, true, exceptionInfo);
          if(dynlen(exceptionInfo)){continue;}    
      }
      else if(answer == 2) //disable project alert
      {
        fwSysOverview_activateProjectAlert(projectDp, false, exceptionInfo);
          if(dynlen(exceptionInfo)){continue;}    
      }
      else if(answer == 3)  // to open system statisctics
          dynAppend(sysNames, sys);
/*      
      else if(answer == 4) //enable/start project archiving
      {        
        fwSysOverview_getAchiveClass(archiveClass);

        if(archiveClass == \"\")
        {
          ChildPanelOnCentral(\"vision/MessageInfo1\", \"ERROR: Archive Class not defined\", makeDynString(\"Default Archive Class is not defined and should be configured via Configuration panel.\"));
          return;
        }        
        fwSysOverview_startArchivingProjectState(projectDp, archiveClass, exceptionInfo); // bool archiveManagers = true
        if(dynlen(exceptionInfo)){continue;} 
      }
      
      else if(answer == 5) //disable/stop project archiving
      {        
       fwSysOverview_stopArchivingProjectState(projectDp, exceptionInfo);
       if(dynlen(exceptionInfo)){continue;} 
      }
*/
    }

    if(dynlen(sysNames) > 0)
      ChildPanelOnCentralReturn(\"fwSystemOverview/fwSystemOverview_statistics.pnl\", \"Statistics\", makeDynString(\"$systemName:\" + sysNames), df, ds);

  }
      
}

      


" 0
 "main(int row, string column)
{
  dyn_string sysName;
  dyn_float df;
  dyn_string ds;

  getValue(\"\", \"cellValueRC\", row, \"system\", sysName);

  if(sysName != \"\")
    ChildPanelOnCentralReturn(\"fwSystemOverview/fwSystemOverview_statistics.pnl\", \"System Summary: \" + sysName, makeDynString(\"$systemName:\" + sysName), df, ds);
/*    

  dyn_int rows;
  string sys;
  
  getValue (\"\", \"getSelectedLines\", rows);
  
  for(int i=1; i<=dynlen(rows); i++)
  {
    getValue(\"\", \"cellValueRC\", rows[i], \"system\", sys);
    dynAppend(sysName, sys);
  }
  
      ChildPanelOnCentralReturn(\"fwSystemOverview/fwSystemOverview_statistics.pnl\", \"System Summary: \" + sysName, makeDynString(\"$systemName:\" + sysName), df, ds);
*/  
}" 0

3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  -2 17 782 431
"main()
{
  this.tableMode(TABLE_SELECT_MULTIPLE);
  this.selectByClick(TABLE_SELECT_LINE);
}" 0
E 1 0 1 12 0 "system" 7 1 0 "s" 1
LANG:1 6 System
E
1
LANG:1 26 Double click for more info

72 "host" 7 1 0 "s" 1
LANG:1 8 Hostname
E
1
LANG:1 34 Double click for System Statistics

75 "dbProject" 5 0 0 "s" 1
LANG:1 9 dbProject
E
1
LANG:1 34 Double click for System Statistics

60 "project" 11 1 0 "s" 1
LANG:1 7 Project
E
1
LANG:1 34 Double click for System Statistics

110 "projStatus" 13 1 0 "s" 1
LANG:1 14 Project Status
E
1
LANG:1 34 Double click for System Statistics

130 "alerts" 3 1 0 "s" 1
LANG:1 6 Alerts
E
1
LANG:1 34 Double click for System Statistics

35 "license" 6 1 0 "s" 1
LANG:1 7 License
E
1
LANG:1 34 Double click for System Statistics

70 "totalManagers" 5 1 0 "s" 1
LANG:1 10 Total Num.
E
1
LANG:1 34 Double click for System Statistics

59 "blockedManagers" 4 1 0 "s" 1
LANG:1 7 Blocked
E
1
LANG:1 34 Double click for System Statistics

50 "errManagers" 5 1 0 "s" 1
LANG:1 9 Abn.Stop.
E
1
LANG:1 34 Double click for System Statistics

55 "timeStamp" 10 1 0 "s" 1
LANG:1 11 Last Update
E
1
LANG:1 0 

104 "dp" 10 0 0 "s" 1
LANG:1 2 dp
E
1
LANG:1 34 Double click for System Statistics

105 
14 14 10 10
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 0 2 1 1 7
1 0
30 2
"FRAME1"
""
1 30 373 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
5 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1.13037117651355 0 1.29251700680273 -33.9111352954065 -22.1088435374188 0 E 30 373 721 521
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 7 Summary
6 12
"RECTANGLE2"
""
1 190 480 E E E 1 E 1 E N {0,0,0} E N "_Button" E E
 E E
15 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 2 1 2 1 E 0.6223664708989889 0 1 244.0416477706995 -9 1 E 400 10 665 30
2 13
"PRIMITIVE_TEXT4"
""
1 550 4 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
16 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 550 4 603 19
0 2 2 "0s" 0 0 0 192 0 0  550 4 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 8 Managers
2 15
"txMsg"
""
1 90 440 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  txMsg.text = \"(Values are refreshed every \" + sbRefresh.text() + \" seconds)\";
}" 0
 E 0 1 1 2 1 E U  1 E 90 440 390 460
0 2 2 "0s" 0 0 0 64 0 0  90 440 2
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 3 ...
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 0 
20 16
"cbAutoRefresh"
""
1 7.105427357601e-15 439 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
22 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  -2 437 82 461
1
T 
1
LANG:1 12 Auto refresh

1 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
E"main(int button, int state)
{
  if(state)
  {
    txMsg.foreCol(\"black\");
//    txMsg.text = \"(Values are refreshed every 10 seconds)\";
    txMsg.text = \"(Values are refreshed every \" + sbRefresh.text() + \" seconds)\";
    sbRefresh.enabled(true);
  }
    else
  {
    txMsg.foreCol(\"disturbanceCamWentUna\");
    txMsg.text = \"(Autorefresh is disabled)\";
    sbRefresh.enabled(false);
  }
}" 0
2 20
"PRIMITIVE_TEXT5"
""
1 22 500.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
28 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 22 500.999999999996 130 516
0 2 2 "0s" 0 0 0 192 0 0  22 500.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 18 Number of Systems:
2 22
"PRIMITIVE_TEXT6"
""
1 222 500.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
32 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 222 500.999999999996 327 516
0 2 2 "0s" 0 0 0 192 0 0  222 500.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 19 Number of Projects:
2 23
"PRIMITIVE_TEXT7"
""
1 20 558.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
34 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 20 558.999999999996 116 574
0 2 2 "0s" 0 0 0 192 0 0  20 558.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 18 Projects Stopped :
2 24
"PRIMITIVE_TEXT8"
""
1 20 588.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
36 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 20 588.999999999996 166 604
0 2 2 "0s" 0 0 0 192 0 0  20 588.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 25 Project Name Mismatches :
2 28
"PRIMITIVE_TEXT9"
""
1 -310 680.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
44 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 20 618.999999999996 234 634
0 2 2 "0s" 0 0 0 192 0 0  20 618.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 39 Projects where Pmon is not responding :
2 30
"PRIMITIVE_TEXT10"
""
1 592 500.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
48 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 592 500.999999999996 707 516
0 2 2 "0s" 0 0 0 192 0 0  592 500.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 19 Number of Managers:
2 31
"PRIMITIVE_TEXT11"
""
1 472 560.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
50 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 472 560.999999999996 577 576
0 2 2 "0s" 0 0 0 192 0 0  472 560.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 18 Managers Blocked :
2 32
"PRIMITIVE_TEXT12"
""
1 472 590.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
52 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 472 590.999999999996 633 606
0 2 2 "0s" 0 0 0 192 0 0  472 590.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 27 Managers Abnormaly Stoped :
14 41
"tfNumberOfProjectsStopped"
""
1 260 555.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
67 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  258 554 292 577
2 "0s" 0 0 0 0 0 -1  E E E
14 42
"tfNumberOfProjectsMismatched"
""
1 260 585.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
69 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  258 584 292 607
2 "0s" 0 0 0 0 0 -1  E E E
14 43
"tfNumberOfProjectsNoPmon"
""
1 260 615.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
71 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  258 614 292 637
2 "0s" 0 0 0 0 0 -1  E E E
14 45
"tflNumberBlockedManagers"
""
1 670 556 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
75 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  668 554 702 577
2 "0s" 0 0 0 0 0 -1  E E E
14 46
"tflNumberAbStoppedManagers"
""
1 670 586 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
77 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  668 584 702 607
2 "0s" 0 0 0 0 0 -1  E E E
30 47
"FRAME2"
""
1 20 583 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
78 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1.2063492063492 0 0.934579439252337 -14.1269841269842 -4.85981308411595 0 E 20 583 651 691
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 6 Erorrs
14 57
"tfNumberOfSystems"
""
1 130 498.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
97 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  128 497 162 520
2 "0s" 0 0 0 0 0 -1  E E E
14 58
"tfNumberOfProjects"
""
1 327 500.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
99 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  325 499 359 522
2 "0s" 0 0 0 0 0 -1  E E E
14 59
"tfTotalNumberManagers"
""
1 710 499.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
101 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  708 498 742 521
2 "0s" 0 0 0 0 0 -1  E E E
30 60
"FRAME4"
""
1 20 583 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
103 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1.2063492063492 0 0.476635514018692 -14.1269841269841 201.1214953271 0 E 20 583 651 691
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 10 Statistics
2 61
"PRIMITIVE_TEXT13"
""
1 412 500.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
105 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 412 500.999999999996 505 516
0 2 2 "0s" 0 0 0 192 0 0  412 500.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 16 Number of Hosts:
14 62
"tfNumberOfHosts"
""
1 517 500.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
107 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  515 499 549 522
2 "0s" 0 0 0 0 0 -1  E E E
2 63
"PRIMITIVE_TEXT14"
""
1 472 620.999999999996 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
109 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 472 620.999999999996 608 636
0 2 2 "0s" 0 0 0 192 0 0  472 620.999999999996 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 26 Licenses about to expire :
14 64
"tfLicense"
""
1 670 616 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
111 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  668 614 702 637
2 "0s" 0 0 0 0 0 -1  E E E
21 65
"sbRefresh"
""
1 700 440 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
112 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  698 438 742 462
0

E
"main()
{
  txMsg.text = \"(Values are refreshed every \" + sbRefresh.text() + \" seconds)\";
}" 0

E

N 0 100 1 10 1 1
2 67
"PRIMITIVE_TEXT15"
""
1 750 444 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
114 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 750 444 771 459
0 2 2 "0s" 0 0 0 192 0 0  750 444 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 4 sec.
2 68
"PRIMITIVE_TEXT16"
""
1 183.0400013752946 426 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
115 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 0.974358974358974 0 1 -14.102564102564 -1 1 E 620 444 732 459
0 2 2 "0s" 0 0 0 192 0 0  620 444 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 22 Table refresh interval
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
