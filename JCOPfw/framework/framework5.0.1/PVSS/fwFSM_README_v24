30-11-2006 Release Notes for FwFsm v24r15
    - DIM v16r8
    - SMI++ v29r3
    - PVSS 3.0 Official Release and above

Bug Fixes/Improvements:
    - Some bugs prevented it to work on PVSS 3.6 on Linux - fixed.
      *********************** READY FOR PVSS 3.6 *********************************


21-11-2006 Release Notes for FwFsm v24r14
    - DIM v16r8
    - SMI++ v29r3
    - PVSS 3.0 Official Release and above

Bug Fixes/Improvements:
    - Same as v24r13, but:
      *********************** READY FOR PVSS 3.6 *********************************


13-11-2006 Release Notes for FwFsm v24r13
    - DIM v16r8
    - SMI++ v29r3
    - PVSS 3.0 Official Release

Bug Fixes:
    - Version v24r12 included the wrong version of SMI++


31-10-2006 Release Notes for FwFsm v24r12
    - DIM v16r8
    - SMI++ v29r2
    - PVSS 3.0 Official Release

Bug Fixes:
    - For some reason setting summary alerts in a DP with MANY elements is very very slow.
      Improoved it a little bit, but not fixed and not really understood...
    - Setting access rights using fwFsmTree_setNodeAccessControl() didn't work across 
      distributed systems: fixed the bug in fwTree_setNodeUserData().
    - When "Taking" children across distributed systems, the enable/disable flag was not
      set properly: fixed.
    - Since the Access control allows "log out", When a user logged out he could still
      operate the system - fixed.
    - Fixed a bug in the DU Configure Device States" panel. Only 3 DP elements were taken 
      into account even after clicking on "More".

Improvements:
    Major Change:
    - Changed the Take/Release/Include. etc. mechanism: 
        - It used to be done by the top level node to all nodes underneath recursively 
          via PVSS.
        - Now It is done by each CU "in parallel". The information on OWNER and EXCLUSIVITY
          is passed down by SMI++ as Parameters.

    Minor changes:
    - Created a new "Advanced Settings" option for the "Editor mode" of the FSM top level
      it allows:
	- to correct the FSM installation directory when copying projects, so that all
          FSM executables are correctly found.
        - To correct the system name in the FSM tree datapoints when the system name
          changes (for any reason).
        - To set/reset an "AutoStart flag": when set, all FSM trees will automatically
          be started at project startup.
        - To define wether "STart/Restart ALL" applies only to the local system (default)
          or to all connected systems.
    - Added the function fwCU_getIncludedChildren()
    - Added the possibility of adding references to CUs in the same domain (only works
      for CUs, not LUs or DUs).
    - Moved a lot of functionality from the object buttons to the fwFsmUi.ctl lib, so that 
      users can replace/modify the standard operation buttons, by using:
	- fwFsmUi_connectObjButton()
        - fwFsmUi_sendObjButtonAction()
        - fwFsmUi_connectLock()
        - fwFsmUi_changeMode()
    - Added the possibility to find the differences between two FSM types, eithet in the
      project or in different project. Can also compare all types between two projects in 
      one go. It uses Windiff on Windows and xwindiff on Linux.


28-06-2006 Release Notes for FwFsm v24r11
    - DIM v16r6
    - SMI++ v29r2
    - PVSS 3.0 Official Release

Bug Fixes:
    - fwFsmTree_setNodeLabel() did not always work - Fixed.
      Note: fwFsmTree_generateTreeNode() has to be done after changing node labels or panels
            from a script.

Improvements:
    - The behaviour of Removing "Only Children" of a node has changed:
      now the children are recursively removed in order not to leave "orphan" nodes in the
      "Clipboard"
    - "Remove" actions are now also possible for the "Clipboard" node, to for example remove
       all nodes in the Clipboard.

22-06-2006 Release Notes for FwFsm v24r10
    - DIM v16r6
    - SMI++ v29r2
    - PVSS 3.0 Official Release

Bug Fixes:
    - Fixed a bug that prevented user panels in sub directories to work properly.
    - Fixed a but that prevented the FSM to work properly without installing the Access Control
      Component.
    - The FSM component didn't work if it was installed on a network disk (dfs). Fixed: corrected all 
      the paths in the tool to use correct Windows separators (for Windows only)
    - Corrected fwFsmUi_init() so that FSM object widgets can now be used on any user panel (using
      for example fwFsmUi_addObj(...)) 

Improvements:
    - Speeded up slightly the panels (wizards) for configuring devices states and actions.
    - The "visibility" state of an action can now be changed without needing to click on the
      "Add" button. It gets changed directly (saved when clicking on "OK" or "Apply").
    - LUs didn't have the "Operator Control" flag available on their "Settings" panel
      like DUs. This option has been added.
    - Modified the Installation Procedure:
      Now the first time "fwFsmSrvr" starts after the installation of a new version (when upgrading
      from a previous version), it will be the unique responsible for upgrading any needed
      datapoint values to the new version and for performing a "Generate ALL". Before this was
      done either by the DEN or by the "fwFsmSrvr" and this could cause problems.
    - Added the possibility of "Disabling" a DU or Obj without propagating the yellow square
      up the hierarchy (for more permanently disabled devices).
        - The Propagate/Don't Propagate flag is available on the Enable/Disable panel
          on right click but only for "Experts" if Access Control installed and Enabled.
	- Had to change the DP element from "bool" to "int". As a consequence the information
          on wether a device/obj was disabled will be lost when installing the new version.
      All devices/objs will be "Enabled" at the postInstall phase.


16-05-2006 Release Notes for FwFsm v24r9
    - DIM v16r6
    - SMI++ v29r2
    - PVSS 3.0 Official Release

Bug Fixes:
    - PVSS00smi would sometimes publish a negative system number - Fixed.
    - When disabling references the yellow square was not propagated - Fixed.
    - When creating a CU with many LUs the message "Too many If's waiting" was printed
      and smiSM died - Fixed (new version of SMI++ v29r2)
    - fwFsmTree_isNode didn't return a value, fixed.
    - There was a bug opening user panels in remote systems, fixed.
    - When changing the DIM_DNS_NODE the running CUs were not stopped properly (it
      was trying to use the new DNS to stop them instead of the old one). Fixed.
    - When changing DIM_DNS_NODE one can now also add a port number:
	 DIM_DNS_NODE[:DIM_DNS_PORT]
    - The "progress" information panel when starting CU Trees used to disappear before 
      the start-up procedure finished. Fixed (or at least better now).
    - Fixed a bug in the SML code generation for "if"s inside "if"s.

Improvements:
    - The bottom message box is now proportinal to the panel size (in width).
    - PVSS00smi is now started with a slightly higher priority to optimize startup speed. 
    - Added a new function in the fwCU library:
	- string fwCU_getParent(int &type, string node)
    - Added the possibility of having some more user callbacks (see release notes of v24r8):
	- fwFsmUser_nodeTaken(string node)
	- fwFsmUser_nodeReleased(string node)
	- fwFsmTree_nodeReleasedAll(string node)
    - Added the possibility of reporting messages from a user specific panel:
	- fwFsmUi_report(string msg)

    - Implemented Access Control as follows:
	- The user can now define two access levels per Control Unit in the DEN 
	  ("FSM TAB"/"Editor mode"/"Access Control")
		- One to operate the CU and its children
		- Another one to be able to send "Expert only" actions
	- Once Access Control is defined and "Enabled" in Editor Mode, in Navigator Mode:
	    - Operation panels will check if the current Logged in user has the correct 
	      privileges to "Operate" a certain CU. If he/she does he/she can:
		- Take and Release the CU, etc.
		- Send commands to the objects in this CU
	    - Check if the current Logged in user has the correct privileges to do
	      "Expert only" actions, in which case any such actions will be "enabled".
	      Otherwise they are disabled (greyed out).
	- In order to declare an action as "Expert Only" the Object type Editor (under
	  "Create/Configure FSM Object Types" has been modified to allow an action to be:
		- "Visible"
		- "Not Visible"
		= "Experts Only"
        - If the logged in user changes, any "taken" trees are released and the privilege
          changes are repercuted in all standard objects in all open panels.

	- Two new functions are available for setting/getting access rights when creating a tree:
		- fwFsmTree_setNodeAccessControl(string node, string access)
		- fwFsmTree_getNodeAccessControl(string node, string &access)
	- Three new functions are available for users developping "User Operation Panels":
		- fwFsmUi_init(string node, string obj)
		  Is called by default by the standard fwUi.pnl (since this version)
		- fwFsmUi_getOperatorAccess(string node, string obj)
		- fwFsmUi_getExpertAccess(string node, string obj)
        - Added a User Login widget in the standard operation panels (if the Access Control 
          component is installed). Using function:
                - fwFsmUi_addUserLogin(int x, int y)
    - Added a new function for importing FSM types from remote systems:
	- fwFsmTree_importType(string type, string sys)
    - DUs used to keep the old sate when their CU died. Now they go to "DEAD" like all
      other objects.

    - Detailed documentation for all new functions available on the WEB


10-03-2006 Release Notes for FwFsm v24r8
    - DIM v16r2
    - SMI++ v28r1
    - PVSS 3.0 Official Release

Bug Fixes & Improvements:
    - When upgrading FSM versions Device Units would show as Logical Units - fixed.
    - Added the possibility of calling user callback functions when CUs are Excluded/Included or 
      DUs are Enabled/Disabled.
      These callbacks can be added in the file scripts/fwFsmUser.ctl and should be called:
	- fwFsmUser_nodeIncluded(string parent, string child)
	- fwFsmUser_nodeExcluded(string parent, string child)
	- fwFsmUser_nodeDisabled(string parent, string child)
	- fwFsmUser_nodeEnabled(string parent, string child)
    - Added also the possibility of defining operation panels to have a Fixed size.
      Available from the Top level "Settings" in Editor Mode. (For ATLAS)
    - There were some errors when starting the Alarm Screen - fixed.
    - Linked with DIM_v15r2 to try to avoid "Connection Refused" Errors when starting or 
      stopping CU trees.

28-02-2006 Release Notes for FwFsm v24r7
    - DIM v16r1
    - SMI++ v28r1
    - PVSS 3.0 Official Release

Bug Fixes:
    - Fixed the handling of external FSM commands for the flag /EXCLUSIVE="yes" or "no"
    - Fixed a bug in the "generate FSM" behaviour. Used to give errors when executed from
      a script after creating a tree (Objects were not generated in the right order).
    - Fixed a few bugs in the wizard for the definition of DU state scripts

02-02-2006 Release Notes for FwFsm v24r6
    - DIM v16r0
    - SMI++ v28r1
    - PVSS 3.0 Official Release

Bug Fixes:
    - Fixed a bug in fwFsmTree_generateAll() and fwFsmTree_generateFSMTypes()
    - Changing the default panel for an object type didn't work if the panel was in a sub-directory-
      fixed.
Improvement:
    - Now allows DUs to be operated from an external script if an empty state or action script is
      entered in the Device Type editor.
      Two new functions fwDU_setState() and fwDU_connectCommand can be used by the external ctrl script. 


05-01-2006 Release Notes for FwFsm v24r5
    - DIM v16r0
    - SMI++ v28r1
    - PVSS 3.0 Official Release

Bug Fixes:
    - Setting a user panel for tree nodes did not work properly - fixed.
    - References to nodes in other systems were not working correctly (in particular when renaming or 
      updating references), due to the introduction of Logical Units - fixed.
    - FwAio now works correctly.
    - Could not change the FSM type for DUs - fixed. (But to be used with care).
 
Improovements:
    - Alarm Handling
      Alarm handling is now based on summary alerts (plus a few work arounds since alert summaries
      don't work across distributed systems). 
    - Big Changes in the FwCU library, please consult WEB doc.
    - Created (made available) fwFsmUi library, please consult WEB doc. 


23-9-2005 Release Notes for FwFsm v24r4
    - DIM v15r21
    - SMI++ v28r1
    - PVSS 3.0 Official Release

Bug Fixes:
    - fwCU_getChildren did not work properly with the optional parameter lunit - fixed
    - fwCU_getObjDp did not return the system name for a DU - fixed.
    - When close and reopening the DU scripts panel, the first value of an if was replaced by the && 
      of the condition - fixed. 


01-9-2005 Release Notes for FwFsm v24r3
    - DIM v15r21
    - SMI++ v28r1
    - PVSS 3.0 Official Release

Bug Fixes:
    - The Incomplete flag (yellow square) didn't propagate properly for LUs - fixed.
    - The sub-systems bellow a disabled LU didn't weren't represented as disabled - fixed
    - The invalid option in DU scripts was not treated properly - fixed.
    - Fixed the handling of references when renaming or removing nodes, it had been destroyed when
      adding LUs.
    - Take/Include used to "jump" over excluded sub-systems - fixed.
    - Adding a reference to a node in another system would make the node be "disabled", with no
      possibility of enabling it - fixed.
    - Removing a node at the Root of the Tree didn't refresh the tree - fixed.
Improovements: 
    - added function fwFsmTree_isNode() to the fwFsmTree library
    - Majority's can now have a configurable WARNING level.
    - Object/Action parameters are now available when configuring DU scripts.
    - The "do" instruction wizard now also recognizes Action Parameters.
    - PVSS00smi now starts up only nodes and device units from "Started" Tree Nodes, it used to start
      all objects in the system.
    - "Share" and "Exclusive" since not recomended have been moved to the bottom of the list.


15-8-2005 Release Notes for FwFsm v24r2

Linked with:
    - DIM v15r20
    - SMI++ v28r1
    - PVSS 3.0 Official Release

Bug Fixes:
    - The wizard for "when" instructions didn't allow proper selection of majorities,
      fixed.
    - The Settings for "Operator control" had stopped working, fixed.
    - It was still possible to add a CU to an LU, fixed.
    - It is now possible to reorder children for any node and
    - The main operation panel will show the children in the order chosen on the 
      EditorNavigator
    - Operation panels were sending some commands directly to the FSM, now they
      pass them to fwFsmSrvr (running locally) to execute them.
    - Now recognizes the FW types FwAio and FwDio
    - Clicking "OK" on an unchanged "Settings" panel would change visibility and
      operation flags, fixed.
    - Some objects would sometimes come up in state "No link". 
      Fixed (in SMI++ and PVSS00smi).

02-8-2005 Release Notes for FwFsm v24r1

Linked with:
    - DIM v15r19
    - SMI++ v27r2
    - PVSS 3.0 Official Release

Improvements:
    - FSM Tree Nodes can now be of the following types:
	CU - Control Unit: 
		- Can contain any type of children
		- Can be Included, Excluded, etc and be taken in stand-alone mode
		- corresponds to one smiSM process

	LU - Logical Unit:
		- Can contain children, but not of type CU
		- Can be Enabled/Disabled (can not run in stand-alone)
		- Corresponds to an object within an smiSM

	Obj - Logical Object:
		- A Local object with no children
		- Can be Enabled/Disabled (can not run in stand-alone)
		- Basically a Logical Unit without children

	DU - Device Unit
		- A tree leave corresponding to a "real" device in PVSS
		- Can be Enabled/Disabled (can not run in stand-alone)
		- Behaviour defined via PVSS scripts (instead of SML code)
 
	Reason:
	An smiSM process can be quite heavy, and users tend to create many CUs,
	So a Logical Unit can be seen as a light weigth Control Unit to be used at
	the bottom levels of a Tree (just above the DUs).

    - The node "Settings" panel of the EditorNavigator can be used to modify the type
      of a node, from CU to LU or vice-versa.

    - One single Ctrl script per System to handle all Device Units 
      (in previous versions there was one per CU, so it used too much memory)

      	Drawback: 
	PVSS doesn't allow dynamic reloading of libraries (at the moment), 
	so when modifying a device unit script it is necessary to "Stop ALL" and
	restart the (sub)tree for the new scripts to be taken into account.

    - User defined labels, panels and visibility (also DU base types) are now stored 
      in the treeNodes so that an FSM component can be exported by exporting with the 
      ascii manager the instances of DP types: _FwFsmObjectType and _FwTreeNode 
      (and FwDevMajority if any majorities defined).  

    - Changes to libraries:
	- fwFsmTree new Functions:
		- fwFsmTree_addMajorityNode
		- fwFsmTree_removeNode
		- fwFsmTree_setNodeLabel
		- fwFsmTree_setNodePanel
		- fwFsmTree_setNodeVisibility

	- fwCU new functions:
		- fwCU_view
		- fwCU_enableObj
		- fwCU_disableObj
		- fwCU_getChildren
		- fwCU_getObjDp
	- fwCU changed functions:
	  	- fwCU_connectState and fwCU_connectObjState:	
		  The callback parameters are now the parameters passed when calling the
		  "connect" routines, instead of the dp name.
		- fwCU_disconnectState and fwCU_disconnectObjState:
		  Have one parametre less (the callback function name).
		- fwCU_getIncludedTreeDevices:
		  Can accept a new optional parameter: a Logical Unit
		- fwCU_getChildren:
		  returns also the type of children (CU, DU, etc.) and it replaces
		  all previous getChildrenXXX functions.

    Note: the main operations panel: fwUi.pnl has changed sligthly (to accomodate 
	for LUs). So if users have their own main panel, they should adopt similar 
	changes 

08-7-2005 Release Notes for FwFsm v23r15

Linked with:
    - DIM v15r19
    - SMI++ v27r2
    - PVSS 3.0 Official Release

Fixes:
    - Replaced the executable of PVSS00smi, it was not exiting anymore when issuing
      a "Stop All" command - fixed.

30-6-2005 Release Notes for FwFsm v23r14

Linked with:
    - DIM v15r19
    - SMI++ v27r2
    - PVSS 3.0 Official Release

Improvements:
    - Optimized the operation panels:
      The states and possible actions for each object type are picked up at startup
      (not at every state change)
    - Allows for lowercase letters in FSM names (states and actions).
    - Includes the new "stay_in_state" directive for when clauses
      (not from the wizard, has to be edited by hand)
    - New Partition mode: LockedOut
      To avoid an excluded CU to be automatically included by mistake.
    - Fixed a bug wish prevented correctly setting the main Operation panel
      for a full FSM tree.
    - Fixed a bug that prevented FSM User panels to be stored anywhere else
      than the project path. Now they can be in any of the paths in the config 
      file.

21-3-2005 Release Notes for FwFsm v23r13

Linked with:
    - DIM v15r4
    - SMI++ v24r2
    - PVSS 3.0 Official Release

Improvements:
    - Added a new set of functions to retrieve the hierarchy nodes and the FSM
      types in the fwCU library.
    - The indication that devices were disabled down in the hierarchy (a yellow
      box around the control unit lock) was not working properly - fixed.


16-3-2005 Release Notes for FwFsm v23r12

Linked with:
    - DIM v15r4
    - SMI++ v24r2
    - PVSS 3.0 Official Release

Improvements:
    - Fixed a bug introduced in v23r11 by which in same cases the DP name passed
      to a user panel for a device unit (as $2) contained twice the system name.
    - Fixed a bug which prevented, in some cases, modifying the settings of a 
      device unit (like user panel name or visibility).
    - The two bugs above appeared when a device unit was added to the FSM from 
      the Hardware view but it also existed in a logical view. Another side effect
      of this problem was that the default label of a device unit added from the
      HW view was the logical name of the device.
    - In order to prevent all these problems, devices added from the HW view will
      be created internally with the HW name instead of the logical name (if they
      had one) as previously.
    - A user panel associated to a device unit was overwritten by a "Generate"
      FSM command - fixed.
    - Some order was added in general to the user panel features:
      - A user panel can be specified per CU or DU type (by default the name of
        this panel is: <type_name>.pnl
      - A user panel can also be specified individualy for a DU or CU.
      - When opening a panel, the induvidual user panel if it exists is open
        otherwise the type panel is open if it exists.
      - Changing the user panel for the type will not affect the individual panel 
        settings.
      - In order to remove an individual panel, an empty panel string should be
        given. This will revert the user panel back to the type panel.
    - Added to fwFsmTree library functions for starting and stopping FSM processes.
    - The visibility state of children of a certain DU was not taken into account
      when calculating the operations panel size - fixed.    
 

3-3-2005 Release Notes for FwFsm v23r11

Linked with:
    - DIM v15r4
    - SMI++ v24r2
    - PVSS 3.0 Official Release

Improvements:
    - Now it is possible to add as device units datapoint elements (in the past
      only top-level datapoints). This create a "logical view" of the DP element.
      To be used with care.
    - Created a new library of functions: fwFsmTree
      Allows a user to dynamically create FSM Trees.
 
7-2-2005 Release Notes for FwFsm v23r10

Linked with:
    - DIM v15r4
    - SMI++ v24r2
    - PVSS 3.0 Official Release

Improvements:
    - Fixed a bug when "Taking" a tree, the command was not correctly propagated
      down the hierarchy
    - Some minor changes on CU and DU type configuration panels:
	- Now can change the order of states also for DUs
	- The DU "Simple Config" no longer accepts an end-state 
	  (it was confusing for the users)
    - Operation panels can now show the same ordering as given in the Device 
      Editor Navigator. Before the ordering was always: local objects, then CUs 
      and finally DUs.
    - Fixed a bug that did not allow creating Object types with a name starting by
      the name of a device unit type (based type).

4-2-2005 Release Notes for FwFsm v23r9

Linked with:
    - DIM v15r4
    - SMI++ v24r2
    - PVSS 3.0 Official Release

Improvements:
    - Fixed a bug which would generate an endless loop when adding CUs from another
      system
    - Fixed a bug in the Majority panel for Linux

31-1-2005 Release Notes for FwFsm v23r8

Linked with:
    - DIM v15r4
    - SMI++ v24r2
    - PVSS 3.0 Official Release

Improvements:
    - Fixed a bug in the latest version related to the starting up of DU scripts.
      Now instead of a ctrl script per system, there will be one per Control
      Unit (if it has at least one DU).
    - Fixed a bug in the automatic FSM generation when adding several CUs at the
      same time.
    - Modified the standard Majority object (FwDevMajority) to accept also positive
      logic and to take into account the Disabled/Enabled state of the Devices or 
      Objects.
    - Added a print button in the "Overview" panel for an object/DU type.
    - The Device script executed by a DU to calculate a new state, would always
      provoque a state change (even if to the same state). Now the user can check
      (using fwDU_getState(...)) what the current state is and if he doesn't want
      to trigger a state change he/she can return fwState = "".
      This can be usefull for efficiency reasons and also to not re-trigger when
      conditions.
    - Fixed a bug in FwFSM which coud provoke an endless loop when generating FSMs


25-11-2004 Release Notes for FwFsm v23r7

Linked with:
    - DIM v15r4
    - SMI++ v24r2
    - PVSS 3.0 Official Release

Improvements:
    - Added a standard Majority object: FwDevMajority
      (can be added from the Add Object button)
    - Fixed a bug opening user panels on distributed systems:
	now the hardware device name including the system name is passed as $2
    - Got rid of the CMD processes
    - Modified the ctrl stript that implements the FSM for DUs, now only the DUs 
      of the started domains get to run. 
      (Before all of them were restarted everytime)
    - Removed a series of prints from smiSM and PVSS00smi


04-11-2004 Release Notes For FwFSM v23r6:

Linked with:
    - DIM v15r1
    - SMI++ v23r1
    - PVSS 3.0 Official Release

Improvements:
    - Changed the tree display in order to make it faster, it now selectively
      adds nodes only when adding/removing or expanding/collapsing the tree.
    - Also the automatic FSM generation is now selective, only re-generates
      the necessary CUs
    - Fixed a bug on the starting up of device units. It would not work
      properly for big numbers of DUs

26-10-2004 Release Notes For FwFSM v23r5:

Linked with:
    - DIM v15r1
    - SMI++ v23r1
    - PVSS 3.0 Official Release

Improvements:
    - The fact that one or more devices are disabled is now propagated
      through the hierarchy panels.
	- So excluded domains became orange
	- and disabled devices are now yellow
    - Some prints were removed in particular the "dim_send_command" ones.
    - "Exclude" will no longer propagate down the hierarchy, i.e:
	- When a CU is excluded, only this one is cut-off from the tree
	- Its children will stay included, so that the control logic will
	  stay valid.
	- On the other hand the ownership still propagates, i.e. all 
	  children of an excluded CU will have no owner (until the CU
	  is "Taken" again).
    - Changed "Return" into "Release" (also in fwCU library)
    - Included "ReleaseAll" and "excludeAll" (also in fwCU)
    - Fixed finally the installation for Linux, no need to define OS or 
      OSTYPE.
    - Fixed a bug that made the PVSS event manager loop and take all the 
      memory, this had two causes:
	- smiSM was sometimes looping and sending more messages than 
          needed - fixed.
        - PVSS00smi was doing one of the dpSets outside the main thread
	  which if it happened at the same time as another dpSet could
	  cause a currupted message to be sent to the EV manager - fixed.
    - Fixed the FSM Alarm panel to use new AES version.
    - Automatically adds fwFSMSrvr and the DeviceEditorNavigator to the
      console
    - Fixed a limitation on DNS and on PVSS00smi that couldn't handle more
      than 32 CUs on Windows

Linked with:
    - DIM v15r0
    - SMI++ v23r0
    - PVSS 3.0 Official Release

Improvements:
    - The tree panels for editor and navigator views of the same tree
      are now synchronized, when the user expands or collapses a node
      the same operation takes place in the other view.
      This affects the FSM tree and the Trending tree
    - Fixed a bug in the tree library, when a node was renamed it left
      some ghost nodes in the clipboard
    - The user panels for FSM operation receive as parameters the control
      unit name and the object/device name. The device name is now the
      hardware name (i.e. the datapoint name) and not the logical name,
      as was the case in the previous version by mistake.
    - There was a bug generating SML code for objects with no children,
      fixed.
    - When changing a penel name in an object/device type this was not
      taken into account by the actual instances. fixed.
    - The control manager which runs the device unit's scripts is now
      started without an explicit manager number.
    - Now a device/object Type can not be removed if there are instances
      of this type.
    - Fixed a bug in the Device Unit Type scripts wizard, dp element types
      were changed to boolean by mistake.
    - If in a distributed system one of the systems in the FSM is down
      this is now reported in the message window  

Release Notes For FwFSM v23r3:

Linked with:
    - DIM v14r7
    - SMI++ v20r1
    - PVSS 3.0 Official Release

Major Changes:
    - The Tree structure has changed.
	- Trees now have a Top level node for each tree with a clipboard
	- Trees can contain several nodes with the same name.
	- Tree nodes can contain user defined data
      	- The Tree library has changed accordingly.
      	- Generic Tree display panels (in fwTreeDisplay) are available
	  to add, remove, rename or reorder nodes.
      	- A generic tree display main panel is also available as a reference
	  panel (fwTreeDisplay/fwTree.pnl) 
    - Allow users to define their own FSM display look.
	- Several calls available in scripts/libs/fwFsmUi.ctl
	- Can be used by modifying panels/fwFSMuser/fwUi.pnl
Other Improvements:
      - The environment variable "OSTYPE" is now used instead of "OS"
	to check if running on Linux.
      - When adding devices from "Logical view", if the logical name is
	changed to point to another HW channel, only a "Restart" of the
	FSM is needed (No need to Regenerate). 
      - The Start/Stop/Restart was improoved to not leave any processes
	running.
      - When deleting nodes with children the children go to the clipboard
	instead of staying around as ghosts.
      - Import DU/CU type from file also parses parameters. 
      - DU labels now only contain the name after the "/".
      - If the PVSS system name changes, The FSM Tree will be automatically
	updated when restarting the fwDeviceEditorNavigator. 
