V 12
1
LANG:1 8 (NoName)
PANEL,-1 -1 670 450 N "_3DFace" 2
"$bHierarchyBrowser"
"$sDpName"
"main()
{
	dyn_bool canHaveDefaults;
	dyn_string exceptionInfo;
	
	Table1.tableMode(TABLE_SELECT_MULTIPLE); 
	Table1.selectByClick(TABLE_SELECT_LINE);
	
	initializeTable(\"\");
	
	fwDevice_canHaveDefaults(makeDynString($sDpName), canHaveDefaults, exceptionInfo);
	
	if(!canHaveDefaults[fwDEVICE_DEFAULT_CONFIGS])
	{
		apply.visible = FALSE;
		applyAll.visible = FALSE;
	}
}" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "
// Constants for accesing the columns in the tables
int CONFIG_COLUMN		= 1;
int ELEMENT_COLUMN		= 2;
int DIRECTION_COLUMN	= 3;
int ITEM_COLUMN			= 4;
int MODE_COLUMN			= 5;

updateRow(string table, int row, string dpe)
{
	int configType;
	
	dpGet(dpe + \":_address.._type\", configType);					

	if(configType == DPCONFIG_NONE)
		setValue(table, \"cellValueRC\", row, \"config\", \"N\");
	else
		setValue(table, \"cellValueRC\", row, \"config\", \"Y\");
			
// 	setValue(table, \"cellValueRC\", row, \"set\", \" \");		
}

configureElementAddress(int xpos, string columnName, string value)
{
	dyn_float returnedValues;
	dyn_string exceptionInfo, returnedText;

	if (columnName == \"element\")
	{
		string panelName = \"fwConfigs/fwPeriphAddressPopup.pnl\";

		if(getPath(PANELS_REL_PATH, panelName) == \"\")
		{
			fwException_raise(exceptionInfo, \"WARNING\", \"The panel \\\"\" + panelName + \"\\\" could not be found\", \"\");
			fwExceptionHandling_display(exceptionInfo);
			return;
		}
	
		ChildPanelOnCentralModalReturn(	panelName,
										\"Peripheral Address Configuration for \" + $sDpName + value,
										makeDynString(	\"$sDpName:\" + $sDpName,
														\"$sDpe:\" + $sDpName + value,
														\"$dsAddressTypes:\"),
										returnedValues, 
										returnedText);
									
		updateRow(\"\", xpos, $sDpName + value);
	}
}

enableButtons(bool enabled)
{
	apply.enabled(enabled);
	applyAll.enabled(enabled);	
}

// Set the address for the selected dpes (or all dpes)
setAddress(string whichLines)
{
	int k, itemColumn;
	string definitionDp;
	dyn_int lines;
	dyn_float df;
	dyn_string exceptionInfo, selectedRow, addressParam, items, dpes, line;

	enableButtons(FALSE);

	// get which lines to work on 	
	if(whichLines == fwDevice_ADDRESS_DPES_ALL)
	{
		for(k = 1; k <= Table1.lineCount(); k++)
		{
			lines[k] = k - 1;
		}	
	}
	else
	{
		lines = Table1.getSelectedLines();
	}
	
	// if no lines were selected raise an exception an return
	if(dynlen(lines) < 1)
	{
		fwException_raise(	exceptionInfo, 
							\"WARNING\", 
							\"Select at least one element.\",
							\"\");
		fwExceptionHandling_display(exceptionInfo);
		enableButtons(TRUE);
		return;
	}
	
	// get list of selected dpes	
	for(k = 1; k <= dynlen(lines); k++)
	{
		line = Table1.getLineN(lines[k]);
		dpes[k] = line[ELEMENT_COLUMN];
	}	
	
//	DebugN(dpes, lines);
	
	ChildPanelOnCentralModalReturn(	\"fwDevice/fwDeviceAddressCommonSettings.pnl\",
									\"Choose the address common settings for all elements\",
									makeDynString(\"$sDpName:\" + $sDpName),
									df, addressParam);
//	DebugN(\"addressParam \", addressParam);
									
	// check if operation was cancelled
	if(dynlen(addressParam) == 0)
	{
		enableButtons(TRUE);
		return;
	}
	
	fwOpenProgressBar(\"Address configuration\", \"Setting addresses...\", 1, 10);
	
	fwDevice_setAddress($sDpName, addressParam, exceptionInfo, addressParam[fwDevice_ADDRESS_ROOT_NAME], dpes);
	
	// update table information
	for(k = 1; k <= dynlen(lines); k++)
	{
		updateRow(\"Table1\", lines[k], $sDpName + dpes[k]);	
	}

	enableButtons(TRUE);

	if(dynlen(exceptionInfo) > 0)
	{
		fwCloseProgressBar(\"There were problems setting the addresses.\");
		fwExceptionHandling_display(exceptionInfo);
	}
	else
	{
		fwCloseProgressBar(\"Addresses configured successfully.\");
	}
}

initializeTable(string addressType)
{
	int i, configType;
	string config, deviceModel, definitionDp, label;
	dyn_bool canHave, canHaveDefaults;
	dyn_int modes;
	dyn_string elements, addressParameters, exceptionInfo;

	fwDevice_canHaveDefaults(makeDynString($sDpName), canHaveDefaults, exceptionInfo);
	fwDevice_getDefinitionDp(makeDynString($sDpName), definitionDp, exceptionInfo);
//	DebugN(\"DefinitionDp =  \" + definitionDp);

	if(canHaveDefaults[fwDEVICE_DEFAULT_CONFIGS])
	{
		fwDevice_getModel(makeDynString($sDpName), deviceModel, exceptionInfo);
		fwDevice_getAddressDefaultParams(dpTypeName($sDpName), addressParameters, exceptionInfo, deviceModel);
		
		dpGet(definitionDp + \".configuration.address.\" + addressParameters[fwDevice_ADDRESS_TYPE] + \".direction\", modes);
	}
		
	dpGet(definitionDp + \".properties.dpes\", elements,	
			definitionDp + \".configuration.address.canHave\", canHave);

	Table1.deleteAllLines();	
	
	for (i = 1; i <= dynlen(elements); i++)
	{
		if(canHave[i])
		{
			dpGet($sDpName + elements[i] + \":_address.._type\", configType);

			if(configType == DPCONFIG_NONE)
				config = \"N\";
			else
				config = \"Y\";
						
			if(dynlen(modes) < i)
				modes[i] = fwDevice_DPCONFIG_NONE;
			
			fwDevice_getAddressModeLabel(modes[i], label, exceptionInfo);
			
			Table1.appendLine(	\"config\", config, 
								\"element\", elements[i],    
								\"direction\", label);
		}
	}
	
	Table1.lineVisible(0);
	
	enableButtons(TRUE);
}
" 0
 2
"CBRef" "1"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 100
"title"
""
1 10 18 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
49 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 12 201 34
0 2 0 "0s" 0 0 0 192 0 0  12 12 1
1
LANG:1 26 Arial,-1,19,5,40,0,0,0,0,0
0 1
LANG:1 21 Address Configuration
2 207
"dpNameTitle"
""
1 33 90 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
152 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 27 42 69 58
0 2 0 "0s" 0 0 0 192 0 0  27 42 1
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0 1
LANG:1 7 Device:
13 29
"applyAll"
""
1 534 383 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  532 381 661 409

T 
1
LANG:1 13 Configure all
"main()
{
	setAddress(fwDevice_ADDRESS_DPES_ALL);
}" 0
 E E E
13 189
"apply"
""
1 1001 687 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
128 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  532 349 661 377

T 
1
LANG:1 18 Configure selected
"
main()
{
	setAddress(\"\");	
}" 0
 E E E
25 203
"Table1"
""
1 25 95 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
139 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  23 93 527 432
E"main(int xpos, string columnName, string value)
{
//	DebugN(\"Column command\");
	configureElementAddress(xpos, columnName, value);
}" 0
 1 0 1 9 1 "config" 2 1 0 "s" 1
LANG:1 4 Conf
E
1
LANG:1 0 

38 "element" 31 1 0 "s" 1
LANG:1 7 Element
E
1
LANG:1 0 

350 "direction" 6 1 0 "s" 1
LANG:1 9 Direction
E
1
LANG:1 0 

80 "item" 22 0 0 "s" 1
LANG:1 4 Item
E
1
LANG:1 0 

250 "mode" 22 0 0 "s" 1
LANG:1 4 mode
E
1
LANG:1 0 

250 "OPC items" 22 0 0 "s" 1
LANG:1 9 OPC items
E
1
LANG:1 0 

250 "DIM items" 22 0 0 "s" 1
LANG:1 9 DIM items
E
1
LANG:1 0 

250 "DIP items" 22 0 0 "s" 1
LANG:1 9 DIP items
E
1
LANG:1 0 

250 "MODBUS items" 22 0 0 "s" 1
LANG:1 12 MODBUS items
E
1
LANG:1 0 

250 
22 22 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0 0 1 1 1 7
1 0
13 205
"Close"
""
1 534 415 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
140 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  532 413 661 441

T 
1
LANG:1 5 Close
"main()
{
	PanelOff();
}
" 0
 E E "main()
{
	if(isDollarDefined(\"$bHierarchyBrowser\"))
	{
		if($bHierarchyBrowser)
		{
			this.visible = FALSE;
		}
		else
		{
			this.visible = TRUE;
		}
	}
}" 0

1 209 13 "" 0
0
14 208
"dpname"
""
1 70 40 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
153 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  68 38 662 65
3 "0s" 0 0 0 0 0 -1  E "main()
{
	this.text = $sDpName;
	this.editable = FALSE;
}" 0
 E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 13 "" -1
"objects\\fwGeneral\\fwHelpButton.pnl" 370 20 T 151 1 0 1 263 -10
1
"$sPanelRelativePath""fwDevice/fwDeviceAddress"
0
