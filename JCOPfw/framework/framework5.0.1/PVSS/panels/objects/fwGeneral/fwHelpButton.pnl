V 11
1
LANG:1 8 (NoName)
PANEL,-1 -1 112 43 N "_3DFace" 1
"$sPanelRelativePath"
E E E E E 1 0 0 0  10 9
""0  1
E "bool goodPanelName = TRUE;
string panelPath;" 0
 2
"CBRef" "1"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
13 0
"Button1"
""
1 10 9 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  8 7 38 35

P 
13160660
"pictures/help_2.xpm"
1
LANG:1 0 
"main()
{
	int replaced;
	string 	componentName, path, tempPanelPath, helpFile, browserCommand, pathStart;
	dyn_string aux, exceptionInfo;
	
//	DebugN(\"The good path is \" + panelPath);
	
	if(!goodPanelName)
	{
		fwException_raise(	exceptionInfo,
							\"ERROR\",
							\"Open panel name doesn't match with PVSS database. Try opening the panel again.\",
							\"\");
		fwExceptionHandling_display(exceptionInfo);
		return;
	}
	
	// Get component name. We assume panels are inside a directory
	// named after the component name
	strreplace(panelPath, \"\\\\\", \"/\");
	aux = strsplit(panelPath, \"/\");
	componentName = aux[1];
//	DebugN(panelPath, componentName);
	
	// Remove extension if given
	if(strpos(panelPath, \".pnl\") >= 0)
	{
		tempPanelPath = substr(panelPath, 0, strpos(panelPath, \".pnl\"));
	}
	else
	{
		tempPanelPath = panelPath;
	}
	
	// try to find the help file associated with the panel
	helpFile = tempPanelPath + \".html\";
//	DebugN(\"helpFile \" + helpFile + \" tempPanelPath \" + tempPanelPath + \" componentName \" + componentName);
	path = getPath(HELP_REL_PATH, componentName + \"/panels/\" + helpFile);
	if(path == \"\")
	{		
		helpFile = tempPanelPath + \".htm\";
//		DebugN(\"helpFile \" + helpFile);
		path = getPath(HELP_REL_PATH, componentName + \"/panels/\" + helpFile);
//	DebugN(componentName + \"/panels/\" + helpFile);
		if(path == \"\")
		{
			fwException_raise(	exceptionInfo,
								\"ERROR\",
								\"Could not find the help file associated with the current panel\",
								\"\");
			fwExceptionHandling_display(exceptionInfo);
			return;
		}
	}
	
//	DebugN(\"Final help path \" + path);
	// if path leads to remote system, slashes have to be changed in order to avoid http-request in browser
  pathStart = substr(path, 0, 2);
  if(pathStart == \"//\") 
  {
    strreplace(path, \"/\", \"\\\\\");
  }
  
	fwOpenProgressBar(\"Help\", \"Opening help file...\", 1);
	// If there were no exceptions, then display the help
	if(_WIN32)
	{
		dpGet(\"fwGeneral.help.helpBrowserCommandWindows\", browserCommand);
		replaced = strreplace(browserCommand, \"$1\", path);
		if(replaced == 0)
			browserCommand = browserCommand + \" \" + path;
//		system(\"start iexplore \" + path + \" &\");
		system(browserCommand);
	}
	else
	{
		dpGet(\"fwGeneral.help.helpBrowserCommandLinux\", browserCommand);
		replaced = strreplace(browserCommand, \"$1\", path);
		if(replaced == 0)
			browserCommand = browserCommand + \" \" + path;
		system(browserCommand);
//		system(\"start iexplore \" + path + \" &\");
	}
	fwCloseProgressBar();
}	" 0
 E E "main()
{
	time rootPanelPathTime, childPanelPathTime;
	unsigned managerNumber = myManNum();
	string rootPanelPath, childPanelPath, rootPanelName, childPanelName, panelName;
	
	
	if(isDollarDefined(\"$sPanelRelativePath\"))
	{
		panelPath = $sPanelRelativePath;
	}
	
	if(panelPath == \"\")
	{
		dpGet(	\"_Ui_\" + managerNumber + \".RootPanelOrigOn.FileName\", rootPanelPath,
				\"_Ui_\" + managerNumber + \".RootPanelOrigOn.FileName:_original.._stime\", rootPanelPathTime,
				\"_Ui_\" + managerNumber + \".RootPanelOrigOn.PanelName\", rootPanelName,
				\"_Ui_\" + managerNumber + \".ChildPanelOn.FileName\", childPanelPath,
				\"_Ui_\" + managerNumber + \".ChildPanelOn.FileName:_original.._stime\", childPanelPathTime,
				\"_Ui_\" + managerNumber + \".ChildPanelOn.PanelName\", childPanelName);
	

		//	DebugN(rootPanelPath, rootPanelPathTime, childPanelPath, childPanelPathTime);
	
		if(rootPanelPathTime > childPanelPathTime)
		{
			panelPath = rootPanelPath;
			panelName = rootPanelName;
		}
		else
		{
			panelPath = childPanelPath;
			panelName = childPanelName;
		}
	
		if(myPanelName() == panelName)
		{
			goodPanelName = TRUE;
//			DebugN(\"Correct panel name\");
		}
		else
		{
			goodPanelName = FALSE;
//			DebugN(\"Wrong panel name\");
		}	
	}
//	DebugN(\"The good path is \" + panelPath);
}" 0

0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
