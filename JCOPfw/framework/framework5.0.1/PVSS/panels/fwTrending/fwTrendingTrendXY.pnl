V 10
1
LANG:1 8 (NoName)
PANEL,284 141 400 201 N "FwTrendingViewBackground" 22
"$ZoomWindowTitle"
"$bShowGrid"
"$bShowLegend"
"$dsCurveColor"
"$dsCurveDPE"
"$dsCurveLegend"
"$dsCurveRange"
"$dsCurveToolTipText"
"$dsCurveVisible"
"$dsCurveXDPE"
"$dsCurveXLegend"
"$dsCurveXToolTipText"
"$dsCurvesType"
"$dsUnit"
"$dsXCurveRange"
"$dsXUnit"
"$sBackColor"
"$sDpName"
"$sForeColor"
"$sRefName"
"$sTimeRange"
"$templateParameters"
EEE E E 1 -1 -1 0  0 0
"" 0 1
E"dyn_int CONNECTED_SYSTEM_IDS;
dyn_string DPES_FROM_CONFIG_DP;
bool LOADED_PLOT_CONFIG = FALSE;
bool ACCESS_RIGHTS_GRANTED = TRUE;
bool IS_DP_AVAILABLE;
time LAST_CONFIG_UPDATE;

trendingDisplay_update2(string dp1, dyn_int val1, string dp2, dyn_int val2)
{
	bool run, isConnected, changeButtons = FALSE;
	int i;
	string isRunning, systemName, ref=$sRefName, tooltip;
	dyn_int systemIds, connectedSystemIds;
	dyn_string plotShapes, exceptionInfo;
	dyn_dyn_string plotData;

	if(ref!=\"\")
		ref+=\".\";

	_fwTrending_getConnectedSystemIds(connectedSystemIds, exceptionInfo);
	
	if(connectedSystemIds != CONNECTED_SYSTEM_IDS)
	{
		if($sDpName != \"\")
		{
			_fwTrending_isSystemForDpeConnected($sDpName, isConnected, exceptionInfo);
			IS_DP_AVAILABLE = isConnected;

			if(isConnected)
				tooltip = \"Save configuration to plot data point\";
			else
				tooltip = \"The plot data point is on a remote system which is unavailable\";

			if(ACCESS_RIGHTS_GRANTED)
				changeButtons = TRUE;
		}
		else
			isConnected = FALSE;
		
		if(!LOADED_PLOT_CONFIG)
		{
			if(isConnected)
			{
				loadAndConnectToDp($sDpName, $sRefName);
				dpNotExist.visible = FALSE;
				dpNotAvailable.visible = FALSE;
			}
		}
		else
		{
			fwTrending_getRuntimePlotDataWithExtendedObject($sRefName, isRunning, plotShapes, plotData, exceptionInfo);
			for(i=1; i<=dynlen(plotData[fwTrending_PLOT_OBJECT_DPES]); i++)
			{
				systemName = dpSubStr(plotData[fwTrending_PLOT_OBJECT_DPES][i], DPSUB_SYS);
				if(systemName != \"\")
					dynAppend(systemIds, getSystemId(systemName));
					
				systemName = dpSubStr(plotData[fwTrending_PLOT_OBJECT_DPES_X][i], DPSUB_SYS);
				if(systemName != \"\")
					dynAppend(systemIds, getSystemId(systemName));

				dynUnique(systemIds);
			}
		
//DebugN(\"Previous: \" + dynIntersect(systemIds, CONNECTED_SYSTEM_IDS) + \" Current: \" + dynIntersect(systemIds, connectedSystemIds));

			if((dynIntersect(systemIds, CONNECTED_SYSTEM_IDS)) != (dynIntersect(systemIds, connectedSystemIds)))
			{
//DebugN(\"So do refresh (\" + $sRefName + \")\");
				refreshTrend(FALSE);
			}
		}
	}
	
	if(changeButtons)
	{
		setValue(ref+\"saveSettings\", \"enabled\", isConnected);
		setValue(ref+\"saveSettings\", \"toolTipText\", tooltip);
	}
	CONNECTED_SYSTEM_IDS = connectedSystemIds;
}


trendingDisplay_update(string dp1, dyn_string val1)
{
	time timeStamp;
	string isRunning, shouldRefresh;
	dyn_string plotShapes, exceptionInfo, dpes;
	dyn_dyn_string returnValue, plotData;
		
	dp1 = dpSubStr(dp1, DPSUB_SYS_DP_EL);
	dpGet(dp1 + \":_online.._stime\", timeStamp);

	if(timeStamp == LAST_CONFIG_UPDATE)
		return;
	
	shouldRefresh = refreshTrend.text;
	if(shouldRefresh != \"TRUE\")
		return;

	fwTrending_getRuntimePlotDataWithExtendedObject($sRefName, isRunning, plotShapes, plotData, exceptionInfo);
	fwTrending_getPlotExtended($sDpName, $sRefName, returnValue, exceptionInfo, TRUE);

	if(dynlen(returnValue) == fwTrending_getPlotData_LEN_RETURN_DATA)
		fwTrending_setRuntimePlotDataWithExtendedObject($sRefName, isRunning, returnValue, exceptionInfo);

	dpes = returnValue[fwTrending_PLOT_OBJECT_DPES];
	dynAppend(dpes, returnValue[fwTrending_PLOT_OBJECT_DPES_X]);

	if(DPES_FROM_CONFIG_DP == dpes)
		refreshTrend(FALSE);
	else
		refreshTrend(TRUE);

	DPES_FROM_CONFIG_DP = dpes;
	LAST_CONFIG_UPDATE = timeStamp;
	dpNotExist.visible = FALSE;
	dpNotAvailable.visible = FALSE;
}

readDollarValues(dyn_string &plotData, dyn_string &exceptionInfo)
{
	int currentTimeRange;
	float fTemp;

/*	fTemp = $fMinForLog;
	if(fTemp <= 0)
		plotData[fwTrending_PLOT_OBJECT_EXT_MIN_FOR_LOG] = fwTrending_MIN_FOR_LOG;
	else
		plotData[fwTrending_PLOT_OBJECT_EXT_MIN_FOR_LOG] = $fMinForLog;
			
	fTemp = $fMaxPercentageForLog;
	if(fTemp <= 0)
		plotData[fwTrending_PLOT_OBJECT_EXT_MAX_PERCENTAGE_FOR_LOG] = fwTrending_MAX_PERCENTAGE_FOR_LOG;
	else
		plotData[fwTrending_PLOT_OBJECT_EXT_MAX_PERCENTAGE_FOR_LOG] = $fMaxPercentageForLog;
*/	
	plotData[fwTrending_PLOT_OBJECT_TITLE] = $ZoomWindowTitle;
	plotData[fwTrending_PLOT_OBJECT_IS_LOGARITHMIC] = \"FALSE\"; //$bTrendLog;
	plotData[fwTrending_PLOT_OBJECT_DPES] = $dsCurveDPE;
	plotData[fwTrending_PLOT_OBJECT_LEGENDS] = $dsCurveLegend;
	plotData[fwTrending_PLOT_OBJECT_EXT_TOOLTIPS] = $dsCurveToolTipText;
	plotData[fwTrending_PLOT_OBJECT_DPES_X] = $dsCurveXDPE;
	plotData[fwTrending_PLOT_OBJECT_LEGENDS_X] = $dsCurveXLegend;
	plotData[fwTrending_PLOT_OBJECT_EXT_TOOLTIPS_X] = $dsCurveXToolTipText;
	plotData[fwTrending_PLOT_OBJECT_COLORS] = $dsCurveColor;
	plotData[fwTrending_PLOT_OBJECT_EXT_MIN_MAX_RANGE] = $dsCurveRange;
	plotData[fwTrending_PLOT_OBJECT_EXT_UNITS] = $dsUnit;
	plotData[fwTrending_PLOT_OBJECT_EXT_MIN_MAX_RANGE_X] = $dsXCurveRange;
	plotData[fwTrending_PLOT_OBJECT_EXT_UNITS_X] = $dsXUnit;
	plotData[fwTrending_PLOT_OBJECT_CURVES_HIDDEN] = $dsCurveVisible;
//	plotData[fwTrending_PLOT_OBJECT_AXII] = $dsCurveScaleVisible;
	plotData[fwTrending_PLOT_OBJECT_CURVE_TYPES] = $dsCurvesType;
	plotData[fwTrending_PLOT_OBJECT_BACK_COLOR] = $sBackColor;
	plotData[fwTrending_PLOT_OBJECT_FORE_COLOR] = $sForeColor;
	plotData[fwTrending_PLOT_OBJECT_GRID] = $bShowGrid;
	plotData[fwTrending_PLOT_OBJECT_LEGEND_ON] = $bShowLegend;
		
	currentTimeRange = $sTimeRange;
	if(currentTimeRange <= 0) 
		currentTimeRange = fwTrending_SECONDS_IN_ONE_HOUR;

	plotData[fwTrending_PLOT_OBJECT_TIME_RANGE] = currentTimeRange;
}

loadAndConnectToDp(string dpName, string ref)
{
	dyn_string exceptionInfo;
	dyn_dyn_string returnValue;

	fwTrending_getPlotExtended(dpName, ref, returnValue, exceptionInfo, TRUE);
	LOADED_PLOT_CONFIG = TRUE;

	if(dynlen(returnValue) == fwTrending_getPlotData_LEN_RETURN_DATA)
		fwTrending_setRuntimePlotDataWithExtendedObject(ref, TRUE, returnValue, exceptionInfo);

	dpConnect(\"trendingDisplay_update\", TRUE, dpName + fwTrending_PLOT_DPES);
}

refreshTrend(bool eraseData = TRUE)
{
	drawTrend($sRefName, eraseData);
}

drawTrend(string ref, bool eraseData = TRUE)
{
	bool isOk, trendRunning, isLog;
	int i, length;
	string parameterString;
	dyn_float df;
	dyn_string plotShapes, exceptionInfo, parameters, ds;
	dyn_dyn_string plotData;
	shape activeTrendShape, parameterStore;

// here get all data and initialize the trends and the control trend buttons.
	fwTrending_getRuntimePlotDataWithExtendedObject(ref, trendRunning, plotShapes, plotData, exceptionInfo);
//DebugN(plotData);

	if(ref == \"\")
		parameterStore = getShape(\"parameterValues\");
	else
		parameterStore = getShape(ref + \"trend.parameterValues\");

	if(isDollarDefined(\"$templateParameters\"))
		parameterStore.text = $templateParameters;
	else
		parameterStore.text = \"\";
		
	parameterString = parameterStore.text;
	fwTrending_checkAndGetAllTemplateParameters(ref, plotData, fwTrending_PLOT, parameterString, exceptionInfo, TRUE);
	parameterStore.text = parameterString;

	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_DPES], exceptionInfo);    
	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_DPES_X], exceptionInfo);    
	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_LEGENDS], exceptionInfo);    
	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_LEGENDS_X], exceptionInfo);    
	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_EXT_TOOLTIPS], exceptionInfo);    
	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_EXT_TOOLTIPS_X], exceptionInfo);    

	fwTrending_convertUnicosDpeListToPvssDpeList(plotData[fwTrending_PLOT_OBJECT_DPES], plotData[fwTrending_PLOT_OBJECT_DPES], exceptionInfo);
	fwTrending_convertUnicosDpeListToPvssDpeList(plotData[fwTrending_PLOT_OBJECT_DPES_X], plotData[fwTrending_PLOT_OBJECT_DPES_X], exceptionInfo);

	activeTrendShape = getShape(plotShapes[fwTrending_ACTIVE_TREND_NAME]);

	for(i=1; i<=fwTrending_MAX_NUM_CURVES; i++)
	{
		activeTrendShape.disconnectDirectly(\"curve_\" + i);
		if(eraseData)
			activeTrendShape.curveRemoveData(\"curve_\" + i, getCurrentTime());
	}

/*	if((plotData[fwTrending_PLOT_OBJECT_IS_LOGARITHMIC][1] == \"TRUE\") || (plotData[fwTrending_PLOT_OBJECT_IS_LOGARITHMIC][1] == TRUE))
	{
		isLog = TRUE;					
		setValue(ref+\"trend.activeTrendText\", \"text\", plotShapes[fwTrending_LOG_TREND_NAME]);
		plotShapes[fwTrending_ACTIVE_TREND_NAME] = plotShapes[fwTrending_LOG_TREND_NAME];
	}
	else
	{
*/
		isLog = FALSE;
		setValue(ref+\"trend.activeTrendText\", \"text\", plotShapes[fwTrending_LINEAR_TREND_NAME]);
		plotShapes[fwTrending_ACTIVE_TREND_NAME] = plotShapes[fwTrending_LINEAR_TREND_NAME];
//	}

// initialise the trends
	fwTrending_initTrendWithObject($sRefName, plotShapes[fwTrending_ACTIVE_TREND_NAME], plotShapes, plotData, trendRunning, TRUE, exceptionInfo, TRUE);
// show the log or standard trend
	fwTrending_showStandardTrend(!isLog, plotShapes[fwTrending_LINEAR_TREND_NAME], plotShapes[fwTrending_LOG_TREND_NAME]);

// initialize the buttons of the fwTrending/fwTrendingTrendControl.pnl
	fwTrending_initControlTrendXYButtons(plotData[fwTrending_PLOT_OBJECT_TIME_RANGE][1], $sRefName, $sDpName, plotData[fwTrending_PLOT_OBJECT_IS_LOGARITHMIC][1]);

// send exception to the message text if any
	if(isFunctionDefined(\"unMessageText_sendException\"))
		unMessageText_sendException(getSystemName(), myManNum(), \"trending\", \"user\", \"*\", exceptionInfo);

// handle here any error 
	if(dynlen(exceptionInfo)>0) {
		fwExceptionHandling_display(exceptionInfo);
	}
}
" 0
 2
"CBRef""1"
"EClose"E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 330
"refName"
""
1 10 60 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
35 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 1 1 1 0 1 E U  0 E 12 62 53 76
0 2 0 "s" 0 0 0 64 0 0  12 62
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 7 refName
2 332
"trendRunningText"
""
1 10 40 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
37 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 1 1 1 0 1 E U  0 E 12 42 97 56
0 2 0 "s" 0 0 0 64 0 0  12 42
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 16 trendRunningText
2 333
"standardTrendText"
""
1 10 80 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
38 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 1 1 1 0 1 E U  0 E 12 82 104 96
0 2 0 "s" 0 0 0 64 0 0  12 82
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 17 standardTrendText
2 334
"logTrendText"
""
1 10 100 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
39 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 1 1 1 0 1 E U  0 E 12 102 75 116
0 2 0 "s" 0 0 0 64 0 0  12 102
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 12 logTrendText
2 335
"activeTrendText"
""
1 10 120 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
40 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 1 1 1 0 1 E U  0 E 12 122 90 136
0 2 0 "s" 0 0 0 64 0 0  12 122
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 15 activeTrendText
2 347
"dpNameText"
""
1 70 60 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
52 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 1 1 1 0 1 E U  0 E 72 62 132 76
0 2 0 "s" 0 0 0 64 0 0  72 62
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 10 dpNameText
2 360
"refreshTrend"
""
1 220 80 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
63 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 222 82 256 98
0 2 0 "s" 0 0 0 192 0 0  222 82
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 4 TRUE
2 38
"initScript"
""
1 10 -7 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
6 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{	
	string ref, dpName;
	bool isConnected, bFromPVSSDB = FALSE;
	dyn_string exceptionInfo, dollarValues, errorMessage;	
	
	dpNameText.text = $sDpName;
	refName.text = $sRefName;
	ref = $sRefName;
	dpName = $sDpName;

	if(dpName != \"\")
	{
		if(dpExists(dpName))
		{
			if(dpTypeName(dpName) == fwTrending_PLOT)
			{
				bFromPVSSDB = TRUE;
				loadAndConnectToDp(dpName, ref);
			}

			_fwTrending_isSystemForDpeConnected(dpName, isConnected, exceptionInfo);
			IS_DP_AVAILABLE = isConnected;
			if(!isConnected)
			{
				errorMessage = dpNotAvailable.text;
				errorMessage[2] = \"\\\"\" + dpName + \"\\\"\";
				dpNotAvailable.text = errorMessage;
				dpNotAvailable.visible = TRUE;
			}
		}
		else
		{
			bFromPVSSDB = TRUE;
			errorMessage = dpNotExist.text;
			errorMessage[2] = \"\\\"\" + dpName + \"\\\"\";
			dpNotExist.text = errorMessage;
			dpNotExist.visible = TRUE;
		}
	}
	
	if(!bFromPVSSDB) { // the data are not read from PVSS database, use the $param instead
		readDollarValues(dollarValues, exceptionInfo);
		LOADED_PLOT_CONFIG = TRUE;
		fwTrending_setRuntimePlotDataWithStrings(ref, TRUE, dollarValues, exceptionInfo);

		drawTrend(ref);
	}
	
	_fwTrending_getConnectedSystemIds(CONNECTED_SYSTEM_IDS, exceptionInfo);

	dpConnect(\"trendingDisplay_update2\", FALSE, \"_Connections.Dist.ManNums\", \"_DistManager.State.SystemNums\");
}

/* callback function set up in the fwTrending_initControlTrendXYButtons, this is for access control */
selectCB(string sUi, string sUser)
{
	bool granted = false;
	dyn_string exceptionInfo, domainList, priviledgeList, systems;
	string ref=$sRefName, tooltip;
	shape cascadeButton;

	if(ref!=\"\")
		ref+=\".\";

	fwAccessControl_getDomainList(domainList, exceptionInfo);
	fwAccessControl_getPriviledgeList(priviledgeList, exceptionInfo);
// get the priviledge and domain list. the saveSettings and plot configuration is allowed for any user having the second priviledge level of the first domain
	if(dynlen(exceptionInfo)<=0)
	{
		fwAccessControl_getUserPermission(priviledgeList[2], domainList[1], granted, exceptionInfo);
	}

	ACCESS_RIGHTS_GRANTED = granted;
	if(IS_DP_AVAILABLE)
		setValue(ref+\"saveSettings\", \"enabled\", granted);

	cascadeButton = getShape(ref+\"OtherCascadeButton\");
	cascadeButton.enableItem(\"8\", granted);	
	cascadeButton.enableItem(\"9\", granted);	
}" 0
 E 1 1 1 0 1 E U  0 E 12 22 55 36
0 2 0 "s" 0 0 0 64 0 0  12 22
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 11 init script
2 363
"dpNotAvailable"
""
1 30 40 E E E 1 E 0 E N {255,0,0} E N {255,255,255} E E
 E E
66 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 180 55 450 103
1 15 0 "s" 0 0 0 193 0 0  180 55
 3
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 33 The plot configuration data point
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 6 {name}
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 47 is from a remote system which is not available.
2 362
"dpNotExist"
""
1 73 37 E E E 1 E 0 E N {255,0,0} E N {255,255,255} E E
 E E
65 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{

}" 0
 E 0 1 1 0 1 E U  1 E 180 52 364 100
1 15 0 "s" 0 0 0 193 0 0  180 52
 3
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 33 The plot configuration data point
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 6 {name}
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 15 does not exist.
2 364
"parameterValues"
""
1 180 90 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
67 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 182 92 338 108
0 2 0 "s" 0 0 0 64 0 0  182 92
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 15 parameterValues
23 365
"standardTrend"
""
1 0 0 E E E 1 E 0 E N "FwTrendingTrendForeground" E N "FwTrendingFaceplateBackground" E E
 E E
67 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"logarithm" "0"
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
-2 -2 402 202
1 E E E 1 401 N {0,0,0} 0 0 1 0 1 0 9
1 "curve_1" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen1" 0 5 5 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 5 5 0 0 0 0 0
1 "curve_2" "" 7 1 0 0 0 E E 0 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen2" 0 4 4 1 1 0 0 0
"" 0 0 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_3" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen3" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_4" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen4" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_5" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen5" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_6" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen6" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_7" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen7" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_8" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen8" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_9" "" 0 2 0 0 1 "3 2 0.0" "%x" 1 1 2 1 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N {0,0,0} 0 0 0 0 0 0 0 0
"" 1 "3 2 0.0" "%x" 1 1 0 1 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
0 E 0 0 0 1 90 1 10 60
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""

30 N {0,0,0} 0 0 1 0 1 150 0 5 5 1 3
0
23 367
"logTrend"
""
1 0 0 E E E 1 E 0 E N "FwTrendingTrendForeground" E N "FwTrendingFaceplateBackground" E E
 E E
67 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"logarithm" "0"
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
-2 -2 402 202
1 E E E 1 401 N {0,0,0} 0 0 1 0 1 0 9
1 "curve_1" "" 0 2 0 0 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "" "" 0 0 1 0 0 1 0 1 N "STD_trend_pen1" 0 5 5 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
0 0 1 0 5 5 0 0 0 0 0
1 "curve_2" "" 7 1 0 0 0 E E 0 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen2" 0 4 4 1 1 0 0 0
"" 0 0 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_3" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen3" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_4" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen4" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_5" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen5" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_6" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen6" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_7" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen7" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_8" "" 7 1 0 0 0 E E 1 0 0 3 2 1
LANG:1 1  
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "STD_trend_pen8" 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
1 "curve_9" "" 0 2 0 0 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N {0,0,0} 0 0 0 0 0 0 0 0
"" 0 1 0 0 3 2 1
LANG:1 0 
-1 0 0 0 0 0 0 0 0
0 E 0 0 0 1 90 1 10 60
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""

30 N {0,0,0} 0 0 1 0 1 150 0 5 5 1 3
0
17 359
"trendInfo"
""
1 50 40 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
62 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
48 38 332 162
0
E
E
E

3 1
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0