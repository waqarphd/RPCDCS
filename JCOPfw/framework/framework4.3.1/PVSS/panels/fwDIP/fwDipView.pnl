V 10
1
LANG:1 8 (NoName)
PANEL,-1 -1 807 626 N "_3DFace" 0
E "main()
{
;
}" 0
 E E E 1 0 0 0  20 20
""0  1
E "
int state; // 1 - DIP Browser
					 // 2 - Subscribed Services
					 // 3 - Published Services

/**
 *  Just for hiding everything in the panel - used to switch modes of operation
 */
hide()
{
		dipBrowserButton1.visible = false;
		dipPublicationAddress1.visible = false;
		dipStartingAddressLabel1.visible = false;
		
		Text2.visible = false;
		Text3.visible = false;
		dipDetailsTable.visible = false;
		dipItemList.visible = false;
		
		Text4.visible = false;
		Text5.visible = false;
		dipDetailsTable2.visible = false;
		dipItemList2.visible = false;
}


/**
 * Updates the selection list of subscriptions - invoked usually when user chooses a
 * different config, or switches to subscription view.
 */
updateSubscriptionList()
{
	int i, length;
	string dp;
	dyn_string exceptionInfo;
	dyn_dyn_string currentData;
	
	dp = config.selectedText;
	
	dipDetailsTable.deleteAllLines;
	dipItemList.deleteAllItems;
	if(!dpExists(dp))
		return;

        fwOpenProgressBar(\"Loading...\", \"Reading subscription configuration\", 1);
	fwDIP_getAllSubscriptions(dp, currentData, exceptionInfo);
	if(dynlen(exceptionInfo)!=0)
	{	
                fwCloseProgressBar(\"Error while loading\");
		fwExceptionHandling_display(exceptionInfo);
		return;
	}
	if(dynlen(currentData)==0)
        {
                fwCloseProgressBar(\"No subscriptions configured\");
		return;
        }
	
	// we select the distinct (by address) DIP items to provide the aggregation
	dyn_string dipItems = currentData[fwDIP_OBJECT_ITEM];
	dynUnique(dipItems);
	dynSortAsc(dipItems);
	dipItemList.items = dipItems;
	
	updateSubscriptionDetails();
        fwCloseProgressBar(\"Finished reading subscriptions\");
}


/**
 * Updates the table with details of the subscription to display the data about selected
 * publication
 */
void updateSubscriptionDetails()
{
	int i, length;
	string dp;
	dyn_string exceptionInfo;
	dyn_dyn_string currentData;
	dyn_string dataTypes;
	string val;
	
	dp = config.selectedText;
	
	if(!dpExists(dp))
		return;
		
	fwDIP_getAllSubscriptions(dp, currentData, exceptionInfo);
	
	dipDetailsTable.deleteAllLines;	

	if(dynlen(currentData)==0)
	return;


	length = dynlen(currentData[fwDIP_OBJECT_ITEM]);
	if(length > 0)
	{		
		for(int j=1; j<=length; j++)
		{
			//DebugN(currentData[fwDIP_OBJECT_ITEM][j],dipItemList.selectedText,currentData[fwDIP_OBJECT_DPES][j]);
			// we have to select only the dpes and tags related to specific DIP item
			if(currentData[fwDIP_OBJECT_ITEM][j] == dipItemList.selectedText)
			{
				if(!dpExists(currentData[fwDIP_OBJECT_DPES][j]))
					val = \"\";
				else
					dpGet(currentData[fwDIP_OBJECT_DPES][j], val);
				fwConfigs_getDpeTypeText(currentData[fwDIP_OBJECT_DPES][j], dataTypes, exceptionInfo);
				dipDetailsTable.appendLine(\"dpe\", currentData[fwDIP_OBJECT_DPES][j],
																\"dipTag\", currentData[fwDIP_OBJECT_TAGS][j],
																\"dataType\", dataTypes,
																\"value\", val);				
				if(!dpExists(currentData[fwDIP_OBJECT_DPES][j]))
					dipDetailsTable.cellBackColRC(dipDetailsTable.lineCount-1,\"dpe\",\"DpDoesNotExist\");
			}			
		}
	}
}


/**
 * Updates the selection list of publication - invoked usually when user chooses a
 * different config, or switches to publication view.
 */
updatePublicationList()
{
	int i, length;
	string dp;
	dyn_string exceptionInfo;
	dyn_dyn_string currentData;
	
	dp = config.selectedText;
	
	dipItemList2.deleteAllItems;
	dipDetailsTable2.deleteAllLines;
	
	if(!dpExists(dp))
		return;

        fwOpenProgressBar(\"Loading...\", \"Reading publication configuration\", 1);
	fwDIP_getAllPublications(dp, currentData, exceptionInfo);
	if(dynlen(exceptionInfo)!=0)
	{	
                fwCloseProgressBar(\"Error while loading\");
		fwExceptionHandling_display(exceptionInfo);
		return;
	}
	if(dynlen(currentData)==0)
	{
                fwCloseProgressBar(\"No publications configured\");
		return;
	}

	// we select the distinct (by address) DIP items to provide the aggregation
	dyn_string dipItems = currentData[fwDIP_OBJECT_ITEM];
	dynUnique(dipItems);
	dynSortAsc(dipItems);
	dipItemList2.items = dipItems;
	
	updatePublicationDetails();
        fwCloseProgressBar(\"Finished reading publications\");
}

/**
 * Updates the table with details of the publication to display the data about selected
 * publication
 */
void updatePublicationDetails()
{
	int i, length;
	string dp;
	dyn_string exceptionInfo;
	dyn_dyn_string currentData;
	dyn_string dataTypes;
	string val;
	
	dp = config.selectedText;
	
	if(!dpExists(dp))
		return;
		
	fwDIP_getAllPublications(dp, currentData, exceptionInfo);
	
	dipDetailsTable2.deleteAllLines;

	if(dynlen(currentData)==0)
		return;

	length = dynlen(currentData[fwDIP_OBJECT_ITEM]);
	if(length > 0)
	{		
		for(int j=1; j<=length; j++)
		{			
			// we have to select only the dpes and tags related to specific DIP item
			if(currentData[fwDIP_OBJECT_ITEM][j] == dipItemList2.selectedText)
			{
				if(!dpExists(currentData[fwDIP_OBJECT_DPES][j]))
					val = \"\";
				else
					dpGet(currentData[fwDIP_OBJECT_DPES][j], val);
				fwConfigs_getDpeTypeText(currentData[fwDIP_OBJECT_DPES][j], dataTypes, exceptionInfo);
				dipDetailsTable2.appendLine(\"dpe\", currentData[fwDIP_OBJECT_DPES][j],
																\"dipTag\", currentData[fwDIP_OBJECT_TAGS][j],
																\"dataType\", dataTypes,
																\"value\", val,
																\"buffer\", currentData[fwDIP_OBJECT_UPDATE_RATES][j]);
				if(!dpExists(currentData[fwDIP_OBJECT_DPES][j]))
					dipDetailsTable2.cellBackColRC(dipDetailsTable2.lineCount-1,\"dpe\",\"DpDoesNotExist\");
			}			
		}
	}
}
/*
checkManager()
{
	bool isRunning;
	dyn_string exceptionInfo;
//	_fwDIP_checkIsSimRunning(isRunning, exceptionInfo);
	if(isRunning)
	{
		setValue(\"man_state\",\"text\",\"RUNNING\");
		setValue(\"man_state\",\"backCol\",\"FwStateOKPhysics\");
	}
	else
	{
		setValue(\"man_state\",\"text\",\"STOPPED\");
		setValue(\"man_state\",\"backCol\",\"red\");
	}
}
*/" 0
 2
"CBRef" "1"
"EClose" "main()
{
;
}" 0

""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 0
"Text1"
""
1 20 20 E E E 1 E 1 E N {0,0,0} E N "_3DFace" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 22 22 108 37
0 2 0 "0s" 0 0 0 64 0 0  22 22 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 8 DIP View
2 1
"on_label"
""
1 260 20 E E E 1 E 1 E N {0,0,0} E N "_3DFace" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 262 22 348 37
0 2 0 "0s" 0 0 0 64 0 0  262 22 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 2 on
2 20
"dipStartingAddressLabel1"
""
1 20 100 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 102 128 118
0 2 0 "0s" 0 0 0 64 0 0  22 102 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 17 Starting Address:
2 25
"Text2"
""
1 18 78 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 20 80 126 99
0 2 0 "0s" 0 0 0 64 0 0  20 80 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 9 DIP Item:
2 26
"Text3"
""
1 18 338 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 20 340 216 359
0 2 0 "0s" 0 0 0 64 0 0  20 340 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 30 DIP Item subscription details:
2 29
"Text4"
""
1 18 78 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
16 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 20 80 126 99
0 2 0 "0s" 0 0 0 64 0 0  20 80 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 9 DIP Item:
2 30
"Text5"
""
1 18 338 E E E 1 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 20 340 216 359
0 2 0 "0s" 0 0 0 64 0 0  20 340 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 29 DIP Item publication details:
2 33
"Text6"
""
1 20 45 E E E 1 E 0 E N {0,0,0} E N "_3DFace" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 32 57 108 73
0 2 0 "0s" 0 0 0 64 0 0  32 57 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 9 PVSS00dip
2 34
"Text7"
""
1 110 55 E E E 1 E 0 E N {0,0,0} E N "_3DFace" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 112 57 128 73
0 2 0 "0s" 0 0 0 64 0 0  112 57 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 2 is
2 35
"man_state"
""
1 130 55 E E E 1 E 0 E N {0,0,0} E N "_3DFace" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
//	checkManager();
}" 0
 E 0 1 1 0 1 E U  1 E 132 57 208 73
1 2 0 "0s" 0 0 0 65 0 0  132 57 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 7 UNKNOWN
22 2
"config"
""
1 290 20 E E E 1 E 1 E N {0,0,0} E N "_Window" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 288 18 591 45
0

"main()
{
	dyn_string items;
	int i;
	
	items = dpNames(\"*:*\",\"_FwDipConfig\");
	config.items = items;
	config.selectedPos = 1;
}" 0

"main()
{
	if(state==2)
	{
		updateSubscriptionList();
//		updateSubscriptionDetails();
	}
	if(state==3)
	{
		updatePublicationList();
//		updatePublicationDetails();
	}
}" 0

E
 0 0
26 3
"select"
""
1 100 20 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 98 18 252 45
 0 1
LANG:1 20 Please Choose Option
"" 0 0 0 0 0
 3 1 1
LANG:1 11 DIP Browser
"1" 0 0 0 0 0
 1 1
LANG:1 19 Subscribed Services
"2" 0 0 0 0 0
 1 1
LANG:1 18 Published Services
"3" 0 0 0 0 0
 E "main(int id)
{
	hide();
	switch(id)
	{
	case 1:
		dipBrowserButton1.visible = true;
		dipPublicationAddress1.visible = true;
		dipStartingAddressLabel1.visible = true;
		setValue(\"\",\"text\",\"DIP Browser\");
		state = 1;
		break;
	case 2:
		updateSubscriptionList();
//		updateSubscriptionDetails();
		Text2.visible = true;
		Text3.visible = true;
		dipDetailsTable.visible = true;
		dipItemList.visible = true;
		setValue(\"\",\"text\",\"Subscribed Services\");		
		state = 2;
		break;
	case 3:
		updatePublicationList();
//		updatePublicationDetails();
		Text4.visible = true;
		Text5.visible = true;
		dipDetailsTable2.visible = true;
		dipItemList2.visible = true;
		setValue(\"\",\"text\",\"Published Services\");
		state = 3;
		break;

	}
}
" 0
0 
14 22
"dipPublicationAddress1"
""
1 130 100 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 128 98 512 125
3 "0s" 0 0 0 0 0 -1  E E E
13 24
"dipBrowserButton1"
""
1 520 96 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
12 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 518 94 572 128

T 
1
LANG:1 4 View
"main()
{
	string startPoint;
	
	startPoint = dipPublicationAddress1.text;
	// Need to prepare the address
	startPoint = /*\"Dip/\" +*/ startPoint;
	
	int iOperationMode; // 1 	- user entered the branch address
											// 0 	- user entered the leaf address
											// -1	- user entered invalid address (or publication structure not defined)
	
	iOperationMode = 1;
	
	dyn_float df; // df[0] = 0 ==> OK
	dyn_string ds;

	dyn_string childName;
	dyn_int childType;
	dyn_string fieldName;
	dyn_string fieldType;
	dyn_string exceptionInfo;
		
	int resultType;
	
	int timeout;
	dpGet(config.selectedText+\".queryTimeout\", timeout);
	
	/*
		Get the data from the 'API manager filled' dpe.
	*/
	fwOpenProgressBar(\"Information\", \"Querying API Manager\", 1);
	
	resultType = fwDIP_DipQuery(config.selectedText, startPoint,
												childName, childType,
												fieldName, fieldType,
												exceptionInfo, timeout);
	
	if (dynlen(exceptionInfo) != 0)
	{
		iOperationMode = -1;
		fwCloseProgressBar(\"There were errors while querying API Manager\");
		fwExceptionHandling_display(exceptionInfo);
		return;
	}
	else	
	{
		fwCloseProgressBar(\"No errors\");
		if ( (resultType == fwDIPBrowser_ResultType_BRANCH) || (resultType == fwDIPBrowser_ResultType_LEAFBRANCH))
			iOperationMode = 1;
		else
			iOperationMode = 0;
	}

	
	if (iOperationMode==1)
	{
		/*
			This happens if the API manager has returned something useful to be
			displayed in the Tree Widget - that is when an address of some branch
			has been provided
		*/
		ChildPanelOnParentModalReturn(\"fwDIP/fwDipHierarchyBrowser.pnl\",
			\"DIP Browser\",
			myPanelName(),
			makeDynString(\"$sInitialAddress:\"+startPoint,
										\"$sChildName:\"+childName,
										\"$iChildType:\"+childType,
										\"$sApiManagerDp:\"+config.selectedText,
										\"$iResultType:\"+resultType,
										\"$bBrowser:\"+1),
			0,0,
			df,ds);
		if(df[1] == 0)
			return;
		dipPublicationAddress1.text = ds[1];
//		dipPublicationField.text = ds[2];
	}
	else if (iOperationMode==0)
	{
		/*
			This happens if the user provided an address of some leaf. The details
			of that particular presentation shall be presented to the user.
		*/
		ChildPanelOnParentModalReturn(\"fwDIP/fwDipPublicationContents.pnl\",
			\"Contents of the publication\",
			myPanelName(),
			makeDynString(\"$sPublicationAddress:\"+startPoint,
										\"$sFieldName:\"+fieldName,
										\"$iFieldType:\"+fieldType,
										\"$iInvokedFromMain:1\",
										\"$bBrowser:\"+1),
			0,0,
			df,ds);
		if(df[1] == 0)
			return;
//		dipPublicationField.text = ds[1];
	}
	else
	{
		/* 
			This happens when the DPE with field names from the API manager is empty
			or when the timeout occured.
			It can happen when the address is invalid or if the publication structure
			has not been defined yet.
		*/
		fwExceptionHandling_display(exceptionInfo);
	}
}" 0
 E E E
17 27
"dipItemList"
""
1 9.86666666666666 98.5667752442997 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
24 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,505,0,0,0,0,0,0,0,0,Arial
0 ""
 18 98 782 322
0

E
"main()
{
	dipDetailsTable.deleteAllLines;
	updateSubscriptionDetails();
}" 0

E

0 0
25 28
"dipDetailsTable"
""
1 -441.560975609756 -543.908794788274 E E E 1 E 0 E N "_WindowText" E N "_3DFace" E E
 E E
16 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,505,0,0,0,0,0,0,0,0,Arial
0 ""
 18 358 782 612
EE 1 0 1 4 1 "dpe" 50 1 0 "s" 1
LANG:1 18 Data Point Element
E
1
LANG:1 0 

465 "dipTag" 12 1 0 "s" 1
LANG:1 7 DIP Tag
E
1
LANG:1 0 

120 "dataType" 8 1 0 "s" 1
LANG:1 4 Type
E
1
LANG:1 0 

80 "value" 7 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

75 
26 26 "" 1 1
LANG:1 2 #1
8 64
1
LANG:1 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,505,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
17 31
"dipItemList2"
""
1 9.86666666666666 98.5081433224756 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
23 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,505,0,0,0,0,0,0,0,0,Arial
0 ""
 18 98 782 331
0

E
"main()
{
	dipDetailsTable2.deleteAllLines;
	updatePublicationDetails();
}" 0

E

0 0
25 32
"dipDetailsTable2"
""
1 -775.219512195122 -619.641693811075 E E E 1 E 0 E N "_WindowText" E N "_3DFace" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,505,0,0,0,0,0,0,0,0,Arial
0 ""
 18 358 782 612
EE 1 0 1 5 1 "dpe" 49 1 0 "s" 1
LANG:1 18 Data Point Element
E
1
LANG:1 0 

450 "dipTag" 12 1 0 "s" 1
LANG:1 7 DIP Tag
E
1
LANG:1 0 

120 "dataType" 8 1 0 "s" 1
LANG:1 4 Type
E
1
LANG:1 0 

80 "value" 4 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

50 "buffer" 3 1 0 "s" 1
LANG:1 6 Buffer
E
1
LANG:1 0 

40 
26 26 "" 1 1
LANG:1 2 #1
8 64
1
LANG:1 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,505,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
13 36
"Button1"
""
1 220 54 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
22 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 218 52 312 79

T 
1
LANG:1 7 Recheck
"main()
{
//	checkManager();
}" 0
 E E E
1 37 0 "" 0
0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 0 "Group6"
"objects\\fwGeneral\\fwHelpButton.pnl" 584 7 T 22 1 0 1 190 13
1
"$sPanelRelativePath""fwDIP/fwDipView"
0