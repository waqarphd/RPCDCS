V 10
1
LANG:1 8 (NoName)
PANEL,-1 -1 322 316 N "_3DFace" 7
"$sColumn"
"$sDesc"
"$sDpDesc"
"$sDpName"
"$sMode"
"$sText"
"$sVarNames"
E E E E E 1 0 0 0  0 0
""0  1
E "
/* This reference panel allows to display the status of CaV alarm and warning
   words, along with their descriptions.
   Parameter:
      $sText 			- Header text
      $sDpName		- dpe to dpconnect to
      $sVarNames	- PLC variables corresponding to alarm bits
      $sDesc 			- Descriptions corresponding to alarm bits
 */


dyn_string description;
dyn_string varname;

string falseColor = \"White\";
string trueColor  = \"FwStateAttention2\";

refresh(string dp, anytype val, string dp2, bool invalid)
{
	int tmp;
	for(int i=0; i<16; i++)
	{
		if(invalid)
		{
			Table2.cellBackColRC(i,\"pos\",\"_3DFace\");
			continue;
		}
		tmp = (val>>i)&(0x01);
		if(!tmp)
		{
			Table2.cellBackColRC(i,\"pos\",falseColor);
			Table2.cellValueRC(i,\"pos\",\"0\");
		}	
		else
		{
			Table2.cellBackColRC(i,\"pos\",trueColor);
			Table2.cellValueRC(i,\"pos\",\"1\");
		}	
	}
}" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 0
"panelTitle"
""
1 0 0 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
	/*string num;
	int pos;
	
	pos = strpos($sText,\"Word\")+4;
	num = substr($sText,pos,strlen($sText)-pos);
	
	if (strpos($sText,\"Warning\")>=0)
		this.text = \"Warning Word \"+num;
	else this.text = \"Alarm Word \"+num;*/
}" 0
 E 0 1 1 0 1 E U  0 E 2 2 188 28
0 2 0 "0s" 0 0 0 64 0 0  2 2 1
1
LANG:1 84 -*-Arial-*-r-normal-*-16-*-100-100-*-*-iso8859-1|-16,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 6 $sText
25 2
"Table2"
""
1 -1063 -16 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main()
{
	this.selectLineN(-1);
}" 0
 E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 -2 28 323 327
"main()
{	
//	fwGeneral_stringToDynString($sDescription,description,\";\");
	description =  strsplit($sDesc,';');
	varname = strsplit($sVarNames,';');

	string sDpName = $sDpName+$sDpDesc;
	       
        if(dynlen(varname)!=1)
        {
              for(int i=1; i<=16; i++)
              {
        		string var = \"\";
        		if(dynlen(varname)>=i)
        			var =varname[i];
        	    	this.appendLine(\"pos\",i,\"description\",var);
      	      }
        }
        else
        {
              for(int i=1; i<=16; i++)
              {
        	    	this.appendLine(\"pos\",i,\"description\", \"Bit \"+i);
      	      }          
        }
	
	if(dpExists(sDpName))
	{
		dpConnect(\"refresh\", sDpName+\":_online.._value\", sDpName+\":_online.._invalid\");
	}

	this.tableMode(TABLE_SELECT_BROWSE);
	this.selectByClick(TABLE_SELECT_LINE);
}" 0
"main(int row, string column, string value)
{	
        varname = strsplit($sVarNames,';');
        
        if(dynlen(varname)!=1)
        {
            	PanelOffPanel(\"Bit Details\");
            	int column, row;
            	string dp;
            	getValue(\"\", \"currentCell\", row, column);

            	ChildPanelOnCentral(\"fwCaV/fwCaVAlarmBitDetails.pnl\",
                 $sText+row,
                 makeDynString(\"$sDpName:\"+$sDpName,\"$iBit:\" + row, \"$sDesc:\" + description[row+1], \"$sTitle:Detailed bit information\", \"$sVar:\" + varname[row+1], \"$sWord:\" + $sText, \"$sColumn:\" + $sColumn,\"$sMode:\"+$sMode));
        }
}
" 0
 1 0 1 2 1 "pos" 2 1 0 "s" 1
LANG:1 3 Bit
E
1
LANG:1 0 

30 "description" 44 1 0 "s" 1
LANG:1 11 Description
E
1
LANG:1 0 

500 
16 16 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 0 2 1 7
1 0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0