V 10
1
LANG:1 8 (NoName)
PANEL,280 108 718 466 N "_3DFace" 4
"$bIsExpert"
"$bIsOperator"
"$sDpName"
"$sTitle"
"main()
{
	isExpert = $bIsExpert;
	isOperator = $bIsOperator;
}" 0
EE E E 1 0 0 0  10 55
"" 0 1
E"const int LABEL_INDEX 	= 1;
const int OUTPUT_INDEX	= 2;
const int INPUT_INDEX	= 3;
dyn_dyn_string settings, values;

bool settingsInitialized = FALSE;
bool isExpert = FALSE;
bool isOperator = FALSE;

initDpeListForValuesTable(dyn_string &exceptionInfo)
{
	int i, j = 1;
	string deviceModel, deviceDpType;
/*	dyn_string notToDisplayDpes;*/
	dyn_dyn_string elements;

/*	notToDisplayDpes = makeDynString(	\".Actual.alarm\",
																		\".Actual.alarm01\",
																		\".Actual.alarm02\",
																		\".Actual.alarm03\",
																		\".Actual.fault\",
																		\".Actual.fault01\",
																		\".Actual.fault02\",
																		\".Actual.fault03\",
																		\".Actual.status\");
*/	
	// check that all the elements are available in the device
	deviceDpType = dpTypeName($sDpName);
	fwDevice_getModel(makeDynString($sDpName), deviceModel, exceptionInfo);
	fwDevice_getConfigElements(deviceDpType, fwDevice_ALL, elements, exceptionInfo, deviceModel);
	
//	DebugN(elements[1], deviceModel);
	
	for(i = 1; i <= dynlen(elements[1]); i++)
	{
		if((strpos(elements[1][i], \".Actual.Measurements\") == 0) || (strpos(elements[1][i], \".Actual.Parameters\") == 0) /*&& (dynContains(notToDisplayDpes, elements[1][i]) < 1)*/  )
		{			
			values[j++] = makeDynString(elements[2][i], \"\", elements[1][i]);
		}
	}
//	DebugN(values);
	settingsInitialized = TRUE;
}


initDpeListForSettingsTable(dyn_string &exceptionInfo)
{
	int i, j = 1;
	string deviceModel, deviceDpType;
/*	dyn_string notToDisplayDpes;*/
	dyn_dyn_string elements;

/*	notToDisplayDpes = makeDynString(	\".Settings.control\", 
										\".ReadBackSettings.control\");*/
	
	// check that all the elements are available in the device
	deviceDpType = dpTypeName($sDpName);
	fwDevice_getModel(makeDynString($sDpName), deviceModel, exceptionInfo);
	fwDevice_getConfigElements(deviceDpType, fwDevice_ALL, elements, exceptionInfo, deviceModel);
	
//	DebugN(elements[1], deviceModel);
	
	for(i = 1; i <= dynlen(elements[1]); i++)
	{
		if((strpos(elements[1][i], \".Settings.Parameters\") == 0) /*&& (dynContains(notToDisplayDpes, elements[1][i]) < 1)*/  )
		{			
			string readBack = elements[1][i];
			strreplace(readBack, \".Settings\", \".ReadBackSettings\");
			settings[j++] = makeDynString(elements[2][i], elements[1][i], readBack);
		}
	}
//	DebugN(settings);
	settingsInitialized = TRUE;
}
" 0
 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 3
"Text7"
""
1 10 55 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
4 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{
	this.text = $sTitle;
}" 0
 E 0 1 1 0 1 E U  0 E 12 12 69 34
0 2 0 "s" 0 0 0 192 0 0  12 12
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-160-100-100-*-*-iso8859-1|-19,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 7 $sTitle
2 5
"Text2"
""
1 10 70 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
6 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 72 98 88
0 2 0 "s" 0 0 0 64 0 0  12 72
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 11 Plant Name:
2 6
"Text3"
""
1 10 100 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
7 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 102 98 118
0 2 0 "s" 0 0 0 64 0 0  12 102
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 11 Description
2 7
"Text4"
""
1 10 40 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
8 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 42 58 58
0 2 0 "s" 0 0 0 64 0 0  12 42
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 6 Model:
25 0
"settingsTable"
""
1 -15 -30 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
8 138 352 412
"dyn_string gListOfDpElementToConnect, gListOfSettingsDpElement;

main()
{
	int i, columns;
	string dpe, unit, value;
	dyn_string exceptionInfo;
	
	settingsTable.sortOnClick = FALSE;
	settingsTable.deleteAllLines;
	
	initDpeListForSettingsTable(exceptionInfo);
	for(i = 1; i <= dynlen(settings); i++ ) 
	{
		gListOfSettingsDpElement[i] = $sDpName + settings[i][OUTPUT_INDEX];
		if(!dpExists(gListOfSettingsDpElement[i]))
		{
			fwException_raise(	exception,
								\"ERROR\", 
								\"The data point element\" + gListOfSettingsDpElement[i] + \" does not exist.\", 
								\"\");
			this.cellBackColRC(i - 1, \"settings\", \"DpDoesNotExist\");
		}
		else 
		{
			dpe = gListOfSettingsDpElement[i];
			gListOfSettingsDpElement[i] = dpSubStr(gListOfSettingsDpElement[i], DPSUB_SYS_DP_EL);

			if(dpConnect(\"_fwSettingsDataCB\", dpe) == -1) 
  			{
  				fwException_raise(	exceptionInfo, 
  									\"INFO\", 
  									\"Connecting to the data point element\" + dpe + \" was unsuccessful.\", 
  									\"\");
				this.cellBackColRC(i - 1, \"settings\", \"DpDoesNotExist\");
			}
		}

		gListOfDpElementToConnect[i] = $sDpName + settings[i][INPUT_INDEX];
		unit = dpGetUnit(gListOfDpElementToConnect[i]);
		dpGet(gListOfSettingsDpElement[i], value);
		
		settingsTable.appendLine(\"element\", settings[i][LABEL_INDEX], \"settings\", value, \"unit\", unit);
//		DebugN(\"element\", settings[i][LABEL_INDEX], \"settings\", value, \"unit\",  unit);
	}
	
//	DebugN(\"settingsTable \"  + gListOfDpElementToConnect);
	fwColourTable_connectCellBackColToValueStatus(exceptionInfo);
	settingsTable.lineVisible(0);
}

_fwSettingsDataCB(string dpe, string value)
{
	int cellPos;
	string dpName;
	
	dpName = dpSubStr(dpe, DPSUB_SYS_DP_EL);
	cellPos = dynContains(gListOfSettingsDpElement, dpName);

	if(cellPos >= 1)
	{
		this.cellValueRC(cellPos - 1, \"settings\", value);
	}
}" 0
 "main(int xpos,string columnName,string value)
{
	dyn_string exceptionInfo;

	if ((columnName == \"settings\"))
	{
		if (isExpert)
		{
			ChildPanelOnCentral(\"fwGeneral/fwChangeSetting.pnl\", \"Settings\",
							 					makeDynString(	\"$sDpName:\" + $sDpName,
						  													\"$dpSetName:\" + settings[xpos + 1][OUTPUT_INDEX])); 
		}
	}
	else if ((isExpert) || (isOperator))
	{
		fwGeneral_openDetailsPanel($sDpName + settings[xpos + 1][INPUT_INDEX], exceptionInfo);
		if(dynlen(exceptionInfo) > 0)
			fwExceptionHandling_display(exceptionInfo);
	}
}" 0
 1 0 1 4 1 "element" 0 1 0 "s" 1
LANG:1 9 Parameter
E1
LANG:1 0 
 100 "settings" 0 1 0 "s" 1
LANG:1 7 Setting
E1
LANG:1 0 
 75 "status" 0 1 0 "s" 1
LANG:1 8 ReadBack
E1
LANG:1 0 
 90 "unit" 0 1 0 "s" 1
LANG:1 5 Units
E1
LANG:1 0 
 55 26 26 "" 1 1
LANG:1 2 #1
8 30 1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 3 0
1 0
25 1
"valuesTable"
""
1 245 20 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
2 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
368 138 702 411
"dyn_string gListOfDpElementToConnect;

main()
{
	string unit;
	dyn_string exceptionInfo;
	
	valuesTable.sortOnClick = FALSE;
	valuesTable.deleteAllLines;
	
	initDpeListForValuesTable(exceptionInfo);
		
	for(int i = 1; i <= dynlen(values); i++) 
	{
		gListOfDpElementToConnect[i] = $sDpName + values[i][INPUT_INDEX]; 
		unit = dpGetUnit(gListOfDpElementToConnect[i]);
		valuesTable.appendLine(\"parameter\", values[i][LABEL_INDEX], \"units\", unit);
	}

//	DebugN(\"settingsTable \"  + gListOfDpElementToConnect);
	fwColourTable_connectCellBackColToValueStatus(exceptionInfo);
	valuesTable.lineVisible(0);
}" 0
 "main(int xpos,string columnName,string value)
{
	dyn_string exceptionInfo;
		
	if (columnName == \"status\") 
	{
		if ((isExpert) || (isOperator))
		{
			ChildPanelOnCentralModal(	\"fwConfigs/fwAlarmOperationPopupPanel.pnl\",
									\"AlarmOp\", 
									makeDynString(\"$sDpe:\" + $sDpName + values[xpos + 1][INPUT_INDEX]));
		}
	}
	else if ((isExpert) || (isOperator))
	{
		fwGeneral_openDetailsPanel($sDpName + values[xpos + 1][INPUT_INDEX], exceptionInfo);
		if(dynlen(exceptionInfo) > 0)
			fwExceptionHandling_display(exceptionInfo);
	}
}" 0
 1 0 1 3 1 "parameter" 0 1 0 "s" 1
LANG:1 9 Parameter
E1
LANG:1 0 
 150 "status" 0 1 0 "s" 1
LANG:1 5 Value
E1
LANG:1 0 
 100 "units" 0 1 0 "s" 1
LANG:1 5 Units
E1
LANG:1 0 
 55 26 26 "" 1 1
LANG:1 2 #1
8 30 1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 3 0
1 0
13 2
"Close"
""
1 630 430 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
3 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
628 428 705 456
T 
1
LANG:1 5 Close
"main()
{
	PanelOff();
}
" 0
 E E "main()
{

}" 0

13 4
"Button1"
""
1 10 420 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
5 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
8 418 194 445
T 
1
LANG:1 27 Load settings from hardware
"main()
{
	float value;
		
	for(int i = 1; i <= dynlen(settings); i++)
	{
		dpGet($sDpName + settings[i][INPUT_INDEX], value);
		dpSet($sDpName + settings[i][OUTPUT_INDEX], value);
	}
}
" 0
 E E E
14 8
"modelText"
""
1 90 40 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
9 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
88 38 502 65
2 "s" 0 0 0 0 0 0 
E
"main()
{
	string modelName;
	dyn_string exceptionInfo;

	fwDevice_getModel(makeDynString($sDpName), modelName, exceptionInfo);
	this.text = modelName;
	
	if(dynlen(exceptionInfo)>0)
	{
		fwExceptionHandling_display(exceptionInfo);
	}
}" 0

E
14 9
"plantNameText"
""
1 90 70 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
10 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
88 68 502 95
2 "s" 0 0 0 0 0 0 
E
"main()
{
	this.text = $sDpName;
}" 0

E
14 10
"descriptionText"
""
1 90 100 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
11 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
88 98 502 125
2 "s" 0 0 0 0 0 0 
E
"main()
{
	this.text = dpGetComment($sDpName + \".\");
}" 0

E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0