V 10
1
LANG:1 8 (NoName)
PANEL,668 221 665 436 N "_3DFace" 0
EEE E E 1 -1 -1 0  0 0
"" 0 1
E"
" 0
 2
"CBRef""0"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 0
"panelTitle"
""
1 10 27 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 12 151 34
0 2 0 "s" 0 0 0 192 0 0  12 12
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-160-100-100-*-*-iso8859-1|-19,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 15 fwGeneral Tests
13 119
"Button13"
""
1 20 50 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
8 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
18 48 202 82
T 
1
LANG:1 27 fwGeneral_dynStringToString
"main()
{
	int pos;
	string theString;
	dyn_string theDynString;
	dyn_dyn_string 	testData;
	
	// Initialize test data
	testData[1] = makeDynString(\"1\", \"|\", \"1\");
	testData[2] = makeDynString(\"1 | 2\", \"|\", \"1|2\");
	testData[3] = makeDynString(\"1 | 2 | 3\", \"@\", \"1@2@3\");
	testData[4] = makeDynString(\"abc | def | ghi\", \"]\", \"abc]def]ghi\");
							

	// Run test												
	DebugN(\"START RESULTS FOR TEST fwGeneral_dynStringToString()\");
	for(int i = 1; i <= dynlen(testData); i++)
	{	
		theString = \"\";
		fwGeneral_stringToDynString(testData[i][1], theDynString);
		fwGeneral_dynStringToString(theDynString, theString, testData[i][2]);
		DebugN(\"Test\" + i + \" result:\");
		DebugN(\"\\t\" + theString + \" = \" + testData[i][3]);
	}
	DebugN(\"END RESULTS FOR TEST fwGeneral_dynStringToString()\");
}


" 0
 E E E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0