V 10
1
LANG:1 0 
PANEL,-1 -1 400 220 N "_3DFace" 0
E E E E E 1 -1 -1 0  30 30
""0  1
E "
#uses \"fwXML/fwXML.ctl\"

" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
13 0
"PUSH_BUTTON1"
""
1 40 30 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
0 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 87 -*-Arial-bold-r-normal-*-16-*-100-100-*-*-iso8859-1|-16,0,0,0,758,0,0,0,0,0,0,0,0,Arial
0 ""
 38 28 362 92

T 
1
LANG:1 40 Get Elements 'home', 'room' and 'floor'!
"
 
string xml_file = \"examples/fwXML/xmlExampleProcessTags.xml\";


void print_elements ( int docum , dyn_int elements )
{
string tagname;
mapping attribs;

  for ( int idx = 1 ; idx <= dynlen(elements) ; ++idx )
  {
    tagname = xmlNodeName ( docum , elements[idx] );
    attribs = xmlElementAttributes ( docum , elements[idx] );
    DebugN ( \"TagName of Node \" + elements[idx] + \" = '\" + tagname 
           + \"'   Attribs = '\" + (string)attribs + \"'\" );
  }
  DebugN(\"\");
}

main()
{
string xml_full_name = getPath(DATA_REL_PATH,xml_file);
string errMsg, errLin, errCol;
int rtn_code, docum;
dyn_string exInfo;
dyn_int elements;

  docum = xmlDocumentFromFile ( xml_full_name , errMsg , errLin , errCol );
  DebugN ( \"document = \" + docum );
  
  if ( docum < 0 )
  {
    DebugN ( \"Parsing Error-Message = '\" + errMsg + \"' Line=\" + errLin + \" Column=\" + errCol );
  }
  else
  {
    elements = fwXml_elementsByTagName ( docum , -1 , \"home\" , exInfo );
    print_elements ( docum , elements );
    
    elements = fwXml_elementsByTagName ( docum , -1 , \"room\" , exInfo );
    print_elements ( docum , elements );
    
    elements = fwXml_elementsByTagName ( docum , -1 , \"floor\" , exInfo );
    print_elements ( docum , elements );
    
    rtn_code = xmlCloseDocument ( docum );
    DebugN ( \"rtn_code = \" + rtn_code );
  }
}


" 0
 E E E
13 1
"PUSH_BUTTON2"
""
1 40 120 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 87 -*-Arial-bold-r-normal-*-16-*-100-100-*-*-iso8859-1|-16,0,0,0,758,0,0,0,0,0,0,0,0,Arial
0 ""
 38 118 362 182

T 
1
LANG:1 40 Get Only the 'room's within 'bedrooms's!
"
 
string xml_file = \"examples/fwXML/xmlExampleProcessTags.xml\";


void print_elements ( int docum , dyn_int elements )
{
string tagname;
mapping attribs;

  for ( int idx = 1 ; idx <= dynlen(elements) ; ++idx )
  {
    tagname = xmlNodeName ( docum , elements[idx] );
    attribs = xmlElementAttributes ( docum , elements[idx] );
    DebugN ( \"TagName of Node \" + elements[idx] + \" = '\" + tagname 
           + \"'   Attribs = '\" + (string)attribs + \"'\" );
  }
  DebugN(\"\");
}

main()
{
string xml_full_name = getPath(DATA_REL_PATH,xml_file);
string errMsg, errLin, errCol;
int rtn_code, docum;
dyn_string exInfo;
dyn_int elements;
dyn_int children;

  docum = xmlDocumentFromFile ( xml_full_name , errMsg , errLin , errCol );
  DebugN ( \"document = \" + docum );
  
  if ( docum < 0 )
  {
    DebugN ( \"Parsing Error-Message = '\" + errMsg + \"' Line=\" + errLin + \" Column=\" + errCol );
  }
  else
  {
    elements = fwXml_elementsByTagName ( docum , -1 , \"bedrooms\" , exInfo );
    print_elements ( docum , elements );
    
    for ( int idx = 1 ; idx <= dynlen(elements) ; ++idx )
    {
      children = fwXml_elementsByTagName ( docum , elements[idx] , \"room\" , exInfo );
      print_elements ( docum , children );
    }
    
    rtn_code = xmlCloseDocument ( docum );
    DebugN ( \"rtn_code = \" + rtn_code );
  }
}


" 0
 E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0