V 10
1
LANG:1 0 
PANEL,-1 -1 1108 494 N "_3DFace" 1
"$groupName"
"main()
{
  string groupName = $groupName;
  
  dyn_float df;
  dyn_string ds;
  
  ChildPanelOnCentralReturn(\"vision/MessageWarning2\", \"WARNING\", makeDynString(\"$1:Changing group components will affect\\nall projects using this group.\\nAre you sure you want to continue?\", \"$2:Yes\", \"$3:No\"), df, ds);
  if(dynlen(df) > 0 && df[1] < 1.)
  {
    PanelOff();
  } 
  
  if(fwInstallationDB_connect() != 0)
  {
    ChildPanelOnCentral(\"vision/MessageInfo1\", \"ERROR: DB Connection failed\", makeDynString(\"$1:DB Connection failed.\\nPlease check DB connection parameters\"));
  }else fwConfigurationDBSystemInformation_updateComponentTable(groupName);
}" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "#uses \"fwInstallation.ctl\"
    

updateAvailableComponentsTable()
{
  string systemName; 
  bool scanRecursively = cbScanRecursively.state(0);
  
  if(shapeExists(\"cbSystem\"))
    systemName = cbSystem.text;
  else
    systemName = \"\";
      
  fwInstallation_getComponentsInfo(\"tblAvailableComponents\", \"txtSourceDir\", systemName, scanRecursively);
  
}" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
13 2
"PUSH_BUTTON5"
""
1 1028 460 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 1026 458 1100 492

T 
1
LANG:1 5 Close
"main()
{
  PanelOff();
}" 0
 E E E
2 3
"PRIMITIVE_TEXT1"
""
1 40 78 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 10 12 48 26
0 2 2 "0s" 0 0 0 192 0 0  10 12 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 6 Group:
2 4
"PRIMITIVE_TEXT2"
""
1 212 84 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  this.text = $groupName;
}" 0
 E 0 1 1 2 1 E U  1 E 62 12 146 26
0 2 2 "0s" 0 0 0 192 0 0  62 12 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 14 xxxxxxxxxxxxxx
2 5
"Text2"
""
1 20 59 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 28 40 194 57
0 2 0 "0s" 0 0 0 192 0 0  28 40 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 27 Look for new components in:
25 6
"tblAvailableComponents"
""
1 -121.2 -28 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E "/**	if the user double clicks on the Status column 
the panel with the component details is shown
*/
main()
{	
	
	int xpos;
	string columnName;
	int columnNr;
	string componentName;
	string descFile;
	string directoryInfo;
	string typeOfDescription = \"xml\";
	
	// get the shape of the table
	shape tab = getShape(\"tblAvailableComponents\");
	
	// get the coordinates of the current cell
	getValue(tab, \"currentCell\", xpos, columnNr);
	columnName = tab.currentColumn();

	// check the column name
	 if((columnName == \"componentName\") || (columnName == \"componentVersion\"))
	 {
		
		// get the component name	 
		componentName = tab.cellValueRC(xpos, \"componentName\");
		
		// get the description file name - it is stored in a hidden column
		descFile = tab.cellValueRC(xpos, \"descFile\");	
			
			// open the panel with details of a component	 
	 		ChildPanelOnCentral(\"fwInstallation/fwInstallationComponentDetails.pnl\", \"fwInstallation_ComponentDetails:xml\",
			 makeDynString(\"$componentName:\" + componentName, \"$descFile:\" + descFile , \"$typeOfDescription:\" + typeOfDescription, \"$sourceDir:\" + txtSourceDir.text));
	}

}	" 0

11 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 24 168 396 412
E"/**	if the user  clicks on the Status column 
the column value is changed ( Install -> \"\" , or \"\" -> Install
*/
main(int row, string column, string value)
{
		// if user clicked on colStatus column
		if (column == \"add\") 
		{
			// check the old value
			if (value == \"Add\") 
			{
				// set new value to empty
				setValue(\"\",\"cellValueRC\",row,column,\" \");
			}
			else 
			{
				// set new value to install
				setValue(\"\",\"cellValueRC\",row,column,\"Add\");
			}
		}
					

}" 0
 1 0 1 5 1 "componentName" 20 1 0 "s" 1
LANG:1 14 Component Name
E
1
LANG:1 50 Subcomponents are shown with a leading underscore.

188 "componentVersion" 7 1 0 "s" 1
LANG:1 7 Version
E
1
LANG:1 0 

72 "add" 9 1 0 "s" 1
LANG:1 13 Add to group?
E
1
LANG:1 0 

90 "colStatus" 0 0 0 "s" 1
LANG:1 5 Add ?
E
1
LANG:1 0 

0 "descFile" 6 0 0 "s" 1
LANG:1 8 descFile
E
1
LANG:1 0 

70 
16 16 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 2 0 1 7
1 0
2 7
"Text4"
""
1 20 145 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 28 126 175 143
0 2 0 "0s" 0 0 0 192 0 0  28 126 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 21 Available Components:
20 8
"ShowSubComponents"
""
1 26 142 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 24 140 218 164
1
T 
1
LANG:1 24 Show also Sub-Components

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
E"main(int button, bool state)
{
	fwInstallation_getComponentsInfo(\"tblAvailableComponents\", \"txtSourceDir\");
        fwConfigurationDBSystemInformation_updateComponentTable($groupName);
}" 0
14 9
"txtSourceDir"
""
1 26 88 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 24 86 328 112
3 "0s" 0 0 0 0 0 -1  E E "main()
{
  updateAvailableComponentsTable();        
}" 0

13 10
"btnSelectSourceDir"
""
1 336 85 E E E 1 E 1 E N {0,0,0} E N "_Button" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 334 83 378 117

P 
14215660
"pictures/fileselektor.xpm"
1
LANG:1 0 
"main()
{
  string sPath;
  int    iErr;
  bool scanRecursively = cbScanRecursively.state(0);

  dpGet(\"fwInstallationInfo.lastSourcePath\", sPath);

  iErr = folderSelector( sPath );

  if(( iErr >= 1 ) && ( strlen( sPath ) > 0 ))
  {
    sPath += \"/\";
    if (_WIN32) strreplace( sPath, \"/\", \"//\" ); 
    // if NT -> replace 
    strreplace( sPath, \"//\", \"/\" );
    // update the widget with the directory path
    txtSourceDir.text = sPath;  
    dpSet(\"fwInstallationInfo.lastSourcePath\", sPath);

  }  
  // refresh the graphic tables with components  
  fwInstallation_getComponentsInfo(\"tblAvailableComponents\", \"txtSourceDir\", \"\", scanRecursively);
}" 0
 E E E
20 11
"cbScanRecursively"
""
1 28 56 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 26 54 150 88
1
T 
1
LANG:1 16 Scan recursively

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
E"main(int button, bool state)
{
   string systemName;
   
   if(shapeExists(\"cbSystem\"))
     systemName = cbSystem.text;
   else
     systemName = \"\";
       
  if(txtSourceDir.text != \"\"){
    fwInstallation_disablePanel();
    // refresh the graphic tables with components
    fwInstallation_getComponentsInfo(\"tblAvailableComponents\", \"txtSourceDir\", systemName, state);
  	fwInstallation_enablePanel();
  }
}" 0
13 13
"btnApplyDelete"
""
1 1030 420 E E E 1 E 1 E N {0,0,0} E N "_Button" E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 1028 418 1102 452

T 
1
LANG:1 6 Delete
"main()
{
  string componentName, componentVersion, descFile;
  dyn_string componentNames, componentVersions;
  dyn_string componentNamesOrder;
  string subComponentName, subComponentVersion;
  dyn_string descFiles;
  bool isSubComponent;
  string sourceDir;
  string groupName = $groupName;
  int i;
  int j;
  string strComponentFile;
  string subStrComponentFile;
  string date;
  dyn_string dynRequiredComponents;
  dyn_string dynRequiredComponentNames;
  dyn_string dynRequiredComponentVersions;
  dyn_string dynInitFiles; 
  dyn_string dynDeleteFiles; 
  dyn_string dynPostInstallFiles; 
  dyn_string dynPostDeleteFiles; 
  dyn_string dynConfigFiles_general;
  dyn_string dynConfigFiles_windows;
  dyn_string dynConfigFiles_linux;
  dyn_string dynDplistFiles;
  dyn_string dynPanelFiles;
  dyn_string dynScriptFiles;
  dyn_string dynLibFiles;
  dyn_string dynComponentFiles;
  dyn_string dynSubComponents;
  dyn_string dynScriptsToBeAdded;
  dyn_string dynFileNames;
  //subcomponents:
  bool subIsSubComponent;
  dyn_string subRequiredComponents;
  dyn_string subInitFiles; 
  dyn_string subDeleteFiles; 
  dyn_string subPostInstallFiles; 
  dyn_string subPostDeleteFiles; 
  dyn_string subConfigFiles_general;
  dyn_string subConfigFiles_windows;
  dyn_string subConfigFiles_linux;
  dyn_string subDplistFiles;
  dyn_string subPanelFiles;
  dyn_string subScriptFiles;
  dyn_string subLibFiles;
  dyn_string subComponentFiles;
  dyn_string subSubComponents;
  dyn_string subScriptsToBeAdded;
  dyn_string subFileNames;
  dyn_string componentFilesInOrder;

  string xmlDesc;
  dyn_float df;
  dyn_string ds;
  dyn_dyn_mixed groupComponentsInfo;
  dyn_string descFilesInOrder;
  
  // retrieve the component names and the description files of the components to be installed
  sourceDir = txtSourceDir.text;

  for(  i = 0 ; i < tbGroupComponents.lineCount(); i++)
  {
    if(tbGroupComponents.cellValueRC(i, \"colStatus\") == \"Delete\")
    {
      //DebugN(\"Appeding: \", tbGroupComponents.cellValueRC(i, \"component\"), tbGroupComponents.cellValueRC(i, \"version\"));
      dynAppend(componentNames, tbGroupComponents.cellValueRC(i, \"component\")); 
      dynAppend(componentVersions,  tbGroupComponents.cellValueRC(i, \"version\"));
      dynAppend(descFiles, tbGroupComponents.cellValueRC(i, \"descFile\"));
    }
  }      
  
  fwInstallation_putComponentsInOrder_Delete(componentNames, componentNamesOrder);
  
  //DebugN(\"*** componentNamesOrder: \", componentNames, componentNamesOrder);
  
  for(  i = 1 ; i <= dynlen(componentNamesOrder); i++)
  {
      dynClear(dynRequiredComponents);
      dynClear(dynInitFiles);
      dynClear(dynDeleteFiles);
      dynClear(dynPostInstallFiles);
      dynClear(dynPostDeleteFiles);
      dynClear(dynConfigFiles_general);
      dynClear(dynConfigFiles_windows);
      dynClear(dynConfigFiles_linux);
      dynClear(dynDplistFiles);
      dynClear(dynPanelFiles);
      dynClear(dynScriptFiles);
      dynClear(dynLibFiles);
      dynClear(dynComponentFiles);
      dynClear(dynSubComponents);
      dynClear(dynScriptsToBeAdded);
      dynClear(dynFileNames);
      dynClear(dynSubComponents);
      componentName = \"\";
      componentVersion = \"\";
      date = \"\";
      isSubComponent = 0;
  
      descFile = descFiles[dynContains(componentNames, componentNamesOrder[i])];    
      
      //DebugN(\"Deleting component: \", componentNamesOrder[i], \" descFile: \", descFile);
      
      //Check if there are sub-components
      fileToString(descFile, strComponentFile);
      _fwInstallation_decodeXML(strComponentFile,
				componentName, componentVersion, date,
				dynRequiredComponents,
				isSubComponent,
				dynInitFiles, dynDeleteFiles, 
				dynPostInstallFiles, 
                                dynPostDeleteFiles, 
				dynConfigFiles_general, 
                                dynConfigFiles_windows, 
                                dynConfigFiles_linux,
				dynDplistFiles,
				dynPanelFiles,
				dynScriptFiles,
				dynLibFiles,
				dynComponentFiles,
				dynSubComponents,
				dynScriptsToBeAdded,
				dynFileNames);
      
      
      if(dynlen(dynSubComponents)> 0)
      {
        ChildPanelOnCentralReturn(\"vision/MessageWarning2\", \"Question\", makeDynString(\"$1:Component \" + componentName + \" contains sub-components.\\nSub-components will also be delete from the group\", \"$2:OK\", \"$3:Cancel\"), df, ds);
        if(dynlen(df) && df[1] < 1.)
        {
          fwConfigurationDBSystemInformation_updateComponentTable(groupName);
          DebugN(\"Component not deleted from group. Action aborted by the user\");
          return;
        }
        else{
          for(j = 1; j <= dynlen(dynSubComponents); j++)
          {
            
            sourceDir = descFile;
            strreplace(sourceDir, componentNamesOrder[i] + \".xml\", \"\");
            
            //DebugN(\"Source dir to subComponent: \", dynSubComponents[j], \" sourceDir: \", sourceDir); 
                                              
            fileToString(sourceDir + \"/\" + dynSubComponents[j], subStrComponentFile);
            
      
            _fwInstallation_decodeXML(subStrComponentFile,
				      subComponentName, 
                                      subComponentVersion, 
                                      date,
			              subRequiredComponents,
				      subIsSubComponent,
				      subInitFiles, dynDeleteFiles, 
				      subPostInstallFiles, 
                                      subPostDeleteFiles, 
				      subConfigFiles_general, 
                                      subConfigFiles_windows, 
                                      subConfigFiles_linux,
				      subDplistFiles,
				      subPanelFiles,
				      subScriptFiles,
				      subLibFiles,
				      subComponentFiles,
				      subSubComponents,
				      subScriptsToBeAdded,
				      subFileNames);  
            
            //DebugN(\"****FVR: Unregistering : \", subComponentName, subComponentVersion, groupName);        
            fwInstallationDB_unregisterGroupComponent(subComponentName, subComponentVersion, groupName);
          }          
        }
      }
      
    
      fwInstallationDB_unregisterGroupComponent(componentNamesOrder[i], componentVersions[dynContains(componentNames, componentNamesOrder[i])], groupName);
      //DebugN(\"Unregistering component: \" + componentNamesOrder[i] + \" version: \" + componentVersions[dynContains(componentNames, componentNamesOrder[i])]);
      
      
  }  
  fwConfigurationDBSystemInformation_updateComponentTable(groupName);
}







" 0
 E E E
13 15
"btnRefresh"
""
1 950 420 E E E 1 E 1 E N {0,0,0} E N "_Button" E E
 E E
29 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 948 418 1022 452

T 
1
LANG:1 7 Refresh
"main()
{
  fwConfigurationDBSystemInformation_updateComponentTable($groupName);
}" 0
 E E E
13 16
"Button1"
""
1 250 418 E E E 1 E 1 E N {0,0,0} E N "_Button" E E
 E E
31 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 248 416 322 450

T 
1
LANG:1 7 Refresh
"main()
{
	// refresh the  table widget
	fwInstallation_getComponentsInfo(\"tblAvailableComponents\", \"txtSourceDir\");
}" 0
 E E E
25 17
"tbGroupComponents"
""
1 414 170 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
33 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 412 168 1102 410
E"main(int row, string column, string value)
{
  // check the name of column where the user clicked
  if (column == \"colStatus\") 
    if (value == \"Delete\") 
      setValue(\"\",\"cellValueRC\",row,\"colStatus\",\" \");
    else
      setValue(\"\",\"cellValueRC\",row,\"colStatus\",\"Delete\");

}" 0
 1 0 1 4 0 "component" 21 1 0 "s" 1
LANG:1 9 Component
E
1
LANG:1 0 

200 "version" 5 1 0 "s" 1
LANG:1 7 Version
E
1
LANG:1 0 

60 "colStatus" 4 1 0 "s" 1
LANG:1 6 Delete
E
1
LANG:1 0 

50 "descFile" 38 1 0 "s" 1
LANG:1 3 XML
E
1
LANG:1 0 

358 
16 16 10 10
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 2 1 1 7
1 0
13 14
"btnApplyInstall"
""
1 330 418 E E E 1 E 1 E N {0,0,0} E N "_Button" E E
 E E
27 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 328 416 402 450

T 
1
LANG:1 3 Add
"// Install the components
main()
{
  string componentName, componentVersion;
  dyn_string componentNames, componentVersions;
  string subComponentName, subComponentVersion;
  dyn_string descFiles;
  bool isSubComponent;
  string sourceDir;
  string groupName = $groupName;
  int i;
  int j;
  string strComponentFile;
  string subStrComponentFile;
  string date;
  dyn_string dynRequiredComponents;
  dyn_string dynRequiredComponentNames;
  dyn_string dynRequiredComponentVersions;
  dyn_string dynInitFiles; 
  dyn_string dynDeleteFiles; 
  dyn_string dynPostInstallFiles; 
  dyn_string dynPostDeleteFiles; 
  dyn_string dynConfigFiles_general;
  dyn_string dynConfigFiles_windows;
  dyn_string dynConfigFiles_linux;
  dyn_string dynDplistFiles;
  dyn_string dynPanelFiles;
  dyn_string dynScriptFiles;
  dyn_string dynLibFiles;
  dyn_string dynComponentFiles;
  dyn_string dynSubComponents;
  dyn_string dynScriptsToBeAdded;
  dyn_string dynFileNames;
  //subcomponents:
  bool subIsSubComponent;
  dyn_string subRequiredComponents;
  dyn_string subInitFiles; 
  dyn_string subDeleteFiles; 
  dyn_string subPostInstallFiles; 
  dyn_string subPostDeleteFiles; 
  dyn_string subConfigFiles_general;
  dyn_string subConfigFiles_windows;
  dyn_string subConfigFiles_linux;
  dyn_string subDplistFiles;
  dyn_string subPanelFiles;
  dyn_string subScriptFiles;
  dyn_string subLibFiles;
  dyn_string subComponentFiles;
  dyn_string subSubComponents;
  dyn_string subScriptsToBeAdded;
  dyn_string subFileNames;
  dyn_string componentFilesInOrder;

  string xmlDesc;
  dyn_float df;
  dyn_string ds;
  dyn_dyn_mixed groupComponentsInfo;
  dyn_string descFilesInOrder;
  
  // retrieve the component names and the description files of the components to be installed
  sourceDir = txtSourceDir.text;

  for(  i = 0 ; i < tblAvailableComponents.lineCount(); i++)
  {
    if((tblAvailableComponents.cellValueRC(i, \"add\") == \"Add\"))
    {
      dynAppend(componentNames, tblAvailableComponents.cellValueRC(i, \"componentName\")); 
      dynAppend(componentVersions,  tblAvailableComponents.cellValueRC(i, \"componentVersion\"));
      dynAppend(descFiles, tblAvailableComponents.cellValueRC(i, \"descFile\"));
    }
  }      
  
  fwInstallation_putComponentsInOrder_Install(componentNames, componentVersions, descFiles, descFilesInOrder);
  
  for(  i = 1 ; i <= dynlen(descFilesInOrder); i++)
  {
      dynClear(dynRequiredComponents);
      dynClear(dynInitFiles);
      dynClear(dynDeleteFiles);
      dynClear(dynPostInstallFiles);
      dynClear(dynPostDeleteFiles);
      dynClear(dynConfigFiles_general);
      dynClear(dynConfigFiles_windows);
      dynClear(dynConfigFiles_linux);
      dynClear(dynDplistFiles);
      dynClear(dynPanelFiles);
      dynClear(dynScriptFiles);
      dynClear(dynLibFiles);
      dynClear(dynComponentFiles);
      dynClear(dynSubComponents);
      dynClear(dynScriptsToBeAdded);
      dynClear(dynFileNames);
      dynClear(dynSubComponents);
      dynClear(dynRequiredComponentNames);
      dynClear(dynRequiredComponentVersions);
      componentName = \"\";
      componentVersion = \"\";
      date = \"\";
      isSubComponent = 0;
      
      
      
      //Check if there are sub-components
      fileToString(descFilesInOrder[i], strComponentFile);
      _fwInstallation_decodeXML(strComponentFile,
				componentName, componentVersion, date,
				dynRequiredComponents,
				isSubComponent,
				dynInitFiles, dynDeleteFiles, 
				dynPostInstallFiles, 
                                dynPostDeleteFiles, 
				dynConfigFiles_general, 
                                dynConfigFiles_windows, 
                                dynConfigFiles_linux,
				dynDplistFiles,
				dynPanelFiles,
				dynScriptFiles,
				dynLibFiles,
				dynComponentFiles,
				dynSubComponents,
				dynScriptsToBeAdded,
				dynFileNames);
      
      
      if(dynlen(dynSubComponents)> 0)
      {
        ChildPanelOnCentralReturn(\"vision/MessageWarning2\", \"Question\", makeDynString(\"$1:Component \" + componentName + \" contains sub-components.\\nSub-components will also be added to the group\", \"$2:OK\", \"$3:Cancel\"), df, ds);
        if(dynlen(df) && df[1] < 1.)
        {
          fwConfigurationDBSystemInformation_updateComponentTable(groupName);
          DebugN(\"Component not added to group. Action aborted by the user\");
          return;
        }
        else{
          for(j = 1; j <= dynlen(dynSubComponents); j++)
          {
            
            //DebugN(\"Component: \" + dynSubComponents[j] + \" has to be added to group.\"); 
            fileToString(sourceDir + \"/\" + dynSubComponents[j], subStrComponentFile);
            
      
            _fwInstallation_decodeXML(subStrComponentFile,
				      subComponentName, 
                                      subComponentVersion, 
                                      date,
			              subRequiredComponents,
				      subIsSubComponent,
				      subInitFiles, dynDeleteFiles, 
				      subPostInstallFiles, 
                                      subPostDeleteFiles, 
				      subConfigFiles_general, 
                                      subConfigFiles_windows, 
                                      subConfigFiles_linux,
				      subDplistFiles,
				      subPanelFiles,
				      subScriptFiles,
				      subLibFiles,
				      subComponentFiles,
				      subSubComponents,
				      subScriptsToBeAdded,
				      subFileNames);  
            //DebugN(\"****FVR: Registering: \", subComponentName, subComponentVersion, subIsSubComponent, sourceDir + \"/\" + dynSubComponents[j], groupName);        
            fwInstallationDB_registerComponentInGroup(subComponentName, subComponentVersion, subIsSubComponent, sourceDir + \"/\" + dynSubComponents[j], groupName);
          }          
        }
      }
      
      if(dynlen(dynRequiredComponents))
      {
        //DebugN(\"These are the raw required components: \", dynRequiredComponents);
        
        //Check if required components have alaredy been added to the group
        fwInstallationDB_getGroupComponents(groupName, groupComponentsInfo);
        
        //DebugN(\"Group components\", groupName, groupComponentsInfo);
        
        //Prepare list of required componetns and versions
        for(int k = dynlen(dynRequiredComponents); k >= 1 ; k--)
        {
          dyn_string dsTmp = strsplit(dynRequiredComponents[k], \"=\");
          dynAppend(dynRequiredComponentNames, dsTmp[1]);
          dynAppend(dynRequiredComponentVersions, dsTmp[2]);
        }
        
        //DebugN(\"Components and versions\", dynRequiredComponentNames, dynRequiredComponentVersions);
        
        for(int k = 1; k <= dynlen(groupComponentsInfo); k++)
        {
          if(dynContains(dynRequiredComponentNames, groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX]))
          {
            //DebugN(\"Found component\",groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX], \" comparing versions now...\");
            //DebugN(\"Versions to the compared: \", dynRequiredComponentVersions[dynContains(dynRequiredComponentNames, groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX])], groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_VERSION_IDX]);
            
            //DebugN(dynRequiredComponentVersions[dynContains(dynRequiredComponentNames, groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX])], groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_VERSION_IDX]);
            
            if(_fwInstallation_CompareVersions(groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_VERSION_IDX], dynRequiredComponentVersions[dynContains(dynRequiredComponentNames, groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX])]))
            {
              //DebugN(\"Version is ok, removing component from list\",groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX], \" comparing versions now...\");

              //Equal or newer version installed. Remove this component from the list of required components
              dynRemove(dynRequiredComponentNames, dynContains(dynRequiredComponentNames, groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX]));
              dynRemove(dynRequiredComponentVersions, dynContains(dynRequiredComponentNames, groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX]));
              
            }  
          }
        }

        if(dynlen(dynRequiredComponentNames))        
        {    
          ChildPanelOnCentralReturn(\"fwConfigurationDBSystemInformation/fwConfigurationDBSystemInformation_componentDependency.pnl\", \"Question\", makeDynString(\"$componentName:\" + componentName, \"$requiredComponentNames:\" + dynRequiredComponentNames, \"$requiredComponentVersions:\" + dynRequiredComponentVersions), df, ds);
          if(dynlen(df) && df[1] < 1.)
          {
            fwConfigurationDBSystemInformation_updateComponentTable(groupName);
            DebugN(\"Component not added to group. Action aborted by the user\");
            return;
          }
        }
      }
      
      fwInstallationDB_registerComponentInGroup(componentName, componentVersion, isSubComponent, descFilesInOrder[i], groupName);
      //DebugN(\"Registering component: \" + componentName + \" version: \" + componentVersion + \" sourceDir: \" + sourceDir);
      
//      //All OK, display that the component has been added
//      tblAvailableComponents.cellValueRC(i, \"add\", \"Added\");
      
  }  
  fwConfigurationDBSystemInformation_updateComponentTable(groupName);
}
" 0
 E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0