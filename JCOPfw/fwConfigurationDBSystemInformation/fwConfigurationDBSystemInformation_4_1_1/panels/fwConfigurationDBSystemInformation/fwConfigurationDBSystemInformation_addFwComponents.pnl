V 10
1
LANG:1 0 
PANEL,-1 -1 1193 610 N "_3DFace" 2
"$item"
"$type"
"main()
{
  dyn_string projectNames;
  dyn_string groupNames;
  dyn_string hostnames; 
  dyn_string ips;
  dyn_string macs;
  dyn_string ips2;
  dyn_string macs2;
  dyn_string bmc_ips;
  dyn_string bmc_ips2;
  dyn_string ds;  
  
  dynClear(projectNames);
  dynClear(hostnames);
  dynClear(groupNames);
  
  
  tbProjectsGroups.deleteAllLines();
  if(fwInstallationDB_connect() != 0)
  {
    ChildPanelOnCentral(\"vision/MessageInfo1\", \"ERROR: DB Connection failed\", makeDynString(\"$1:DB Connection failed.\\nPlease check DB connection parameters\"));
  }
  
  if(fwInstallationDB_getComponentGroups(groupNames) != 0)
  {
    ChildPanelOnCentral(\"vision/MessageInfo1\", \"DB ERROR\", makeDynString(\"$1:Could not read list of FW Component Groups from DB\"));
    return;
  }
  
  //DebugN(\"Groups: \", groupNames); 
  
  for(int i = 1; i <= dynlen(groupNames); i++){
   tbProjectsGroups.appendLines(1);
   tbProjectsGroups.rowHeader(i-1, groupNames[i]);    
  } 
        
  switch($type)
  {
    case FW_INST_SYSTEM_TYPE: 
      if(fwInstallationDB_getHosts(hostnames, ips, macs, ips2, macs2, bmc_ips, bmc_ips2) != 0){
        ChildPanelOnCentral(\"vision/MessageInfo1\", \"DB ERROR\", makeDynString(\"$1:Could not read list of computers from DB\"));
        return;
      }  
    break; //end of system
    
    case FW_INST_COMPUTER_TYPE: dynAppend(hostnames, $item);
      tfComputerPattern.text = $item;
      tfComputerPattern.enabled = false;
      break; //end of computer
    
    case FW_INST_PROJECT_TYPE: ds = strsplit($item, FW_SYS_STAT_SEPARATOR);
      dynAppend(hostnames, ds[1]);
      dynAppend(projectNames, ds[2]);
      tfComputerPattern.text = ds[1];
      tfComputerPattern.enabled = false;
      tfProjectPattern.text = ds[2];
      tfProjectPattern.enabled = false;
      
      computerProjects[1][1] = ds[1];
      computerProjects[1][2] = ds[2];
      

      break; //end of project
    
    default: return;
             
  }//end of switch

  
  for(int i = 1 ; i <= dynlen(hostnames); i++)
  {
    computerProjects[i][1] = hostnames[i];    

    dynClear(projectNames);
    
    if($type != FW_INST_PROJECT_TYPE)
    {
      if(fwInstallationDB_getPvssProjects(projectNames, computerProjects[i][1]) != 0){
        ChildPanelOnCentral(\"vision/MessageInfo1\", \"DB ERROR\", makeDynString(\"$1:Could not read list of project from DB\"));
        return;
      }
    }    
    for(int j = 2; j <= (dynlen(projectNames) + 1); j++)
    {
      computerProjects[i][j] = projectNames[j-1];
    }//end of loop over j    
  }

  //DebugN(\"$type, computerProjects: \", $type, computerProjects);
  
}" 0
 E E E E 1 -1 -1 0  78 56
""0  1
E "#uses \"fwInstallationDB.ctl\"

dyn_dyn_string computerProjects;    

registerGroupsInProjects(bool updatePanel = true)
{
  string project;
  string group;
  string tag;
  string computer;
  int error = 0;
  int col;
  bool silent, force, overwrite;
  string computerProject;
  dyn_dyn_mixed componentsInfo;
  dyn_dyn_mixed groupComponentsInfo;
  string conflictingComponentsNames;
  string conflictingComponentsVersions;
  string conflictingExisintingComponentsVersions;
  dyn_string ds;
  dyn_float df;
  
  silent = cbSilent.state(0);
  force = cbForce.state(0);
  overwrite = cbOverwrite.state(0);
  //DebugN(\"Total number of columns: \", tbProjectsGroups.columnCount());
  
  for(int i = 1; i <= tbProjectsGroups.columnCount(); i++) //scan full table looking for actions to be performed.
  {
    project = \"\";
    computer = \"\";
    
    getValue(\"tbProjectsGroups\", \"columnHeader\", i-1, computerProject);
    if(computerProject == \"\")
      return;
    
    ds = strsplit(computerProject, \"@\");
    
    if(dynlen(ds) < 2)
    {
      ChildPanelOnCentral(\"vision/MessageInfo1\", \"ERROR\", makeDynString(\"$1:Invalid project/computer names\"));
      return;
    }
    project = ds[1];
    computer = ds[2];
    
    if(project == \"\" || computer == \"\")
      continue;

    
    fwInstallationDB_getProjectComponents(componentsInfo, project, computer);

        
    for(int j = 1; j <= tbProjectsGroups.lineCount(); j++){
      
      col = j - 1;
      tag = \"\";
      
      getMultiValue(\"tbProjectsGroups\", \"cellValueRC\", col, \"#\"+i, tag,
                    \"tbProjectsGroups\", \"rowHeader\", col, group);
      
      if(tag == \"Register\"){
        
        //DebugN(\"Adding new group \" + group + \" to project \" + project + \" computer \" + computer);
        //Check if there are conflicts at the component level for each of the projects:
        fwInstallationDB_getGroupComponents(group, groupComponentsInfo);  
        conflictingComponentsNames = \"\";  
        conflictingComponentsVersions = \"\";
        conflictingExisintingComponentsVersions = \"\";  
        
        for(int k = 1 ; k <= dynlen(groupComponentsInfo); k++)
        {
          for(int l = 1; l <= dynlen(componentsInfo); l++)
          {
            if(groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX ] == componentsInfo[l][FW_INSTALLATION_DB_COMPONENT_NAME_IDX ] &&
               groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_VERSION_IDX ] != componentsInfo[l][FW_INSTALLATION_DB_COMPONENT_VERSION_IDX ])
            {
              conflictingComponentsNames += groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_NAME_IDX ] + \"|\";
              conflictingComponentsVersions += groupComponentsInfo[k][FW_INSTALLATION_DB_COMPONENT_VERSION_IDX ] + \"|\"; 
              conflictingExisintingComponentsVersions += componentsInfo[l][FW_INSTALLATION_DB_COMPONENT_VERSION_IDX ] + \"|\"; 
            }
          }
        }
        
        if(conflictingComponentsNames == \"\")
        {
          if(fwInstallationDB_registerGroupInProject(group, overwrite, force, silent, \"\", project, computer) == 0)
          {
            setValue(\"tbProjectsGroups\", \"cellValueRC\", col, \"#\"+i, \"Registered\");      
          }else{
            ChildPanelOnCentralModal(\"vision/MessageInfo1\", \"DB registration error\", makeDynString(\"$1: Could not register group of FW Components\\n\" + group + \" in project: \" + project + \"\\ncomputer: \" + computer));
          }
        }
        else
        {
          DebugN(\"ERROR: Group: \"+ group +\" cannot be added to project: \" + project + \". There are conflicts at the component level: \" + conflictingComponentsNames);
          ChildPanelOnCentralModalReturn(\"fwConfigurationDBSystemInformation/fwConfigurationDBSystemInformation_showConflicts.pnl\", \"Group conflicts\", makeDynString(\"$project:\"+ project,\"$group:\" + group, \"$components:\" + conflictingComponentsNames, \"$versions:\" + conflictingComponentsVersions, \"$existingVersions:\" + conflictingExisintingComponentsVersions), df, ds);
          if(dynlen(df) && df[1] < 1.)
            return;
        }
      }
      else if(tag == \"Unregister\"){
        if(fwInstallationDB_unregisterProjectGroup(group, project, computer) == 0)
        {
          setValue(\"tbProjectsGroups\", \"cellValueRC\", col, \"#\"+i, \"\");      
        }
        else
        {
          ChildPanelOnCentralModal(\"vision/MessageInfo1\", \"DB unregistration error\", makeDynString(\"$1: Could not unregister group of FW Components\\n\" + group + \" from project: \" + project + \" computer: \" + computer));
        }
      }
    }//end of loop over j => groups  
    
  }//Loop over all projects
  
}//end of function


clearTableValues()
{
   for(int i = 1; i <= this.lineCount(); i++)
    for(int j = 1; j <= this.columnCount(); j++)
      this.cellValueRC(i-1, \"#\" + j, \"\");
 }
" 0
 2
"CBRef" "1"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 5
"tbProjectsGroups"
""
1 22 250 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main(int row, string column)
{
    //string project;
  
  //this.cellValueRC(0, column, project);
  
  //if(project != \"\" && value == \"\"){
    if(value == \"\"){
    this.cellValueRC(row, column, \"Install\");
    this.cellBackColRC(row, column, \"cyan\");
  //}else if(project != \"\" && value == \"Install\")
  }else if(value == \"Install\")
  {
    this.cellValueRC(row, column, \"\");
    this.cellBackColRC(row, column, \"_Window\");
  }
}" 0
 E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 20 248 1182 564
"main()
{
  this.tableMode(TABLE_SELECT_MULTIPLE);
  this.selectByClick(TABLE_SELECT_LINE_COLUMN);

}" 0
"main(int row, string column, string value)
{
  string project;
  string host;
  string hostProject;
  dyn_string ds;
  
  getValue(\"\", \"columnHeader\", column, hostProject);
  
  ds = strsplit(hostProject, \"@\");
  if(dynlen(ds) < 2)
  {
    ChildPanelOnCentral(\"vision/MessageInfo1\", \"ERROR\", makeDynString(\"$1:Invalid project/computer names\"));
    return; 
  }
  project = ds[1];
  host = ds[2];
  
  if (project == \"\" || host == \"\")
     return;
  
  if(value == \"\")
    this.cellValueRC(row, column, \"Register\");
  else if(value == \"Register\")
    this.cellValueRC(row, column, \"\");
  else if(value == \"Registered\")
    this.cellValueRC(row, column, \"Unregister\");
  else if(value == \"Unregister\")
    this.cellValueRC(row, column, \"Registered\");

}" 0
 1 1 1 11 1 "#1" 13 0 0 "s" 1
LANG:1 2 #1
E
1
LANG:1 0 

128 "#2" 13 0 0 "s" 1
LANG:1 2 #2
E
1
LANG:1 0 

128 "#3" 13 0 0 "s" 1
LANG:1 2 #3
E
1
LANG:1 0 

128 "#4" 13 0 0 "s" 1
LANG:1 2 #4
E
1
LANG:1 0 

128 "#5" 13 0 0 "s" 1
LANG:1 2 #5
E
1
LANG:1 0 

128 "#6" 13 0 0 "s" 1
LANG:1 2 #6
E
1
LANG:1 0 

128 "#7" 13 0 0 "s" 1
LANG:1 2 #7
E
1
LANG:1 0 

128 "#8" 13 0 0 "s" 1
LANG:1 2 #8
E
1
LANG:1 0 

128 "#9" 13 0 0 "s" 1
LANG:1 2 #9
E
1
LANG:1 0 

128 "#10" 13 0 0 "s" 1
LANG:1 3 #10
E
1
LANG:1 0 

128 "#11" 13 0 0 "s" 1
LANG:1 3 #11
E
1
LANG:1 0 

128 
16 16 "" 1 1
LANG:1 2 #1
10 128
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 1 1 1 7
1 0
13 6
"PUSH_BUTTON1"
""
1 1004 570 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 1002 568 1088 598

T 
1
LANG:1 5 Apply
"main()
{
  registerGroupsInProjects();
}" 0
 E E E
13 7
"PUSH_BUTTON2"
""
1 1096 570 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 1094 568 1180 598

T 
1
LANG:1 6 Cancel
"main()
{
  PanelOffReturn(makeDynFloat(0.), makeDynString(\"\"));
}" 0
 E E E
13 8
"PUSH_BUTTON3"
""
1 910 570 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 908 568 994 598

T 
1
LANG:1 2 OK
"main()
{
  registerGroupsInProjects(false);
  PanelOffReturn(makeDynFloat(1.), makeDynString(\"OK\"));
}" 0
 E E E
2 9
"PRIMITIVE_TEXT1"
""
1 20 30 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 20 10 277 24
0 2 2 "0s" 0 0 0 192 0 0  20 10 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 42 Assign Groups of FW Components to Projects
20 10
"cbSilent"
""
1 40 137 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 38 135 222 159
1
T 
1
LANG:1 19 Silent Installation

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
EE20 11
"cbOverwrite"
""
1 40 167 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 38 165 222 189
1
T 
1
LANG:1 15 Overwrite Files

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
EE20 12
"cbForce"
""
1 40 197 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 38 195 222 219
1
T 
1
LANG:1 41 Force installation of required components

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
EE30 13
"FRAME1"
""
1 10 33 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
19 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1 0 1.08547008547009 10 74.179487179487 0 E 10 33 401 151
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 17 Installation Mode
2 14
"PRIMITIVE_TEXT2"
""
1 30 50 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 30 50 190 70
0 2 2 "0s" 0 0 0 64 0 0  30 50 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 24 Computer search pattern:
2 15
"PRIMITIVE_TEXT3"
""
1 30 50 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
22 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 30 80 190 100
0 2 2 "0s" 0 0 0 64 0 0  30 80 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 23 Project search pattern:
14 16
"tfComputerPattern"
""
1 160 50 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
23 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 158 48 282 69
3 "0s" 0 0 0 0 0 -1  E "main()
{
  this.text = \"*\";
}" 0
 E
14 17
"tfProjectPattern"
""
1 160 80 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 158 78 282 99
3 "0s" 0 0 0 0 0 -1  E "main()
{
  this.text = \"*\";
}" 0
 E
13 18
"PUSH_BUTTON4"
""
1 300 70 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
26 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 298 68 392 102

T 
1
LANG:1 6 Search
"main()
{
  string computerPattern = tfComputerPattern.text;
  string projectPattern = tfProjectPattern.text;
  int col = 0;
  string group;
  dyn_string groupNames;
  dyn_int groupIds;
  string header;
  
  for(int i = 1; i <= tbProjectsGroups.columnCount(); i++)
  {
    getValue(\"tbProjectsGroups\", \"columnHeader\", i-1, header);
    if(header == \"\")
      break;
    else
    {
      for(int j = 1; j <= tbProjectsGroups.lineCount(); j++)
      {
        tbProjectsGroups.cellValueRC(i-1, \"#\" + j, \"\");
      }
      
      tbProjectsGroups.columnHeader(i-1, \"\");
      tbProjectsGroups.columnVisibility(i-1, false);
    }
  }
  
  for(int i = 1; i <= dynlen(computerProjects); i++ )
  {
    for(int j = 2; j <= dynlen(computerProjects[i]); j++)
    {
            
      if(patternMatch(\"*\" + computerPattern + \"*\", computerProjects[i][1]) &&
         patternMatch(\"*\" + projectPattern + \"*\", computerProjects[i][j]))  
      {
        //DebugN(\"Found: \", computerProjects[i][1], computerProjects[i][j]);
        tbProjectsGroups.columnHeader(col, computerProjects[i][j] + \"@\" + computerProjects[i][1]);
        tbProjectsGroups.columnVisibility(col, true);
      }
      
      //Check if registered groups for each project:
      dynClear(groupNames);
      fwInstallationDB_getProjectGroups(groupNames, groupIds, true, computerProjects[i][j], computerProjects[i][1]);
      for(int z = 0; z < tbProjectsGroups.lineCount(); z++)
      {
        getValue(\"tbProjectsGroups\", \"rowHeader\", z, group);
        //DebugN(\"z, group: \", z, group);
        if(dynContains(groupNames, group) > 0)
        {
          //DebugN(\"Match\", \"#\"+(col+1), z);
          //DebugN(\"Found: \", group, \" in \", groupNames);
          tbProjectsGroups.cellValueRC(z, \"#\" + (col + 1), \"Registered\");
        }
      }
      ++col;  
    }
  } 
}" 0
 E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0