V 10
1
LANG:1 0 
PANEL,-1 -1 913 525 N "_3DFace" 3
"$cpu"
"$fmcNodeName"
"$sDpName"
E E E E E 1 -1 -1 0  0 0
""0  1
E E 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 0
"TableCpu"
""
1 30 69.9999999999994 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main()
{
dyn_string name;
int n,k;

getValue(\"TableCpu\", \"currentCell\", n, k);
name=this.getLineN(n);

     switch (name[1]) 
	     {
	       case \"idle\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"idle:\\n\\nTime percentage the CPU has spent not working.\"));
         break; 
	       case \"iowait\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"iowait:\\n\\nTime percentage the CPU has spent in waiting for \\nI/O to complete.\"));
         break;   
	       case \"irq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"irq:\\n\\nTime percentage the CPU has spent in servicing \\ninterrupts (top halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"nice\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"nice:\\n\\nTime percentage the CPU has spent in niced \\nprocesses in user mode. Time spent in niced tasks \\nwill also be counted in system and user time.\"));
         break;       
	       case \"softirq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"softirq:\\n\\nTime percentage the CPU has spent in servicing \\nsoftirqs (bottom halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"system\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"system:\\n\\nTime percentage the CPU has spent in processes \\nexecuting in kernel mode.\"));
         break;   
	       case \"user\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"user:\\n\\nTime percentage the CPU has spent in normal processes \\nexecuting in user mode.\"));
         break; 
	       case \"ctxtRate\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"ctxtRate:\\n\\nTotal number of context switches per second across \\nall the CPUs.\"));
         break;              
                                 
      
   }
}" 0
 "main()
{
	int n,k;
	dyn_string name, params;

	getValue(\"TableCpu\", \"currentCell\", n, k);
	name=this.getLineN(n);

	if(name[1] == \"ctxtRate\"){
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + name[1]);
	}
	else{
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + $cpu + \".\" + name[1]);
	}

	ChildPanelOnCentral(\"fwFarmMonitorControl/components/fwGeneralTrend.pnl\",
      \"trendPanel\" + $fmcNodeName,
      params);
     
}" 0

1 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 28 67.9999999999994 292 211.999999999999
"main()
{
  int loopTabelCpu=5;  
  dyn_int linesSelected;
  dyn_string dyn_dpName, dyn_label, dyn_value;
        
  this.visible = true;
  this.enableColumnResize = true;
  this.deleteAllLines;
  this.tableMode(TABLE_SELECT_MULTIPLE);
  this.selectByClick(TABLE_SELECT_LINE);

  dyn_dpName = dpNames($sDpName + \".readings.rate.*\");

  for (int i=1; i<=dynlen(dyn_dpName); i++){
    dyn_label[i] = dyn_dpName[i];
    strreplace(dyn_label[i], $sDpName + \".readings.rate.rate_\", \"\");
  }

  while(TRUE){
    linesSelected = this.getSelectedLines();
    for (int i=1; i<=dynlen(dyn_label); i++){
      dpGet(dyn_dpName[i] + \":_online.._value\", dyn_value[i]);
      dyn_value[i] = dpValToString(dyn_dpName[i], dyn_value[i]);
      this.updateLine(1, \"label\", dyn_label[i], \"value\", dyn_value[i]);
    }
    
    this.addSelectLines(linesSelected);
    delay(loopTabelCpu);
  }
}" 0
E 1 0 1 2 1 "label" 12 1 0 "s" 1
LANG:1 8 Property
E
1
LANG:1 0 

150 "value" 7 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

90 
14 14 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
13 4
"PUSH_BUTTON1"
""
1 810 479.999999999999 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 808 477.999999999999 912 511.999999999999

T 
1
LANG:1 5 Close
"main()
{
  PanelOff();
}" 0
 E E E
30 5
"FRAME3"
""
1 20 283 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
8 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1 0 1.12738853503185 -10 -279.050955414014 0 E 20 283 311 441
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 4 Rate
25 6
"TABLE2"
""
1 330 66.9999999999994 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main()
{
dyn_string name;
int n,k;

getValue(\"TableCpu\", \"currentCell\", n, k);
name=this.getLineN(n);

     switch (name[1]) 
	     {
	       case \"idle\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"idle:\\n\\nTime percentage the CPU has spent not working.\"));
         break; 
	       case \"iowait\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"iowait:\\n\\nTime percentage the CPU has spent in waiting for \\nI/O to complete.\"));
         break;   
	       case \"irq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"irq:\\n\\nTime percentage the CPU has spent in servicing \\ninterrupts (top halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"nice\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"nice:\\n\\nTime percentage the CPU has spent in niced \\nprocesses in user mode. Time spent in niced tasks \\nwill also be counted in system and user time.\"));
         break;       
	       case \"softirq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"softirq:\\n\\nTime percentage the CPU has spent in servicing \\nsoftirqs (bottom halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"system\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"system:\\n\\nTime percentage the CPU has spent in processes \\nexecuting in kernel mode.\"));
         break;   
	       case \"user\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"user:\\n\\nTime percentage the CPU has spent in normal processes \\nexecuting in user mode.\"));
         break; 
	       case \"ctxtRate\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"ctxtRate:\\n\\nTotal number of context switches per second across \\nall the CPUs.\"));
         break;              
                                 
      
   }
}" 0
 "main()
{
	int n,k;
	dyn_string name, params;

	getValue(\"TableCpu\", \"currentCell\", n, k);
	name=this.getLineN(n);

	if(name[1] == \"ctxtRate\"){
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + name[1]);
	}
	else{
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + $cpu + \".\" + name[1]);
	}

	ChildPanelOnCentral(\"fwFarmMonitorControl/components/fwGeneralTrend.pnl\",
      \"trendPanel\" + $fmcNodeName,
      params);
     
}" 0

10 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 328 64.9999999999994 592 208.999999999999
"main()
{
  int loopTabelCpu=20;
  
	dyn_int linesSelected;

	dyn_string dyn_dpName, dyn_label, dyn_value;
        
	this.visible = true;
	this.enableColumnResize = true;
	this.deleteAllLines;
	this.tableMode(TABLE_SELECT_MULTIPLE);
	this.selectByClick(TABLE_SELECT_LINE);

	dyn_dpName = dpNames($sDpName + \".readings.arate.*\");

	for (int i=1; i<=dynlen(dyn_dpName); i++){
		dyn_label[i] = dyn_dpName[i];
                strreplace(dyn_label[i], $sDpName + \".readings.arate.arate_\", \"\");
	}

	while(TRUE){
		linesSelected = this.getSelectedLines();

		for (int i=1; i<=dynlen(dyn_label); i++){
				dpGet(dyn_dpName[i] + \":_online.._value\", dyn_value[i]);
				dyn_value[i] = dpValToString(dyn_dpName[i], dyn_value[i]);
			this.updateLine(1, \"label\", dyn_label[i], \"value\", dyn_value[i]);
		}

		this.addSelectLines(linesSelected);
		delay(loopTabelCpu);
	}
}" 0
E 1 0 1 2 1 "label" 12 1 0 "s" 1
LANG:1 8 Property
E
1
LANG:1 0 

150 "value" 7 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

90 
14 14 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
30 7
"FRAME4"
""
1 20 283 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
12 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1 0 1.12738853503185 290 -279.050955414014 0 E 20 283 311 441
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 5 aRate
25 8
"TABLE3"
""
1 630 66.9999999999994 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main()
{
dyn_string name;
int n,k;

getValue(\"TableCpu\", \"currentCell\", n, k);
name=this.getLineN(n);

     switch (name[1]) 
	     {
	       case \"idle\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"idle:\\n\\nTime percentage the CPU has spent not working.\"));
         break; 
	       case \"iowait\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"iowait:\\n\\nTime percentage the CPU has spent in waiting for \\nI/O to complete.\"));
         break;   
	       case \"irq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"irq:\\n\\nTime percentage the CPU has spent in servicing \\ninterrupts (top halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"nice\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"nice:\\n\\nTime percentage the CPU has spent in niced \\nprocesses in user mode. Time spent in niced tasks \\nwill also be counted in system and user time.\"));
         break;       
	       case \"softirq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"softirq:\\n\\nTime percentage the CPU has spent in servicing \\nsoftirqs (bottom halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"system\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"system:\\n\\nTime percentage the CPU has spent in processes \\nexecuting in kernel mode.\"));
         break;   
	       case \"user\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"user:\\n\\nTime percentage the CPU has spent in normal processes \\nexecuting in user mode.\"));
         break; 
	       case \"ctxtRate\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"ctxtRate:\\n\\nTotal number of context switches per second across \\nall the CPUs.\"));
         break;              
                                 
      
   }
}" 0
 "main()
{
	int n,k;
	dyn_string name, params;

	getValue(\"TableCpu\", \"currentCell\", n, k);
	name=this.getLineN(n);

	if(name[1] == \"ctxtRate\"){
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + name[1]);
	}
	else{
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + $cpu + \".\" + name[1]);
	}

	ChildPanelOnCentral(\"fwFarmMonitorControl/components/fwGeneralTrend.pnl\",
      \"trendPanel\" + $fmcNodeName,
      params);
     
}" 0

14 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 628 64.9999999999994 892 208.999999999999
"main()
{
  int loopTabelCpu=20;
  
	dyn_int linesSelected;

	dyn_string dyn_dpName, dyn_label, dyn_value;
        
	this.visible = true;
	this.enableColumnResize = true;
	this.deleteAllLines;
	this.tableMode(TABLE_SELECT_MULTIPLE);
	this.selectByClick(TABLE_SELECT_LINE);

	dyn_dpName = dpNames($sDpName + \".readings.mrate.*\");

	for (int i=1; i<=dynlen(dyn_dpName); i++){
		dyn_label[i] = dyn_dpName[i];
                strreplace(dyn_label[i], $sDpName + \".readings.mrate.mrate_\", \"\");
	}

	while(TRUE){
		linesSelected = this.getSelectedLines();

		for (int i=1; i<=dynlen(dyn_label); i++){
				dpGet(dyn_dpName[i] + \":_online.._value\", dyn_value[i]);
				dyn_value[i] = dpValToString(dyn_dpName[i], dyn_value[i]);
			this.updateLine(1, \"label\", dyn_label[i], \"value\", dyn_value[i]);
		}

		this.addSelectLines(linesSelected);
		delay(loopTabelCpu);
	}
}" 0
E 1 0 1 2 1 "label" 12 1 0 "s" 1
LANG:1 8 Property
E
1
LANG:1 0 

150 "value" 7 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

90 
14 14 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
30 9
"FRAME5"
""
1 20 283 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
16 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1 0 1.12738853503185 590 -279.050955414014 0 E 20 283 311 441
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 5 mRate
25 10
"TABLE4"
""
1 30 249.999999999999 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main()
{
dyn_string name;
int n,k;

getValue(\"TableCpu\", \"currentCell\", n, k);
name=this.getLineN(n);

     switch (name[1]) 
	     {
	       case \"idle\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"idle:\\n\\nTime percentage the CPU has spent not working.\"));
         break; 
	       case \"iowait\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"iowait:\\n\\nTime percentage the CPU has spent in waiting for \\nI/O to complete.\"));
         break;   
	       case \"irq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"irq:\\n\\nTime percentage the CPU has spent in servicing \\ninterrupts (top halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"nice\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"nice:\\n\\nTime percentage the CPU has spent in niced \\nprocesses in user mode. Time spent in niced tasks \\nwill also be counted in system and user time.\"));
         break;       
	       case \"softirq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"softirq:\\n\\nTime percentage the CPU has spent in servicing \\nsoftirqs (bottom halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"system\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"system:\\n\\nTime percentage the CPU has spent in processes \\nexecuting in kernel mode.\"));
         break;   
	       case \"user\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"user:\\n\\nTime percentage the CPU has spent in normal processes \\nexecuting in user mode.\"));
         break; 
	       case \"ctxtRate\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"ctxtRate:\\n\\nTotal number of context switches per second across \\nall the CPUs.\"));
         break;              
                                 
      
   }
}" 0
 "main()
{
	int n,k;
	dyn_string name, params;

	getValue(\"TableCpu\", \"currentCell\", n, k);
	name=this.getLineN(n);

	if(name[1] == \"ctxtRate\"){
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + name[1]);
	}
	else{
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + $cpu + \".\" + name[1]);
	}

	ChildPanelOnCentral(\"fwFarmMonitorControl/components/fwGeneralTrend.pnl\",
      \"trendPanel\" + $fmcNodeName,
      params);
     
}" 0

18 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 28 247.999999999999 292 451.8967311758
"main()
{
  int loopTabelCpu=20;
  
	dyn_int linesSelected;

	dyn_string dyn_dpName, dyn_label, dyn_value;
        
	this.visible = true;
	this.enableColumnResize = true;
	this.deleteAllLines;
	this.tableMode(TABLE_SELECT_MULTIPLE);
	this.selectByClick(TABLE_SELECT_LINE);

	dyn_dpName = dpNames($sDpName + \".readings.ratio.*\");

	for (int i=1; i<=dynlen(dyn_dpName); i++){
		dyn_label[i] = dyn_dpName[i];
                strreplace(dyn_label[i], $sDpName + \".readings.ratio.ratio_\", \"\");
	}

	while(TRUE){
		linesSelected = this.getSelectedLines();

		for (int i=1; i<=dynlen(dyn_label); i++){
				dpGet(dyn_dpName[i] + \":_online.._value\", dyn_value[i]);
				dyn_value[i] = dpValToString(dyn_dpName[i], dyn_value[i]);
			this.updateLine(1, \"label\", dyn_label[i], \"value\", dyn_value[i]);
		}

		this.addSelectLines(linesSelected);
		delay(loopTabelCpu);
	}
}" 0
E 1 0 1 2 1 "label" 12 1 0 "s" 1
LANG:1 8 Property
E
1
LANG:1 0 

150 "value" 7 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

90 
14 14 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
30 11
"FRAME6"
""
1 20 283 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
20 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1 0 1.52866242038217 -10 -212.611464968153 0 E 20 283 311 441
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 5 Ratio
25 12
"TABLE5"
""
1 330 250.540697674418 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main()
{
dyn_string name;
int n,k;

getValue(\"TableCpu\", \"currentCell\", n, k);
name=this.getLineN(n);

     switch (name[1]) 
	     {
	       case \"idle\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"idle:\\n\\nTime percentage the CPU has spent not working.\"));
         break; 
	       case \"iowait\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"iowait:\\n\\nTime percentage the CPU has spent in waiting for \\nI/O to complete.\"));
         break;   
	       case \"irq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"irq:\\n\\nTime percentage the CPU has spent in servicing \\ninterrupts (top halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"nice\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"nice:\\n\\nTime percentage the CPU has spent in niced \\nprocesses in user mode. Time spent in niced tasks \\nwill also be counted in system and user time.\"));
         break;       
	       case \"softirq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"softirq:\\n\\nTime percentage the CPU has spent in servicing \\nsoftirqs (bottom halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"system\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"system:\\n\\nTime percentage the CPU has spent in processes \\nexecuting in kernel mode.\"));
         break;   
	       case \"user\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"user:\\n\\nTime percentage the CPU has spent in normal processes \\nexecuting in user mode.\"));
         break; 
	       case \"ctxtRate\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"ctxtRate:\\n\\nTotal number of context switches per second across \\nall the CPUs.\"));
         break;              
                                 
      
   }
}" 0
 "main()
{
	int n,k;
	dyn_string name, params;

	getValue(\"TableCpu\", \"currentCell\", n, k);
	name=this.getLineN(n);

	if(name[1] == \"ctxtRate\"){
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + name[1]);
	}
	else{
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + $cpu + \".\" + name[1]);
	}

	ChildPanelOnCentral(\"fwFarmMonitorControl/components/fwGeneralTrend.pnl\",
      \"trendPanel\" + $fmcNodeName,
      params);
     
}" 0

22 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 328 248.540697674418 592 452.437428850218
"main()
{
  int loopTabelCpu=20;
  
	dyn_int linesSelected;

	dyn_string dyn_dpName, dyn_label, dyn_value;
        
	this.visible = true;
	this.enableColumnResize = true;
	this.deleteAllLines;
	this.tableMode(TABLE_SELECT_MULTIPLE);
	this.selectByClick(TABLE_SELECT_LINE);

	dyn_dpName = dpNames($sDpName + \".readings.aratio.*\");

	for (int i=1; i<=dynlen(dyn_dpName); i++){
		dyn_label[i] = dyn_dpName[i];
                strreplace(dyn_label[i], $sDpName + \".readings.aratio.aratio_\", \"\");
	}

	while(TRUE){
		linesSelected = this.getSelectedLines();

		for (int i=1; i<=dynlen(dyn_label); i++){
				dpGet(dyn_dpName[i] + \":_online.._value\", dyn_value[i]);
				dyn_value[i] = dpValToString(dyn_dpName[i], dyn_value[i]);
			this.updateLine(1, \"label\", dyn_label[i], \"value\", dyn_value[i]);
		}

		this.addSelectLines(linesSelected);
		delay(loopTabelCpu);
	}
}" 0
E 1 0 1 2 1 "label" 12 1 0 "s" 1
LANG:1 8 Property
E
1
LANG:1 0 

150 "value" 7 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

90 
14 14 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
30 13
"FRAME7"
""
1 20 283 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
24 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1 0 1.52866242038217 290 -212.611464968153 0 E 20 283 311 441
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 6 aRatio
25 14
"TABLE6"
""
1 630 250.540697674418 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main()
{
dyn_string name;
int n,k;

getValue(\"TableCpu\", \"currentCell\", n, k);
name=this.getLineN(n);

     switch (name[1]) 
	     {
	       case \"idle\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"idle:\\n\\nTime percentage the CPU has spent not working.\"));
         break; 
	       case \"iowait\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"iowait:\\n\\nTime percentage the CPU has spent in waiting for \\nI/O to complete.\"));
         break;   
	       case \"irq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"irq:\\n\\nTime percentage the CPU has spent in servicing \\ninterrupts (top halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"nice\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"nice:\\n\\nTime percentage the CPU has spent in niced \\nprocesses in user mode. Time spent in niced tasks \\nwill also be counted in system and user time.\"));
         break;       
	       case \"softirq\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"softirq:\\n\\nTime percentage the CPU has spent in servicing \\nsoftirqs (bottom halves). Available only with kernel \\nversion = 2.5 (with previous kernel version this \\nnumber is set to zero).\"));
         break; 
	       case \"system\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"system:\\n\\nTime percentage the CPU has spent in processes \\nexecuting in kernel mode.\"));
         break;   
	       case \"user\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"user:\\n\\nTime percentage the CPU has spent in normal processes \\nexecuting in user mode.\"));
         break; 
	       case \"ctxtRate\":
	             ChildPanelOnCentral(\"fwFarmMonitorControl/help/help.pnl\",
               \"help\",
               makeDynString(\"$text:\" + \"ctxtRate:\\n\\nTotal number of context switches per second across \\nall the CPUs.\"));
         break;              
                                 
      
   }
}" 0
 "main()
{
	int n,k;
	dyn_string name, params;

	getValue(\"TableCpu\", \"currentCell\", n, k);
	name=this.getLineN(n);

	if(name[1] == \"ctxtRate\"){
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + name[1]);
	}
	else{
		dynAppend(params, \"$curve1:\" + $fmcNodeName + \".StCpu.readings.\" + $cpu + \".\" + name[1]);
	}

	ChildPanelOnCentral(\"fwFarmMonitorControl/components/fwGeneralTrend.pnl\",
      \"trendPanel\" + $fmcNodeName,
      params);
     
}" 0

26 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 628 248.540697674418 892 452.437428850218
"main()
{
  int loopTabelCpu=20;
  
	dyn_int linesSelected;

	dyn_string dyn_dpName, dyn_label, dyn_value;
        
	this.visible = true;
	this.enableColumnResize = true;
	this.deleteAllLines;
	this.tableMode(TABLE_SELECT_MULTIPLE);
	this.selectByClick(TABLE_SELECT_LINE);

	dyn_dpName = dpNames($sDpName + \".readings.mratio.*\");

	for (int i=1; i<=dynlen(dyn_dpName); i++){
		dyn_label[i] = dyn_dpName[i];
                strreplace(dyn_label[i], $sDpName + \".readings.mratio.mratio_\", \"\");
	}

	while(TRUE){
		linesSelected = this.getSelectedLines();

		for (int i=1; i<=dynlen(dyn_label); i++){
				dpGet(dyn_dpName[i] + \":_online.._value\", dyn_value[i]);
				dyn_value[i] = dpValToString(dyn_dpName[i], dyn_value[i]);
			this.updateLine(1, \"label\", dyn_label[i], \"value\", dyn_value[i]);
		}

		this.addSelectLines(linesSelected);
		delay(loopTabelCpu);
	}
}" 0
E 1 0 1 2 1 "label" 12 1 0 "s" 1
LANG:1 8 Property
E
1
LANG:1 0 

150 "value" 7 1 0 "s" 1
LANG:1 5 Value
E
1
LANG:1 0 

90 
14 14 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
30 15
"FRAME8"
""
1 20 283 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
28 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1 0 1.52866242038217 590 -212.611464968153 0 E 20 283 311 441
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 6 mRatio
2 16
"PRIMITIVE_TEXT1"
""
1 30 10 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  dyn_string ds = strsplit($sDpName, \"/\");

  this.text = ds[dynlen(ds)]; 
}" 0
 E 0 1 1 2 1 E U  1 E 12 12 212 32
0 2 2 "0s" 0 0 0 64 0 0  12 12 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 7 sssssss
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0