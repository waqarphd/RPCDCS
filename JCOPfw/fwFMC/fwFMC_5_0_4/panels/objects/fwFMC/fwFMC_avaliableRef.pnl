V 11
1
LANG:1 0 
PANEL,-1 -1 172 28 N "_3DFace" 3
"$fs"
"$property"
"$sDpName"
E E E E E 1 -1 -1 0  0 0
""0  1
E "#uses \"fwFMC/fwFMC.ctl\"
" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
10 3
"avail11"
""
1 170 12 E E E 1 E 1 E N "STD_border_dark" E N "STD_available" E E
 E E
3 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
"main()
{
  float x,y;
  string node = fwFMC_getNodeName($sDpName);
  string systemName = dpSubStr($sDpName, DPSUB_SYS);
 
  getValue(\"\",\"position\",x,y);
  string caption;
  if($property == \"fs\")
  {
    string dp = fwFMCMonitoring_getDp(node, systemName) + \"/FS/\" + $fs;
    if(dpExists(dp))
      dpGet(dp + \".readings.file_system\", caption);    
  }
  else
    caption = $property;
//DebugN(\"avail1\", caption);
  addSymbol(myModuleName(), myPanelName(), \"objects/STD_INFOS/minitext_t_r.pnl\", $sDpName + \":\" + caption, makeDynString(),x+1,y,0,1,1);
}









" 0
 E 0 1 1 0 1 E 1 0 1 -8 0 1 E 4 10 12
10 22
170 22
170 12
 0
10 4
"avail12"
""
1 170 22 E E E 1 E 1 E N "STD_border_light" E N "STD_available" E E
 E E
4 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E 1 0 1 -8 0 1 E 3 10 22
10 12
170 12
 0
10 5
"used11"
""
1 10 12 E E E 1 E 1 E N "STD_border_dark" E N "STD_used" E E
 E E
5 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
"main()
{
  string node = fwFMC_getNodeName($sDpName);
  string systemName = dpSubStr($sDpName, DPSUB_SYS);
  float x,y;
  string caption;
  getValue(\"\",\"position\",x,y);
  
  if($property == \"fs\")
  {
    string dp = fwFMCMonitoring_getDp(node, systemName) + \"/FS/\" + $fs;
    if(dpExists(dp))
      dpGet(dp + \".readings.file_system\", caption);    
  }
  else
    caption = $property;
  
  addSymbol(myModuleName(), myPanelName(), \"objects/STD_INFOS/minitext_t_l.pnl\",caption,makeDynString(\"$s_txt:\"+strtoupper(caption)),x,y,0,1,1);


  while(1)
  {
//DebugN(caption);
    display(node, systemName, caption);
    delay(5);
  }
}

display(string node, string systemName, string caption)
{
  do
  {
    delay(0, 500);
  }while (!dpExists($sDpName)); 

  float avail = -1; 
  float val = -1;
  float swap;
  
  if(!dpExists(fwFMCMonitoring_getDp(node, systemName)))  
    avail = 0.;
  else if(strtolower($property) == \"memory\")
  {
    fwFMCMonitoring_getMemoryLoad(node, val, swap, systemName);
    avail = val;
  }
  else if(strtolower($property) == \"cpu\")
  {
    val =  fwFMCMonitoring_getAverageCpuLoad(node, systemName);  
    avail = val;
  }
  else if(strtolower($property) == \"fs\")
  {
    string dp = fwFMCMonitoring_getDp(node, systemName) + \"/FS/\" + $fs;
    if(dpExists(dp))
    {
      int commStatus = -1;
      dpGet(fwFMC_getNodeDp(node, systemName) + \".agentCommunicationStatus.monitoring.fs\", commStatus,
            dp + \".readings.user\", val);
      if(commStatus < 0)
        val = -1;
      
      avail = 100. - val;        
    }
  }  

  if(val == -1)
  {
    commError.visible = true;
    avail = 0.;
  }
  else
  {
    commError.visible = false;
    if(avail > 100.)
      avail = 100.;

    avail = floor(avail*10.)/10.;
  }
  
  setMultiValue(\"avail11\",\"scale\", avail/100.0,1,
  				\"avail12\",\"scale\", avail/100.0,1,
  				\"used11\",\"scale\",1- avail/100.0,1,
  				\"used12\",\"scale\",1- avail/100.0,1,
  				$sDpName + \":\" + caption + \".RAMavail\",\"text\",avail+\"%\");
}










































" 0
 E 0 1 1 0 1 E 1 0 1 -8 0 1 E 4 10 12
10 22
170 22
170 12
 0
10 6
"used12"
""
1 10 22 E E E 1 E 1 E N "STD_border_light" E N "_Transparent" E E
 E E
6 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E 1 0 1 -8 0 0 E 3 10 22
10 12
170 12
 0
6 9
"commError"
""
1 10 10 E E E 1 E 0 E N {0,0,0} E N "FwEquipmentDisabled" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.066666666666667 0 1 -8.666666666666666 12 1 E 10 10 160 0
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
