V 11
1
LANG:1 0 
PANEL,-1 -1 817 573 N "_3DFace" 1
"$sDpName"
E E E E E 1 -1 -1 0  0 0
""0  1
E "#uses \"fwFMC/fwFMC.ctl\"
#uses \"fwFMC/fwFMCIpmi.ctl\"
    
string systemName = dpSubStr($sDpName, DPSUB_SYS);
string node = fwFMC_getNodeName($sDpName);
    
" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
30 5
"FRAME2"
""
1 22 27 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
9 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 0.919306377589033 0 0.958605664488017 0.7752596930412761 194.1176470588235 0 E 22 27 447 177
1
LANG:1 25 Arial,8,-1,5,50,0,0,0,0,0
0 1
LANG:1 4 Fans
30 6
"FRAME3"
""
1 22 27 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
11 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 0.9206885250115679 0 0.958605664488017 1.744852449745505 344.1176470588235 0 E 22 27 447 177
1
LANG:1 25 Arial,8,-1,5,50,0,0,0,0,0
0 1
LANG:1 12 Temperatures
30 7
"FRAME4"
""
1 22 27 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
13 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 0.918980416219259 0 0.958605664488017 391.7824308431763 194.1176470588235 0 E 22 27 447 177
1
LANG:1 25 Arial,8,-1,5,50,0,0,0,0,0
0 1
LANG:1 8 Voltages
1 123 0 "" 3
1 "message" 1 1 "main()
{
  int loopTabelIPMI=5;
  string name;
  string status;
  float value;
  string unit;
  
  string color;
  dyn_string sensorDps;
  
  string node = fwFMC_getNodeName($sDpName);
  string ipmiDp = fwFMCIpmi_getDp(node);

  this.visible = true;
  this.enableColumnResize = true;
  this.deleteAllLines;
  
  this.tableMode(TABLE_SELECT_MULTIPLE);
  this.selectByClick(TABLE_SELECT_LINE);

//  for(int i = 1; i <= dynlen(sensorDps); i++)
//    this.appendLines(1, \"key\", i, \"name\", \"\", 
//                                   \"value\", \"\", 
//                                   \"status\", \"\");
  
  while(TRUE){    
    sensorDps = fwFMCIpmi_getAllSensorDpNames(node, $IPMISensorName);    
    
    for(int i = 1; i <= dynlen(sensorDps); i++)
    {
      name = dpGetAlias(sensorDps[i] + \".value\");
      dyn_string ds = strsplit(name, \"/\");
      
      dpGet(sensorDps[i] + \".value\", value,
            sensorDps[i] + \".status\", status,
            sensorDps[i] + \".unit\", unit);
      
      if(value != -1)
      {
      
        value = floor(value*1000)/1000.;
      
  	this.updateLine(1, \"key\", i, \"name\", ds[dynlen(ds)], 
                                   \"value\", value + \" \" + unit, 
                                   \"status\", status);
      if(status != \"ok\")
	  color = \"FwAlarmFatalAck\";
	else
	  color = \"white\";
	
      this.cellBackColRC(i-1, \"name\") = color;
	this.cellBackColRC(i-1, \"value\") = color;
	this.cellBackColRC(i-1, \"status\") = color;
      }
    }
    
    delay(loopTabelIPMI);
  }
}" 0
 
0
1 124 0 "" 4
0
1 125 1 "" 3
1 "message" 1 1 "main()
{
  int loopTabelIPMI=5;
  string name;
  string status;
  float value;
  string unit;
  
  string color;
  dyn_string sensorDps;
  
  string node = fwFMC_getNodeName($sDpName);
  string ipmiDp = fwFMCIpmi_getDp(node);

  this.visible = true;
  this.enableColumnResize = true;
  this.deleteAllLines;
  
  this.tableMode(TABLE_SELECT_MULTIPLE);
  this.selectByClick(TABLE_SELECT_LINE);

//  for(int i = 1; i <= dynlen(sensorDps); i++)
//    this.appendLines(1, \"key\", i, \"name\", \"\", 
//                                   \"value\", \"\", 
//                                   \"status\", \"\");
  
  while(TRUE){    
    sensorDps = fwFMCIpmi_getAllSensorDpNames(node, $IPMISensorName);    
    
    for(int i = 1; i <= dynlen(sensorDps); i++)
    {
      name = dpGetAlias(sensorDps[i] + \".value\");
      dyn_string ds = strsplit(name, \"/\");
      
      dpGet(sensorDps[i] + \".value\", value,
            sensorDps[i] + \".status\", status,
            sensorDps[i] + \".unit\", unit);
      
      if(value != -1)
      {
      
        value = floor(value*1000)/1000.;
      
  	this.updateLine(1, \"key\", i, \"name\", ds[dynlen(ds)], 
                                   \"value\", value + \" \" + unit, 
                                   \"status\", status);
      if(status != \"ok\")
	  color = \"FwAlarmFatalAck\";
	else
	  color = \"white\";
	
      this.cellBackColRC(i-1, \"name\") = color;
	this.cellBackColRC(i-1, \"value\") = color;
	this.cellBackColRC(i-1, \"status\") = color;
      }
    }
    
    delay(loopTabelIPMI);
  }
}" 0
 
0
1 126 1 "" 4
0
1 127 2 "" 3
1 "message" 1 1 "main()
{
  int loopTabelIPMI=5;
  string name;
  string status;
  float value;
  string unit;
  
  string color;
  dyn_string sensorDps;
  
  string node = fwFMC_getNodeName($sDpName);
  string ipmiDp = fwFMCIpmi_getDp(node);

  this.visible = true;
  this.enableColumnResize = true;
  this.deleteAllLines;
  
  this.tableMode(TABLE_SELECT_MULTIPLE);
  this.selectByClick(TABLE_SELECT_LINE);

//  for(int i = 1; i <= dynlen(sensorDps); i++)
//    this.appendLines(1, \"key\", i, \"name\", \"\", 
//                                   \"value\", \"\", 
//                                   \"status\", \"\");
  
  while(TRUE){    
    sensorDps = fwFMCIpmi_getAllSensorDpNames(node, $IPMISensorName);    
    
    for(int i = 1; i <= dynlen(sensorDps); i++)
    {
      name = dpGetAlias(sensorDps[i] + \".value\");
      dyn_string ds = strsplit(name, \"/\");
      
      dpGet(sensorDps[i] + \".value\", value,
            sensorDps[i] + \".status\", status,
            sensorDps[i] + \".unit\", unit);
      
      if(value != -1)
      {
      
        value = floor(value*1000)/1000.;
      
  	this.updateLine(1, \"key\", i, \"name\", ds[dynlen(ds)], 
                                   \"value\", value + \" \" + unit, 
                                   \"status\", status);
      if(status != \"ok\")
	  color = \"FwAlarmFatalAck\";
	else
	  color = \"white\";
	
      this.cellBackColRC(i-1, \"name\") = color;
	this.cellBackColRC(i-1, \"value\") = color;
	this.cellBackColRC(i-1, \"status\") = color;
      }
    }
    
    delay(loopTabelIPMI);
  }
}" 0
 
0
1 128 2 "" 4
0
13 30
"PUSH_BUTTON3"
""
1 710 530 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  708 528 808 562

T 
1
LANG:1 5 Close
"main()
{
  PanelOff();
}" 0
 E E E
2 54
"PRIMITIVE_TEXT3"
""
1 606.0000000000003 756.9999999999995 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 532.0000000000003 431.9999999999997 634 446
0 2 0 "0s" 0 0 0 192 0 0  532.0000000000003 431.9999999999997 1
1
LANG:1 26 Arial,-1,11,5,50,0,0,0,0,0
0 1
LANG:1 18 Sensors Time Stamp
14 55
"TEXT_FIELD1"
""
1 482 520 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
23 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 26 Arial,-1,11,5,50,0,0,0,0,0
0  480 518 644 540
2 "0s" 0 0 0 0 0 -1  E "// SimpleCtrlScriptStart {invalid}
main()
{
  string node = fwFMC_getDeviceName($sDpName);
  
  string ipmiDp = fwFMCIpmi_getDp(node);
  
  if(fwFMCIpmi_exists(node))
    dpConnect(\"EP_textFieldInCB\",
              ipmiDp + \".readings.sensors_timestamp:_online.._value\");
  else
    this.text = \"N/A\";

}


EP_textFieldInCB(string dp, int iNewValue)
{
  setValue(\"\", \"text\", dpValToString(dp, iNewValue, TRUE) );
}

// SimpleCtrlScript {EP_textFieldIn}
// DP {dist_7:fwFMC_FARM0101.StIPMI.readings.sensors_timestamp}
// DPConfig {:_online.._value}
// DPType {int}
// UseDPUnit {TRUE}
// UseDPFormat {TRUE}
// SimpleCtrlScriptEnd {EP_textFieldIn}
" 0
 E
2 73
"PRIMITIVE_TEXT4"
""
1 22 520 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 22 520 352 540
0 2 2 "0s" 0 0 0 64 0 0  22 520 1
1
LANG:1 25 Arial,8,-1,5,50,0,0,0,0,0
0 1
LANG:1 36 IPMI values are refreshed every 5 s.
1 129 4 "" 3
1 "message" 1 1 "main()
{
  int loopTabelIPMI=5;
  string name;
  string status;
  float value;
  string unit;
  
  string color;
  dyn_string sensorDps;
  
  string node = fwFMC_getNodeName($sDpName);
  string ipmiDp = fwFMCIpmi_getDp(node);

  this.visible = true;
  this.enableColumnResize = true;
  this.deleteAllLines;
  
  this.tableMode(TABLE_SELECT_MULTIPLE);
  this.selectByClick(TABLE_SELECT_LINE);

//  for(int i = 1; i <= dynlen(sensorDps); i++)
//    this.appendLines(1, \"key\", i, \"name\", \"\", 
//                                   \"value\", \"\", 
//                                   \"status\", \"\");
  
  while(TRUE){    
    sensorDps = fwFMCIpmi_getAllSensorDpNames(node, $IPMISensorName);    
    
    for(int i = 1; i <= dynlen(sensorDps); i++)
    {
      name = dpGetAlias(sensorDps[i] + \".value\");
      dyn_string ds = strsplit(name, \"/\");
      
      dpGet(sensorDps[i] + \".value\", value,
            sensorDps[i] + \".status\", status,
            sensorDps[i] + \".unit\", unit);
      
      if(value != -1)
      {
      
        value = floor(value*1000)/1000.;
      
  	this.updateLine(1, \"key\", i, \"name\", ds[dynlen(ds)], 
                                   \"value\", value + \" \" + unit, 
                                   \"status\", status);
      if(status != \"ok\")
	  color = \"FwAlarmFatalAck\";
	else
	  color = \"white\";
	
      this.cellBackColRC(i-1, \"name\") = color;
	this.cellBackColRC(i-1, \"value\") = color;
	this.cellBackColRC(i-1, \"status\") = color;
      }
    }
    
    delay(loopTabelIPMI);
  }
}" 0
 
0
1 130 4 "" 4
0
30 93
"FRAME5"
""
1 22 27 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
28 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 0.9206885250115679 0 0.958605664488017 391.7448524497464 344.1176470588226 0 E 22 27 447 177
1
LANG:1 25 Arial,8,-1,5,50,0,0,0,0,0
0 1
LANG:1 8 Currents
30 121
"FRAME6"
""
1 10 173 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
29 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1.333333333333334 0 7.659574468085107 -3.333333333333371 -1165.106382978723 0 E 10 173 611 221
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0 1
LANG:1 32 Subscribe to sensor information?
19 122
"RADIO_BOX1"
""
1 41 177 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 25 Arial,8,-1,5,50,0,0,0,0,0
0  39 175 103 219
2
T 
1
LANG:1 3 YES

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 2 NO

1 
1
LANG:1 0 
E E
0 0 0 0 0
1
"main()
{
  systemName = dpSubStr($sDpName, DPSUB_SYS);
  node = fwFMC_getNodeName($sDpName);
                      
  dyn_string dps = dpNames(fwFMC_getNodeDp(node, systemName) + \"/Ipmi/*\", \"FwFMCIpmiTempSensor\");
  dynAppend(dps, dpNames(fwFMC_getNodeDp(node, systemName) + \"/Ipmi/*\", \"FwFMCIpmiCurrentSensor\"));
  dynAppend(dps, dpNames(fwFMC_getNodeDp(node, systemName) + \"/Ipmi/*\", \"FwFMCIpmiVoltageSensor\"));
  dynAppend(dps, dpNames(fwFMC_getNodeDp(node, systemName) + \"/Ipmi/*\", \"FwFMCIpmiFanSensor\"));
  
  if(dynlen(dps) > 0)
    this.number(0);
  else
    this.number(1);
  
}




" 0
 "main(int button)
{
  if(button == 0)
  {
    openProgressBar(\"Creating IPMI Sensors\", \"copy.gif\", \"Setting up IPMI sensors for node: \" + node, \"This may take a few seconds.\", \"Please wait\", 1);
    fwFMCIpmi_createSensors(node, systemName);
    closeProgressBar();
  }
  else
  {
    dyn_string ds;
    dyn_float df;
    
    ChildPanelOnCentralModalReturn(\"vision/MessageWarning2\", \"Remove IPMI sensors\", makeDynString(\"$1:Are you sure you want to remove the IPMI sensors\", \"$2:YES\", \"$3:NO\"), df, ds);
    if(dynlen(df) && df[1] == 1.)
    {
      openProgressBar(\"Removing IPMI Sensors\", \"copy.gif\", \"Removing IPMI sensors for node: \" + node, \"This may take a few seconds.\", \"Please wait\", 1);
      fwFMCIpmi_removeSensors(node, systemName);
      closeProgressBar();
    }
    else
      this.number(0);
  }
}






" 0

1 131 5 "" 1
0
1 132 5 "" 14
0
1 133 5 "" 15
0
1 134 5 "" 19
0
1 136 5 "" 22
0
1 137 5 "" 23
0
1 138 5 "" 25
0
1 140 5 "1" 0
0
1 141 5 "1" 5
0
1 142 5 "1" 6
0
1 143 5 "2" 1
0
1 144 5 "2" 2
0
1 135 5 "" 21
0
1 139 5 "" 26
0
1 145 5 "2" 3
0
1 146 5 "2" 4
0
1 147 5 "2" 5
0
1 148 5 "2" 6
0
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
3 0 "PANEL_REF1" -1
"objects/fwFMC/fwFMC_ipmiSensorTableRef.pnl" 16 188 T 14 1 0 1 5.999999999999925 41.99999999999861
2
"$IPMISensorName""fan"
"$sDpName""$sDpName"
3 1 "PANEL_REF2" -1
"objects/fwFMC/fwFMC_ipmiSensorTableRef.pnl" 16 342 T 15 1 0 1 4.749999999999935 44.37472766884392
2
"$IPMISensorName""temp"
"$sDpName""$sDpName"
3 2 "PANEL_REF3" -1
"objects/fwFMC/fwFMC_ipmiSensorTableRef.pnl" 12 488 T 16 1 0 1 400.0000000000003 -258.0000000000005
2
"$IPMISensorName""voltage"
"$sDpName""$sDpName"
3 4 "PANEL_REF4" -1
"objects/fwFMC/fwFMC_ipmiSensorTableRef.pnl" 16 342 T 26 1 0 1 394.7500000000003 44.37472766884346
2
"$IPMISensorName""current"
"$sDpName""$sDpName"
3 5 "PANEL_REF5" -1
"objects/fwFMC/fwFMC_ipmiPowerStatusRef.pnl" 10 0 T 32 1 0 1 -9.999999999999986 -9.999999999999986
1
"$sDpName""$sDpName"
0
