V 10
1
LANG:1 8 (NoName)
PANEL,438 280 1033 417 N "FwTrendingFaceplateBackground" 14
"$Command"
"$CurveColor1"
"$CurveColor2"
"$CurveColor3"
"$CurveDPE1"
"$CurveDPE2"
"$CurveDPE3"
"$CurveLegend1"
"$CurveLegend2"
"$CurveLegend3"
"$CurveRange1"
"$CurveRange2"
"$CurveRange3"
"$TrendRunning"
"main()
{
	axii = makeDynBool(false, false, false);
	//DebugN($TrendRunning);
	//DebugN($TimeRange);
	trendRunning = $TrendRunning == \"TRUE\" ? true : false;
	switch($Command) {
		case \"zoom\": 
			break;
		case \"print\": {
			showButtons(false);
			printPanel(myModuleName(), myPanelName());
			PanelOff();
			break;
		}
	}
}" 0
EE E E 1 -1 -1 0  0 5
"" 0 1
E"dyn_bool axii;
int prevTime = 1;
bool trendRunning = true;

void exportTrend(string fileName) {
	file f;
	dyn_string dpes, leg;
	int i = 0;
	int width, j, count;

	time tStart, tEnd;
	dyn_time dt;
	dyn_float df;
	dyn_int de, di;	
	dyn_dyn_time ddt;
	dyn_dyn_float ddf;
	dyn_dyn_int dde;
	string temp;

	if($CurveDPE1 != \"\") {dpes[i + 1] = $CurveDPE1; leg[i + 1] = Text1.text; i++;}
	if($CurveDPE2 != \"\") {dpes[i + 1] = $CurveDPE2; leg[i + 1] = Text2.text; i++;}
	if($CurveDPE3 != \"\") {dpes[i + 1] = $CurveDPE3; leg[i + 1] = Text3.text; i++;}
	
	width = i;
	if(width == 0) {
		return;
	}
	
	//Trend1.visibleTimeRange(0, tStart, tEnd);
	getValue(\"Trend1\", \"visibleTimeRange\", 0, tStart, tEnd);
			
	for(i = 1; i <= width; i++) {
		dpGetPeriod(tStart, tEnd,  0,
			dpSubStr(dpes[i], DPSUB_SYS_DP_EL) + \":_offline.._value\", df, dt, de);
		// in case there were no values in the timerange selected
		if(dynlen(df) == 0) {
			dpGet(dpSubStr(dpes[i], DPSUB_SYS_DP_EL) + \":_online.._value\", ddf[i][1]);
			dpGet(dpSubStr(dpes[i], DPSUB_SYS_DP_EL) + \":_online.._stime\", ddt[i][1]);
		} else {
			ddt[i] = dt;
			ddf[i] = df;
			dde[i] = de;
		}
		di[i] = 1;
	}
	
	f = fopen(fileName, \"w\");
	if(f == 0) {
		dyn_string excInfo;
        fwException_raise(excInfo , \"WARNING\",
            \"fwFacePlateTrend: the file specified cannot be open.\", \"\");
        fwExceptionHandling_display(excInfo);
        return;
    }
	fputs(\", \", f);
	for(i = 1; i <= width; i++)
		fputs(dpes[i] + \", \", f);
	fputs(\"\\n, \", f);
	for(i = 1; i <= width; i++)
		fputs(leg[i] + \", \", f);
	fputs(\"\\n\", f);

	eventsSort(ddt, de, dt);
	
	for(j = 1; j <= dynlen(dt); j++) {
		string tim = dt[j];
		fputs(tim + \", \", f);
		for(i = 1; i <= width; i++) {
			if((de[j] & (1 << i)) != 0)
				fputs(ddf[i][di[i]++] + \", \", f);
			else
				fputs(\", \", f);
		}
		fputs(\"\\n\", f);
		
	}
	
	fflush(f);
	fclose(f);
}

void eventsSort(dyn_dyn_time ddt, dyn_int & events, dyn_time & times) {	
	dyn_time dtemp;
	dyn_int temp;
	int i;

	if(dynlen(ddt) == 0)
		return;
	for(i = 1; i <= dynlen(ddt[1]); i++)
		events[i] = 2;

	if(dynlen(ddt) == 1)
		return;
	
	temp = events;
	dtemp = ddt[1];
	
	for(i = 2; i <= dynlen(ddt); i++) {
		int j = 1; int k = 1; int l = 1;
		events = makeDynInt();
		times = makeDynTime();
		while(j <= dynlen(dtemp) && k <= dynlen(ddt[i])) {
			while(j <= dynlen(temp) && k <= dynlen(ddt[i]) && dtemp[j] < ddt[i][k]) {
				times[l] = dtemp[j];
				events[l++] = temp[j++];
			}
			while(j <= dynlen(dtemp) && k <= dynlen(ddt[i]) && dtemp[j] > ddt[i][k]) {
				times[l] = ddt[i][k];
				events[l++] = 1 << i; k++;
			}
			while(j <= dynlen(dtemp) && k <= dynlen(ddt[i]) && dtemp[j] == ddt[i][k]) {
				times[l] = dtemp[j];
				events[l++] = temp[j++] | (1 << i);//intpow(2, i);
				k++;
			}
		}
		// remainers (only one of two is executed each time)
		while(j <= dynlen(dtemp)) {
			times[l] = dtemp[j];
			events[l++] = temp[j++];
		}
		while(k <= dynlen(ddt[i])) {
			times[l] = ddt[i][k];
			events[l++] = 1 << i; k++;
		}
		temp = events;
		dtemp = times;
	}
}

void showButtons(bool on) {
	YAxiiCascadeButton.visible = on;
	TimeCascadeButton.visible = on;
	OtherCascadeButton.visible = on;
	ViewCascadeButton.visible = on;
	StopButton.visible = on;
	CloseButton.visible = on;
}" 0
 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 19
"Text4"
""
1 0 20 E E E 1 E 1 E N "Black" E N "_Transparent" E E
 E E
18 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main() {
	if($CurveDPE1 != \"\") {
		string legend = $CurveLegend1;
		strreplace(legend, \"\\\\_\", \" \");
		if(legend != \"\")
			this.text = legend;
		else {
			string comment;
			comment = dpGetComment($CurveDPE1);
			if(comment != \"\")
				this.text = comment;
			else
				this.text = $CurveDPE1;
		}
		if($CurveColor1 != \"\")
			this.foreCol($CurveColor1);
	} else
		this.text = \"\";
}" 0
 E 0 1 1 0 1 E U  0 E 2 22 248 38
0 2 0 "s" 0 0 0 64 0 0  2 22
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 13 $CurveLegend1
2 20
"Text5"
""
1 260 20 E E E 1 E 1 E N "Blue" E N "_Transparent" E E
 E E
19 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main() {
	if($CurveDPE2 != \"\") {
		string legend = $CurveLegend2;
		strreplace(legend, \"\\\\_\", \" \");
		if(legend != \"\")
			//this.text = $CurveLegend2;
			this.text = legend;
		else {
			string comment;
			comment = dpGetComment($CurveDPE2);
			if(comment != \"\")
				this.text = comment;
			else
				this.text = $CurveDPE2;
		}
		if($CurveColor2 != \"\")
			this.foreCol($CurveColor2);
	} else
		this.text = \"\";
}" 0
 E 0 1 1 0 1 E U  0 E 262 22 508 38
0 2 0 "s" 0 0 0 64 0 0  262 22
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 13 $CurveLegend2
2 21
"Text6"
""
1 785 20 E E E 1 E 1 E N "Red" E N "_Transparent" E E
 E E
20 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main() {
	if($CurveDPE3 != \"\") {
		string legend = $CurveLegend3;
		strreplace(legend, \"\\\\_\", \" \");
		if(legend != \"\")
			this.text = legend;
		else {
			string comment;
			comment = dpGetComment($CurveDPE3);
			if(comment != \"\")
				this.text = comment;
			else
				this.text = $CurveDPE3;
		}
		if($CurveColor3 != \"\")
			this.foreCol($CurveColor3);
	} else
		this.text = \"\";
}" 0
 E 0 1 1 0 1 E U  0 E 522 22 768 38
0 2 0 "s" 0 0 0 64 0 0  522 22
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 13 $CurveLegend3
2 22
"valueCurve1"
""
1 180 398 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
21 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{
	this.text = \"\";
	if(isDollarDefined(\"$CurveColor1\"))
	{
		if($CurveColor1 != \"\") 
		{
			this.foreCol($CurveColor1);
		}
	}
}" 0
 E 0 1 1 0 1 E U  1 E 182 400 243 414
0 2 0 "s" 0 0 0 192 0 0  182 400
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 11 valueCurve1
2 23
"curvesTime"
""
1 10 397 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
22 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 12 399 68 413
0 2 0 "s" 0 0 0 192 0 0  12 399
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 10 curvesTime
2 24
"valueCurve2"
""
1 360 398 E E E 1 E 1 E N "Blue" E N "_3DFace" E E
 E E
23 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{
	this.text = \"\";
	if(isDollarDefined(\"$CurveColor2\"))
	{
		if($CurveColor2 != \"\") 
		{
			this.foreCol($CurveColor2);
		}
	}
}" 0
 E 0 1 1 0 1 E U  1 E 362 400 423 414
0 2 0 "s" 0 0 0 192 0 0  362 400
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 11 valueCurve2
2 25
"valueCurve3"
""
1 540 398 E E E 1 E 1 E N "Red" E N "_3DFace" E E
 E E
24 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{
	this.text = \"\";
	if(isDollarDefined(\"$CurveColor3\"))
	{
		if($CurveColor3 != \"\") 
		{
			this.foreCol($CurveColor3);
		}
	}
}" 0
 E 0 1 1 0 1 E U  1 E 542 400 603 414
0 2 0 "s" 0 0 0 192 0 0  542 400
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 11 valueCurve3
2 26
"curvesTimeRange"
""
1 840 0 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
25 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 842 2 928 18
0 2 0 "s" 0 0 0 65 0 0  842 2
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 3 1 h
2 27
"Text1"
""
1 810 0 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
26 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 812 2 838 18
0 2 0 "s" 0 0 0 64 0 0  812 2
 1
1
LANG:1 119 -microsoft windows-Courier New-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,49,Courier New
0 ""
1
LANG:1 3 |<-
2 28
"Text2"
""
1 930 0 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
27 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 932 2 953 18
0 2 0 "s" 0 0 0 64 0 0  932 2
 1
1
LANG:1 119 -microsoft windows-Courier New-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,49,Courier New
0 ""
1
LANG:1 3 ->|
2 29
"curvesTimeRangeHidden"
""
1 430 0 E E E 1 E 0 E N {0,0,0} E N {255,255,255} E E
 E E
28 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 432 2 468 18
1 2 0 "s" 0 0 0 64 0 0  432 2
 1
1
LANG:1 119 -microsoft windows-Courier New-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,49,Courier New
0 ""
1
LANG:1 5 86400
23 0
"Trend1"
""
1 0 20 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"logarithm" "0"
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
-2 18 1032 399
1 "main() {
	dyn_string ranges;
	string temp;
	float min, max;
	string sCurveDPE1, sCurveDPE2, sCurveDPE3;
	
	setValue(\"Trend1\", \"backCol\", \"FwTrendingFaceplateTrendBackground\");

	if(($CurveDPE1 != \"\") && (strpos($CurveDPE1,\":\") == -1))
	{
		sCurveDPE1 = $CurveDPE1 + \":_online.._value\";
	} else {
		sCurveDPE1 = $CurveDPE1;
	}
	if(($CurveDPE2 != \"\") && (strpos($CurveDPE2,\":\") == -1))
	{
		sCurveDPE2 = $CurveDPE2 + \":_online.._value\";
	} else {
		sCurveDPE2 = $CurveDPE2;
	}
	if(($CurveDPE3 != \"\") && (strpos($CurveDPE3,\":\") == -1))
	{
		sCurveDPE3 = $CurveDPE3 + \":_online.._value\";
	} else {
		sCurveDPE3 = $CurveDPE3;
	}

	if(sCurveDPE1 != \"\") {
		string legend;
		
		this.connectDirectly(\"curve_1\", sCurveDPE1);
		
		legend = $CurveLegend1;
		strreplace(legend, \"\\\\_\", \" \");
		if(legend != \"\")
			this.curveLegendName(\"curve_1\", legend);
		else {
			string comment;
			comment = dpGetComment(sCurveDPE1);
			if(comment != \"\")
				this.curveLegendName(\"curve_1\", comment);
			else
				this.curveLegendName(\"curve_1\", $CurveDPE1);
		}

		if($CurveRange1 != \"\") {
			ranges = strsplit($CurveRange1, \":\");
			temp = ranges[1];
			sscanf(ranges[1], \"%f\", min);
			sscanf(ranges[2], \"%f\", max);
			if(min >= max) {
				this.curveAutoscale(\"curve_1\", true);
				this.curveAutoscale(\"invalid_1\", true);
			} else {
				//DebugN(\"Trying to set the scales for 1.\");
				this.curveAutoscale(\"curve_1\", false);
				this.curveAutoscale(\"invalid_1\", false);
				this.curveMin(\"curve_1\", min);
				this.curveMax(\"curve_1\", max);	
				this.curveMin(\"invalid_1\", min);
				this.curveMax(\"invalid_1\", max);	
			}
		} else {
			this.curveAutoscale(\"curve_1\", true);
			this.curveAutoscale(\"invalid_1\", true);
		}
		if($CurveColor1 != \"\") {
			this.curveColor(\"curve_1\", $CurveColor1);
			this.curveColor(\"invalid_1\", $CurveColor1);
		}
	} else {
		this.curveLegendVisibility(\"curve_1\", false);
	}
	this.curveScaleVisibility(\"curve_1\", axii[1]);
	
	if(sCurveDPE2 != \"\") {
		string legend;
		
		this.connectDirectly(\"curve_2\", sCurveDPE2);

		legend = $CurveLegend2;
		strreplace(legend, \"\\\\_\", \" \");
		if(legend != \"\")
			this.curveLegendName(\"curve_2\", legend);
		else {
			string comment;
			comment = dpGetComment(sCurveDPE2);
			if(comment != \"\")
				this.curveLegendName(\"curve_2\", comment);
			else
				this.curveLegendName(\"curve_2\", $CurveDPE2);
		}

		if($CurveRange2 != \"\") {
			ranges = strsplit($CurveRange2, \":\");
			sscanf(ranges[1], \"%f\", min);
			sscanf(ranges[2], \"%f\", max);
			if(min >= max) {
				this.curveAutoscale(\"curve_2\", true);
				this.curveAutoscale(\"invalid_2\", true);
			} else {
				this.curveAutoscale(\"curve_2\", false);
				this.curveAutoscale(\"invalid_2\", false);
				this.curveMin(\"curve_2\", min);
				this.curveMax(\"curve_2\", max);	
				this.curveMin(\"invalid_2\", min);
				this.curveMax(\"invalid_2\", max);	
			}
		} else {
			this.curveAutoscale(\"curve_2\", true);
			this.curveAutoscale(\"invalid_2\", true);
		}
		if($CurveColor2 != \"\") {
			this.curveColor(\"curve_2\", $CurveColor2);
			this.curveColor(\"invalid_2\", $CurveColor2);
		}
	} else {
		this.curveLegendVisibility(\"curve_2\", false);
	}
	this.curveScaleVisibility(\"curve_2\", axii[2]);

	if(sCurveDPE3 != \"\") {
		string legend;

		this.connectDirectly(\"curve_3\", sCurveDPE3);

		legend = $CurveLegend3;
		strreplace(legend, \"\\\\_\", \" \");
		if(legend != \"\")
			this.curveLegendName(\"curve_3\", legend);
		else {
			string comment;
			comment = dpGetComment(sCurveDPE3);
			if(comment != \"\")
				this.curveLegendName(\"curve_3\", comment);
			else
				this.curveLegendName(\"curve_3\", $CurveDPE3);
		}

		if($CurveRange3 != \"\") {
			ranges = strsplit($CurveRange3, \":\");
			sscanf(ranges[1], \"%f\", min);
			sscanf(ranges[2], \"%f\", max);
			if(min >= max) {
				this.curveAutoscale(\"curve_3\", true);
				this.curveAutoscale(\"invalid_3\", true);
			} else {
				this.curveAutoscale(\"curve_3\", false);
				this.curveAutoscale(\"invalid_3\", false);
				this.curveMin(\"curve_3\", min);
				this.curveMax(\"curve_3\", max);	
				this.curveMin(\"invalid_3\", min);
				this.curveMax(\"invalid_3\", max);	
			}
		} else {
			this.curveAutoscale(\"curve_3\", true);
			this.curveAutoscale(\"invalid_3\", true);
		}
		if($CurveColor3 != \"\") {
			this.curveColor(\"curve_3\", $CurveColor3);
			this.curveColor(\"invalid_3\", $CurveColor3);
		}
	} else {
		this.curveLegendVisibility(\"curve_3\", false);
	}
	this.curveScaleVisibility(\"curve_3\", axii[3]);

	this.curveLegendVisibility(\"invalid_1\", false);
	this.curveLegendVisibility(\"invalid_2\", false);
	this.curveLegendVisibility(\"invalid_3\", false);
	
	invalidMark();
}

// workaround for showing invalid values
invalidMark() {
	if($CurveDPE1 != \"\" && dpExists($CurveDPE1)) {
		string elName;
		elName = dpSubStr($CurveDPE1, DPSUB_DP_EL);
		dpConnect(\"workCB1\", elName + \":_online.._value\",
			elName + \":_online.._bad\",
			elName + \":_online.._stime\");
	}
	if($CurveDPE2 != \"\" && dpExists($CurveDPE2)) {
		string elName;
		elName = dpSubStr($CurveDPE2, DPSUB_DP_EL);
		dpConnect(\"workCB2\", elName + \":_online.._value\",
			elName + \":_online.._bad\",
			elName + \":_online.._stime\");
	}
	if($CurveDPE3 != \"\" && dpExists($CurveDPE3)) {
		string elName;
		elName = dpSubStr($CurveDPE3, DPSUB_DP_EL);
		dpConnect(\"workCB3\", elName + \":_online.._value\",
			elName + \":_online.._bad\",
			elName + \":_online.._stime\");
	}
}

workCB1( string dp1 , float fValue ,
        string dp2 , bool binv ,  
        string dp3 , time tInv ) {
	if(binv) { 
  		this.curveVal(\"invalid_1\", fValue, tInv);
	}
}

workCB2( string dp1 , float fValue ,
        string dp2 , bool binv ,  
        string dp3 , time tInv ) {
	if(binv) { 
  		this.curveVal(\"invalid_2\", fValue, tInv);
	}
}

workCB3( string dp1 , float fValue ,
        string dp2 , bool binv ,  
        string dp3 , time tInv ) {
	if(binv) { 
  		this.curveVal(\"invalid_3\", fValue, tInv);
	}
}
" 0
 E E 1 356 N {0,0,0} 0 0 1 0 1 0 6
0 "curve_1" "" 7 1 0 0 1 "3 2 0.0" "%x" 1 1 2 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "valueCurve1" "curvesTime" -1 0 0 1 0 1 N "Black" 0 0 0 0 0 0 0 0
0 "curve_2" "" 7 1 0 0 1 "3 2 0.0" "%x" 1 1 2 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "valueCurve2" "" -1 0 0 1 0 1 N "Blue" 0 0 0 0 0 0 0 0
0 "curve_3" "" 7 1 0 0 1 "3 2 0.0" "%x" 1 1 2 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "valueCurve3" "" -1 0 0 1 0 1 N "Red" 0 0 0 0 0 0 0 0
0 "invalid_1" "" 1 0 0 0 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "Black" 0 0 0 0 0 0 0 0
0 "invalid_2" "" 1 0 0 0 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "Blue" 0 0 0 0 0 0 0 0
0 "invalid_3" "" 1 0 0 0 0 E E 1 0 0 3 2 1
LANG:1 0 
1
LANG:1 0 
1 "" "" -1 0 0 1 0 1 N "Red" 0 0 0 0 0 0 0 0
1 1 "%X" "%x" 1 1 0 0 E 1 0 0 0 5 1 600 3600
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""

30 N {0,0,0} 0 0 1 0 1 150 0 5 5 1 3
0
13 13
"CloseButton"
""
1 980 410 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
12 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
978 -2 1037 22
T 
1
LANG:1 5 Close
"main() {
	PanelOff();
}" 0
 E E E
13 30
"StopButton"
""
1 0 0 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
29 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
-2 -2 42 22
T 
1
LANG:1 4 Stop
"main() {
	if(trendRunning = !trendRunning) {
		Trend1.trendRun();
		TimeCascadeButton.enableItem(\"7\",FALSE);
		YAxiiCascadeButton.enableItem(\"4\",FALSE);
		resetTrendZoomButton.enabled = FALSE;
		this.text = \"Stop\";
	} else {
		Trend1.trendStop();
		Trend1.trendRefresh();
		TimeCascadeButton.enableItem(\"7\",TRUE);
		YAxiiCascadeButton.enableItem(\"4\",TRUE);
		resetTrendZoomButton.enabled = TRUE;
		this.text = \"Run\";
	}
}" 0
 E E E
26 31
"TimeCascadeButton"
""
1 40 0 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
30 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
38 -2 112 22
0 1
LANG:1 10 Time Range
"" 0 0 0 0 0
8 1 1
LANG:1 10 10 minutes
"10minutes" 0 0 0 0 0
1 1
LANG:1 10 1 hour   *
"1hour" 0 0 0 0 0
1 1
LANG:1 7 8 hours
"8hours" 0 0 0 0 0
1 1
LANG:1 5 1 day
"1day" 0 0 0 0 0
1 1
LANG:1 7 10 days
"10days" 0 0 0 0 0
1 1
LANG:1 14 User specified
"userSpec" 0 0 0 0 0
1 1
LANG:1 3 ___
"new_sep" 0 0 0 0 0
0 1
LANG:1 4 Zoom
"xzoom" 0 0 0 0 0
2 1 1
LANG:1 7 Zoom in
"xzoomin" 1 0 0 37 0
1 1
LANG:1 8 Zoom out
"xzoomout" 1 0 0 39 0
E "int prev = 2;

void changeTrendTime(time tBegin, time tRange) {
	if(trendRunning) {
		Trend1.trendStop();
		Trend1.timeInterval(tRange);
		Trend1.timeBegin(tBegin);
		Trend1.trendRun();
	} else {
		Trend1.timeInterval(tRange);
		Trend1.timeBegin(tBegin);
	}
}

void changeTrendTimeRange(int range) {
	time tb, te;
	int inter;
	getValue(\"Trend1\", \"visibleTimeRange\", 0, tb, te);
	inter = te - tb;
	tb = tb + inter / 2 - range / 2;
	if(!trendRunning) {
//		Trend1.trendStop();
		Trend1.timeInterval(range);
//		Trend1.timeBegin(tb);
//		Trend1.trendRun();
	} else {
		Trend1.timeInterval(range);
	//	Trend1.timeBegin(tb);
	}
}

main(string id) {
	dyn_string ids = makeDynString(\"10minutes\", \"1hour\", \"8hours\", \"1day\", \"10days\", \"userSpec\", \"xzoomin\", \"xzoomout\");
	dyn_string texts = makeDynString(\"10 minutes\", \"1 hour\", \"8 hours\", \"1 day\", \"10 days\", \"User Specified\");
	string sTimeRange;
	switch (id) {
		case ids[1] : {
			this.textItem(prev - 1, texts[prev]);
			prev = 1;
			this.textItem(prev - 1, texts[prev] + \"  *\");
			setValue(\"curvesTimeRange\",\"text\",\"10 min\");
			changeTrendTimeRange(600);
			break;	
		}
		case ids[2] : {
			this.textItem(prev - 1, texts[prev]);
			prev = 2;
			this.textItem(prev - 1, texts[prev] + \"  *\");
			setValue(\"curvesTimeRange\",\"text\",\"1 h\");
			changeTrendTimeRange(3600);
			break;	
		}
		case ids[3] : {
			this.textItem(prev - 1, texts[prev]);
			prev = 3;
			this.textItem(prev - 1, texts[prev] + \"  *\");
			setValue(\"curvesTimeRange\",\"text\",\"8 h\");
			changeTrendTimeRange(28800);
			break;	
		}
		case ids[4] : {
			this.textItem(prev - 1, texts[prev]);
			prev = 4;
			this.textItem(prev - 1, texts[prev] + \"  *\");
			setValue(\"curvesTimeRange\",\"text\",\"1 d\");
			changeTrendTimeRange(86400);
			break;	
		}
		case ids[5] : {
			this.textItem(prev - 1, texts[prev]);
			prev = 5;
			this.textItem(prev - 1, texts[prev] + \"  *\");
			setValue(\"curvesTimeRange\",\"text\",\"10 d\");
			changeTrendTimeRange(864000);
			break;	
		}
		case ids[6] : {
			dyn_string ds; dyn_float df;
			int d, h, m, t; 
			sTimeRange = curvesTimeRangeHidden.text;
			sscanf(sTimeRange,\"%d\",t);
			d = t / 86400;
			h = t % 86400 / 3600;
			m = t % 3600 / 60;
			ChildPanelOnCentralModalReturn(\"fwTrending/fwTrendingTimeSpec.pnl\", \"Specify a Time Period\",
				makeDynString(\"$iDays:\"+d,\"$iHours:\"+h,\"$iMins:\"+m), df, ds);
			if(dynlen(ds) > 0 && ds[1] == \"ok\") {
				d = df[1]; h = df[2]; m = df[3];
				//this.textItem(prev - 1, texts[prev] + \"  *\");
				t = d * 86400 + h * 3600 + m * 60;
				d = t / 86400;
				h = t % 86400 / 3600;
				m = t % 3600 / 60;
				if(t > 0) {
					this.textItem(prev - 1, texts[prev]);
					prev = 6;
					this.textItem(\"5\", texts[6] + \" (\" + d + \"d \" + h + \"h \" + m + \"m)  *\");
					sprintf(sTimeRange,\"%3d d %2d h %2d m\",d,h,m);
					setValue(\"curvesTimeRange\",\"text\",sTimeRange);
					sprintf(sTimeRange,\"%d\",t);
					curvesTimeRangeHidden.text = t;
					changeTrendTimeRange(t);
				}
			}
			break;
		}
		case ids[7] : {
			Trend1.trendTimePlus();
			break;	
		}
		case ids[8] : {
			Trend1.trendTimeMinus();
			break;	
		}
	}
}" 0
 0 
26 32
"YAxiiCascadeButton"
""
1 161 452 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
31 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
108 -2 162 22
0 1
LANG:1 6 Y Axes
"" 0 0 0 0 0
5 1 1
LANG:1 7 Legend1
"curve1" 0 0 0 0 0
1 1
LANG:1 7 Legend2
"curve2" 0 0 0 0 0
1 1
LANG:1 7 Legend3
"curve3" 0 0 0 0 0
1 1
LANG:1 3 ___
"new_sep" 0 0 0 0 0
0 1
LANG:1 4 Zoom
"yzoom" 0 0 0 0 0
2 1 1
LANG:1 7 Zoom in
"yzoomin" 1 0 0 40 0
1 1
LANG:1 8 Zoom out
"yzoomout" 1 0 0 38 0
"main() {
	dyn_string texts;
	
	if($CurveDPE1 != \"\") {
		if($CurveLegend1 != \"\") {
			string legend = $CurveLegend1;
			strreplace(legend, \"\\\\_\", \" \");
			texts[1] = legend;
		}
		else {
			string comment;
			comment = dpGetComment($CurveDPE1);
			if(comment != \"\")
				texts[1] = comment;
			else
				texts[1] = $CurveDPE1;
		}
		if(axii[1])
			texts[1] += \"  *\";
	} else {
		texts[1] = \"---\";
		this.enableItem(\"0\", false);
	}
	this.textItem(\"0\", texts[1]);
		
	if($CurveDPE2 != \"\") {
		if($CurveLegend2 != \"\") {
			string legend = $CurveLegend2;
			strreplace(legend, \"\\\\_\", \" \");
			texts[2] = legend;
		}
		else {
			string comment;
			comment = dpGetComment($CurveDPE2);
			if(comment != \"\")
				texts[2] = comment;
			else
				texts[2] = $CurveDPE2;
		}
		if(axii[2])
			texts[2] += \"  *\";	
	} else {
		texts[2] = \"---\";
		this.enableItem(\"1\", false);
	}
	this.textItem(\"1\", texts[2]);

	if($CurveDPE3 != \"\") {
		if($CurveLegend3 != \"\") {
			string legend = $CurveLegend3;
			strreplace(legend, \"\\\\_\", \" \");
			texts[3] = legend;
		}
		else {
			string comment;
			comment = dpGetComment($CurveDPE3);
			if(comment != \"\")
				texts[3] = comment;
			else
				texts[3] = $CurveDPE3;
		}
		if(axii[3])
			texts[3] += \"  *\";	
	} else {
		texts[3] = \"---\";
		this.enableItem(\"2\", false);
	}
	this.textItem(\"2\", texts[3]);
}" 0
 "main(string id) {
	int i;
	switch(id) {
		case \"curve1\":
			axii[1] = !axii[1];
			if(axii[1])
				this.textItem(\"0\", ($CurveLegend1 != \"\" ? $CurveLegend1 : $CurveDPE1) + \"  *\");
			else 
				this.textItem(\"0\", $CurveLegend1 != \"\" ? $CurveLegend1 : $CurveDPE1);
			break;
		case \"curve2\":
			axii[2] = !axii[2];
			if(axii[2])
				this.textItem(\"1\", ($CurveLegend2 != \"\" ? $CurveLegend2 : $CurveDPE2) + \"  *\");
			else 
				this.textItem(\"1\", $CurveLegend2 != \"\" ? $CurveLegend2 : $CurveDPE2);
			break;
		case \"curve3\":
			axii[3] = !axii[3];
			if(axii[3])
				this.textItem(\"2\", ($CurveLegend3 != \"\" ? $CurveLegend3 : $CurveDPE3) + \"  *\");
			else 
				this.textItem(\"2\", $CurveLegend3 != \"\" ? $CurveLegend3 : $CurveDPE3);
			break;
		case \"yzoomin\":
			Trend1.trendValuePlus();
			break;
		case \"yzoomout\":
			Trend1.trendValueMinus();
			break;
	}
	for(i = 1; i <= 3; i++)
		Trend1.curveScaleVisibility(\"curve_\" + i, false);
	for(i = 1; i <= 3; i++)
		Trend1.curveScaleVisibility(\"curve_\" + i, axii[i]);
}" 0
 0 
26 6
"ViewCascadeButton"
""
1 160 226 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
7 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
158 -2 242 22
0 1
LANG:1 12 View Setting
"" 0 0 0 0 0
2 1 1
LANG:1 8 Controls
"controls" 0 0 0 0 0
1 1
LANG:1 6 Legend
"legend" 0 0 0 0 0
E "bool controls = false;
bool legend = false;
main(string id) {
	dyn_string ids = makeDynString(\"controls\", \"legend\");
	dyn_string texts = makeDynString(\"Controls\", \"Legend\");
	switch (id) {
		case ids[1] :
			if(controls)	
				this.textItem(0, texts[1]);
			else
				this.textItem(0, texts[1] + \"  *\");
			controls = !controls;
			Trend1.manageCommands(controls);
			//setValue(\"TrendRef.Trend1\", \"manageCommands\", controls);
			break;	
		case ids[2] :
			if(legend)	
				this.textItem(1, texts[2]);
			else
				this.textItem(1, texts[2] + \"  *\");
			legend = !legend;
			Trend1.manageLegend(legend);
			break;	
	}
}" 0
 0 
26 7
"OtherCascadeButton"
""
1 281 452 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
8 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
238 -2 282 22
0 1
LANG:1 5 Other
"" 0 0 0 0 0
3 1 1
LANG:1 7 Zoom  *
"zoom" 0 0 0 0 0
1 1
LANG:1 13 Export to CSV
"export" 0 0 0 0 0
1 1
LANG:1 5 Print
"print" 0 0 0 0 0
"main()
{
	this.enableItem(\"0\", false);
}" 0
 "main(string id) {
	switch(id) {
		case \"print\" : 
			showButtons(false);
			printPanel(myModuleName(), myPanelName());
			showButtons(true);
			break;
		case \"export\": {
			string fileStr;
			bool noArch = false;
			int archive;
			
			if($CurveDPE1 != \"\") {
				dpGet(dpSubStr($CurveDPE1, DPSUB_SYS_DP_EL) + \":_archive.._type\", archive);	
				noArch = noArch || (archive == DPCONFIG_NONE ? true : false);
			}
			if($CurveDPE2 != \"\") {
				dpGet(dpSubStr($CurveDPE2, DPSUB_SYS_DP_EL) + \":_archive.._type\", archive);	
				noArch = noArch || (archive == DPCONFIG_NONE ? true : false);
			}
			if($CurveDPE3 != \"\") {
				dpGet(dpSubStr($CurveDPE3, DPSUB_SYS_DP_EL) + \":_archive.._type\", archive);	
				noArch = noArch || (archive == DPCONFIG_NONE ? true : false);
			}
			if(noArch) {
				dyn_string exceptionInfo;
				fwException_raise(exceptionInfo, \"WARNING\",
            		\"fwTrendingFaceplateZoom.pnl: Some of the datapoints don't have archiving on, and thus may be not exported correctly.\", \"\");
				fwExceptionHandling_display(exceptionInfo);
			}
			
			fileSelector(fileStr, \"\", false, \"*.csv\");
			if(fileStr != \"\")
				exportTrend(fileStr);
			break;
		}
	}
}" 0
 0 
13 33
"resetTrendZoomButton"
""
1 280 0 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
32 1 0 0 82 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
278 -2 312 22
T 
1
LANG:1 3 1:1
"main()
{
	Trend1.trendUnzoom();
}" 0
 E E E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0